cset: moving following pidspec: 21010
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.632487351 seconds)
loading group "shootout"... done (took 1.245634862 seconds)
loading group "string"... done (took 0.418940432 seconds)
loading group "linalg"... done (took 7.992115426 seconds)
loading group "parallel"... done (took 0.151922412 seconds)
loading group "find"... done (took 1.480195788 seconds)
loading group "tuple"... done (took 1.976791111 seconds)
loading group "union"... done (took 12.950599077 seconds)
loading group "dates"... done (took 1.353755889 seconds)
loading group "micro"... done (took 0.204771475 seconds)
loading group "simd"... done (took 4.346693514 seconds)
loading group "io"... done (took 0.968420755 seconds)
loading group "random"... done (took 8.472827202 seconds)
loading group "problem"... done (took 1.63506863 seconds)
loading group "array"... done (took 19.48022411 seconds)
loading group "misc"... done (took 1.527481888 seconds)
loading group "scalar"... done (took 39.14173217 seconds)
loading group "sort"... done (took 3.144562924 seconds)
loading group "sparse"... done (took 11.827560527 seconds)
loading group "collection"... done (took 17.287054877 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538059046 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128669505 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13911217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121928929 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.158952475 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119340276 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126634075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086161752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.929143182 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150805019 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114651362 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.484605141 seconds)
done (took 5.536405151 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180947438 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090896888 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079465269 seconds)
  done (took 1.281242349 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064328393 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128808341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065365291 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066176502 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066531574 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065480318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065458301 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065468395 seconds)
  done (took 1.633236386 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07221034 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067682094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0674551 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067511775 seconds)
  done (took 1.385718166 seconds)
done (took 5.675052814 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.254606592 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.113266111 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.313930179 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.411091147 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.495488308 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090895847 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073160255 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06958411 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126106201 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3242881 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12043028 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.200315409 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100316208 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.179894994 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.047685855 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133526496 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084082782 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125525987 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092641417 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130424371 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.428174534 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076009251 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074830859 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070784041 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067124173 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643798677 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674123087 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134333671 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082252014 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.103008387 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115690057 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.651178601 seconds)
  done (took 10.761357574 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104177463 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100198583 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067722341 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125663893 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100567086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068949355 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074362859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066996114 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090277598 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129920285 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091391871 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110431859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065158524 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068517868 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085456303 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.1989282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079429699 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081165462 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067825472 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078843991 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107323964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077816737 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079374226 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07973568 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128255849 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167466719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095958236 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096573966 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065258195 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081308328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114205286 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1284095 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066817109 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065103332 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129356493 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093668307 seconds)
  done (took 4.589483359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.19167756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092082655 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10918506 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.658625842 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06581527 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.160349227 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249030023 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072940949 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.416291016 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.16695145 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.156468583 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064109436 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.149894865 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.124243 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069830825 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.364127644 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.128707536 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.602657729 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068227316 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067655858 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064285546 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076331917 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068024997 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063593234 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078433039 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09107959 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.089171868 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.206685018 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.047910793 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.31922085 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071491113 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165928442 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.092665406 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.373991313 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071145809 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094604769 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.407988344 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.128443351 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066177875 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178475523 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.132384332 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065184584 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.124856527 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081576517 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07110928 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072634321 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09613022 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070334909 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08116726 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081757982 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103451399 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068570223 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065386788 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172393408 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06539122 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067765386 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068911973 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150431271 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067016486 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.162799725 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065645894 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069365897 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096664969 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072015054 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.096811483 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120935896 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.339543462 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.083335148 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069464803 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.218872072 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076991706 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067088554 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.086092833 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067489393 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069631405 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068820394 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.078900139 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.07115528 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064924246 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069110171 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111616443 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067838558 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070629012 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066411782 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07309026 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101039462 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066112066 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.47717315 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100873079 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067162637 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.080287457 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108258198 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068104244 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07584771 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069334599 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.072862691 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067125061 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068840565 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07263013 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.203454732 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.073185237 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113564197 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.026646179 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075620445 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06772202 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073767647 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073341526 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065380971 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070704674 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067276114 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072516905 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069933818 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066281931 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.120911785 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067287313 seconds)
  done (took 22.866789353 seconds)
done (took 40.520957742 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269223347 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089609213 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090335409 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.090193189 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092211756 seconds)
  done (took 1.848820923 seconds)
done (took 3.044082543 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.112958135 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.066194958 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.106719008 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.106329322 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065616939 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065528505 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.101907798 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.065664238 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.104420305 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.10702238 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.110344099 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.109263144 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066820227 seconds)
  done (took 2.402849387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.074628192 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.083694344 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.087127893 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.064885392 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.075555842 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.084642975 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.065062977 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083220094 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.091033684 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084123845 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084022069 seconds)
  done (took 2.072502296 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071254497 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.083939052 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.088201671 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06544083 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.076207159 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.085038306 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.065308775 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.084487739 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089874872 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084873206 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.085062762 seconds)
  done (took 2.067782199 seconds)
done (took 7.725855384 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082101983 seconds)
  done (took 1.26053293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.63949417 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.254977693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083903926 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109232972 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194898088 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108402139 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246902602 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08163312 seconds)
  done (took 9.102760009 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095360306 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079488151 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067337258 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067746258 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068280091 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06792711 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066823432 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067768477 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067935986 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068165206 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067289023 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068775268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067898001 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066915051 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067210601 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067405881 seconds)
  done (took 2.405854889 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096707355 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095149845 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07246179 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074012637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070632599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069957564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073259808 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072489456 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06964639 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07085782 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07448299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072040825 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071523496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06307102 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072370691 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075009908 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069032934 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072527724 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073424263 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074528331 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07417926 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062911396 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071538059 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072760033 seconds)
  done (took 3.079212913 seconds)
done (took 17.038467421 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11613544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077300206 seconds)
  done (took 1.385585882 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078813732 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079862907 seconds)
  done (took 1.367034962 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079768959 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06079851 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088798918 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074968211 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061345915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060784931 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086450111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061712666 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060850679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061427135 seconds)
  done (took 1.90657275 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063862367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074132006 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069455313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078828601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069973645 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062983817 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067532036 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062989247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073770385 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06169329 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068269808 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082426294 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067084123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084916479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067686539 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067899106 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070488141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066860565 seconds)
  done (took 2.469070216 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061215045 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062801252 seconds)
  done (took 1.335938355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06598062 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062730143 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065568007 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066388082 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062949214 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061075071 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062557971 seconds)
  done (took 1.654537033 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377952152 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123642168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326729603 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068542192 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078675177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255931751 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061701889 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068163161 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067938249 seconds)
  done (took 2.684854482 seconds)
done (took 14.021670636 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079004849 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084630931 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097406295 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463571255 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090388169 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065280494 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112141227 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180051985 seconds)
done (took 2.395984056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20536777 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.524151952 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.816288289 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064185915 seconds)
  done (took 3.617214312 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338776326 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085723288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074983767 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06459348 seconds)
  done (took 1.789680483 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064791152 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068496297 seconds)
  done (took 1.357588658 seconds)
done (took 8.192235675 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062620864 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063075723 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063115576 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062274705 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062985932 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062548974 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087933333 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061980431 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062666359 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063072689 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062315938 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062292667 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062053963 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062185689 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062074421 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062232341 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062062061 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062131155 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062289621 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062184019 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06280746 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062469923 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062261634 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062256913 seconds)
  done (took 2.779781136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081502985 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064993054 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067157875 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066275707 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066735956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066475659 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066042319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064441536 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066507668 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063929887 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06682543 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066659038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064259183 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066919888 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064576485 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066792678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066341563 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0643888 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064213793 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066799542 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066088866 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064874909 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066826325 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066153037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066801094 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06680351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065020447 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064818347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066175235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066689563 seconds)
  done (took 3.222086526 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063357958 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05887156 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060352884 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067842571 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059461297 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060249631 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060362064 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059129595 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059544078 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061061921 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06016001 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059464965 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060121182 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059167365 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059466827 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059989456 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062829054 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076650014 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060110274 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059634599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063238679 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059471908 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.05934135 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059416074 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.06011523 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059214936 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062005716 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059943018 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059324623 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059898326 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.05941123 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062850315 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063612646 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059034591 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067965201 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063149122 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059118744 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062949163 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.06130622 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059237435 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059445953 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059237013 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059813044 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059506297 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068164718 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059725153 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060899373 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05965873 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059661992 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059153927 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059443327 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061590358 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064008404 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061006217 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058912192 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060913469 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058681704 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060266174 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059229762 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059066277 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058810557 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061815926 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061426949 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060133844 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076401451 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061394608 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067518695 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058643047 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060141747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062136964 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059962663 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074501077 seconds)
  done (took 5.655714091 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089650476 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088741411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064144653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06371431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060238394 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059976998 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068641057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060221711 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063997261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079228274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059841575 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064028397 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063559629 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063963883 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060599689 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064221419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068999204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060181517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060143772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064433978 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060439107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068229187 seconds)
  done (took 2.706298854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14859496 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066917602 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104776256 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082577487 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069113615 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07851128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066118459 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066463474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066437182 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066934864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066952766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06607509 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06916764 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066693305 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066533571 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066542392 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065968022 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066538429 seconds)
  done (took 2.593793921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077285038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065178428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085739489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065173072 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065598231 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065953498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069695847 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07145233 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065499798 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065186566 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071051332 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065296432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065235901 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065438185 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06509001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065274147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064999804 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065455016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071634301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069867749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069837069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071171041 seconds)
  done (took 2.751869661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077173298 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064448302 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080003524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066252026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059832009 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060780162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066206772 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064384172 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065742563 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063964857 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064564835 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060362742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065981802 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064529369 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066959201 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064067992 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064218828 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064822738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064143532 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059977304 seconds)
  done (took 2.556196668 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094310723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063957069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063528844 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081751611 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063418025 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063905859 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08190883 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063754648 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063429571 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085089314 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063333165 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063413164 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081466189 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081729352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063261559 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081479913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081246181 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083991258 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063450641 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063829308 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085403601 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063344784 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081118078 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063360658 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063118322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062999432 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063412602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081691409 seconds)
  done (took 3.265244507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071834895 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062601602 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063072246 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062701642 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062903526 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063443217 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063088708 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062822305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064018901 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062886125 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062509932 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062644943 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062696819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062256936 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062048265 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062182779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062068426 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062503947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062744584 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062353242 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062594054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062261239 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062405389 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063020946 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062673072 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062535159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06278277 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062055464 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061732421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062193658 seconds)
  done (took 3.141139802 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074773252 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07158449 seconds)
  done (took 1.400574309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062454712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079259872 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059621552 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070393955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069434992 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062948358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070437624 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068819816 seconds)
  done (took 1.788970012 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.07642832 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.098948025 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.064012396 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064514864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074652856 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123047455 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083398582 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071259884 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073770141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062645123 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062691509 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082160687 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061605561 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07281508 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064671268 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069463295 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068720079 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073042078 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072364954 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059660834 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074889024 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065022408 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060425951 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063481024 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061762116 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067306242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076059129 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072147437 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068824282 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058694538 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082516019 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060305648 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062030932 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068870083 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073161609 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060613268 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09720921 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061331007 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067334198 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060136866 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072340278 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082780147 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072913793 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078513698 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062233613 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063446556 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05985749 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062999234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062757716 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069728102 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060379341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066129671 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059126664 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063063438 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069476229 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061153274 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068409871 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068331509 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075383904 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070833686 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068368759 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075245431 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068650747 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.07209586 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061730695 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0797908 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063037452 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071697227 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074168071 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06310578 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07580224 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060211498 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059156635 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060636193 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094451926 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062765705 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062796379 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061164204 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060468595 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062848017 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069961133 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068343803 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066847078 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065575709 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077532034 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070460351 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060778192 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071813228 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078591722 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062755008 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061351896 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076240056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062700782 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060180276 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080762934 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068463499 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063164394 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06302695 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063123381 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073747786 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062774871 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058961273 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06725386 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062862395 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071089171 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066938367 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066736605 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060067438 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070099413 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067542402 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062750526 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059072752 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063260234 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061120972 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058338021 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068482687 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059894502 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073883517 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064639878 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.07247972 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073653173 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068637063 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076322462 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059783663 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058070725 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078577511 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067849793 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061662047 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078056528 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058855954 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068623213 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.190785539 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.067901481 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070837021 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061417239 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064990081 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062321798 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.070621015 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.064824087 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064244459 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064907736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069070163 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073032415 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063157614 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068530736 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061832335 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075983007 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069908195 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06437554 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06664771 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063069587 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07298802 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066937381 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071534137 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061024929 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062819501 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061470253 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070812355 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070146509 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064299068 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073042637 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063669212 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062608464 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061372052 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062569946 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062837055 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066190079 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062002164 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068388836 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070168619 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07518677 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072063578 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068720127 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060831072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060780855 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06371382 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06056991 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066154008 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070419009 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075054979 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07251033 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080315802 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061873469 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069839444 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06335385 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077515435 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072252625 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.06253155 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067631766 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059723584 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063498692 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070110305 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072185103 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075099502 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074210051 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06500626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06415422 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060286467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074404807 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061895902 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068274153 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070778665 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067968021 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061220123 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063728204 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06900378 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064675985 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061093156 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076769175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070991521 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060237435 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0737767 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061737788 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071713057 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060115089 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062713847 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064498208 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064121375 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069579715 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078351446 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059109153 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062368757 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078697114 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063313672 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063364 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067744479 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075502342 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065185639 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067473996 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070024416 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068951841 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064091745 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068816426 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063047564 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070702177 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065577532 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071911948 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060879738 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077897831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059104595 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.076386395 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060893353 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070585804 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061621547 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069170131 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061131744 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075967901 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062535117 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.062192199 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072579225 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057753423 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06939534 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059015233 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062992253 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064505734 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069406484 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06169649 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067178483 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061641664 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066693417 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062669009 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066551067 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069110151 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062266007 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058593016 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068031446 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070075366 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066485739 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.197739688 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.065014964 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063933997 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072397834 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06442185 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063799999 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069741773 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065926238 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066131752 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063699675 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064010083 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06428057 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071449183 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070169447 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078369567 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068116574 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067173737 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071257987 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060982606 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079517686 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061360899 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067249103 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060719392 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071342445 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071200014 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062292723 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079515462 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063446573 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067989098 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07495665 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068168489 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06380198 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079477951 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066295517 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069211391 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068598811 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064057199 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067638963 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064345374 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068801316 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070797705 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072363826 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062126492 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066728976 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068716306 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063412744 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.073397218 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063523651 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068421309 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063938517 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060419668 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065520501 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072225916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064757464 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065683127 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061326788 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059562579 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061205434 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07146983 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065048698 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06902266 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074733622 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059020323 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062151418 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06031837 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063033228 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078028024 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070132882 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067811824 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065707523 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059860964 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063521077 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063843622 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061740412 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.066292357 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059823949 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06030557 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070474293 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063337443 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064126118 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061760476 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063139061 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068894816 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067231656 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061857151 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06610429 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061413678 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064358646 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060032661 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063044993 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064539629 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0597833 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063121341 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069810757 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07645572 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065911248 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068189914 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064149035 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067907929 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076882115 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071294424 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062975984 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068469389 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059923562 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080319644 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068418943 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067705953 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069794462 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06379531 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077022654 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063887487 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069595478 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07820797 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062300405 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.07109522 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060001094 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.077861726 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06576645 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059659817 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067008934 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066031155 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064194162 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072004209 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060677402 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066774875 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067042562 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06192057 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061478286 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061648576 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066704354 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074767307 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060335052 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065529799 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066174499 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066637684 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06258684 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070582757 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.206091508 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063807439 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064698934 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063526517 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063205126 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072854228 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062367506 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065180383 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064165368 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060511847 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066711659 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075733838 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07193728 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070205135 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060426447 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060918841 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07957508 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063245932 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.0660776 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067990832 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069443608 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072157595 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070579269 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078003038 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062704176 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065661095 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071893524 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062504549 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060737184 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062946045 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0632697 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069714496 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070251397 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067917419 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065975883 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066985696 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073169891 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.063014622 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064910515 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068855148 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062574455 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070230835 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068400415 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068555966 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06423878 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060534148 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06312383 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070755366 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067028775 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070271208 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062940396 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.072439855 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074623925 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06710978 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067078491 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06036063 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066597541 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068725962 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067726872 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060439118 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064689126 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063139535 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.071226117 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069854829 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063990653 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060172279 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077695065 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06784465 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068893139 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063301443 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063693584 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061382842 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060105973 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071666236 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060591619 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063654367 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064621579 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063744312 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077734688 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068384752 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078781966 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062779571 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064351675 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060789511 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069574073 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064492483 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061242163 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069911969 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06018595 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07846471 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073203719 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069946333 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060501635 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064458866 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067788728 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075991846 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070193088 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070180046 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066533014 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069811887 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062959762 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070471858 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060097482 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059160947 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069699419 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067860635 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071557123 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059722501 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069816425 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063259079 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066992483 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067232305 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062754771 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063068618 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062720423 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06915182 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063853667 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069165534 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064104595 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077161847 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061826477 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070090354 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068487391 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069754517 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0728476 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073455869 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069887572 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06090608 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065943747 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066464423 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061019651 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06259556 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063967859 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083037661 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06162216 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062235865 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073233784 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.21231834 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062377057 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072843433 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065208822 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071321635 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062729711 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070540869 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.068291536 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062563179 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06465765 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064798526 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060044532 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060867495 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060796868 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070068169 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064335923 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061476215 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078691488 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063313404 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068347837 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071346705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065922862 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063708437 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060156434 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063631019 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072452602 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075577627 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063790757 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068357501 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063833769 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070061132 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05974326 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068632804 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068228455 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068783823 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060239723 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061666914 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074853173 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074572517 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06453612 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069741739 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069373445 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063139844 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08589303 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068844417 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062221666 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071805139 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065422302 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06027219 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060409903 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064168562 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071925019 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060835188 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064266428 seconds)
  done (took 41.832584616 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100724343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062174518 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060430536 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061147071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073639271 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061987981 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060381135 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061463963 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061532783 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06401736 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060187726 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060576245 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073517468 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07694219 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072102395 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066388396 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060251956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061412043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060542194 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061741223 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072647194 seconds)
  done (took 2.748078848 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070196637 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076942463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073707605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079259497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069837047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066793029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073607054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06683047 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075212955 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071797398 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074727713 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066688346 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072416409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071675842 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071942485 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066802678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075013419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069538332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066614429 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073538538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066843111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073512746 seconds)
  done (took 2.911838468 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062877334 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061612778 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067762104 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05962127 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059678043 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064753195 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060245216 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.0634031 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062880276 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062927257 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067658507 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061182718 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060081158 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063983692 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060117573 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060818847 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107897925 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061397218 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061377335 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060364414 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063975796 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070969168 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059848175 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060363659 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063566173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064503934 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059817874 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063654221 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061368553 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063381206 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061293049 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059887216 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067860137 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069773467 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06352216 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063394614 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062296721 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063731536 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059770571 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059620212 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068247973 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062422238 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060382581 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0630989 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069674426 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061410297 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059911219 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06748672 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05967759 seconds)
  done (took 4.466232926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076588773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112444673 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066413715 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092307703 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076385586 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069985834 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0660087 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09315306 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062576516 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063174097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077527844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07752057 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064899681 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066868403 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065901716 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065126205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065570579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063863482 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068525018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063857527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068466831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067764848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076062092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076812782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065821332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063147132 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064249759 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066597478 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076482929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069356722 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066825339 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06741603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076596092 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065724724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064050142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064299713 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078195992 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065072396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064479053 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062185384 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064010825 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066959989 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067425537 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07852917 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06467121 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068201889 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065120105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06184864 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076913257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064038171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069985727 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078074171 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066640508 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06512801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066948992 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076783667 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064886353 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062984876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065198273 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076264383 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062259562 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066082575 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077576734 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064495543 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069617276 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077386691 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067695097 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065943658 seconds)
  done (took 6.239430629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071189491 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093643232 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07430091 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073934838 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072239213 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072315934 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072543338 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072690884 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072179312 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073450056 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072843979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122148141 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066713349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078867694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072142215 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07231533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072448489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07199416 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072043143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072367451 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072774895 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07280035 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072156141 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072443204 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076446024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066673464 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072029641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071874055 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073267433 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071964172 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076729906 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072400965 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072171406 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072961561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077076437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071940458 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061733003 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072316825 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07219429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07209774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066900678 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073732486 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071901341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066597624 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072356801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072211792 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073059383 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07667419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08259631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072936284 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07209367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073028146 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072060412 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07308806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073138219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082469537 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073047266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073066985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07241801 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073268283 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073284192 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082906178 seconds)
  done (took 5.960296552 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080247303 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069702124 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082353005 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063247306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060366746 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071375777 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060255541 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0604178 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069765176 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070209051 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072277144 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07088362 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074032573 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072113544 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071001935 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073942846 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071024684 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071295256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069929995 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070763874 seconds)
  done (took 2.772905437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075171649 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081036807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066836134 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070657472 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066460115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070583611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065555282 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066371481 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066741548 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066484108 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073209144 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0726538 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066575559 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070594863 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072805814 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070865486 seconds)
  done (took 2.476573721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067114927 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071217524 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077847471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06242677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06575116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06173712 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062009659 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059983136 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061204802 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075814235 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061528065 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073489025 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062222789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060663709 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06154636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067211124 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061461321 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062077281 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06178518 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07576719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06875479 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063610577 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065534816 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061928456 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067069898 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069680425 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063858341 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064904852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061870963 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062389232 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067463548 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069038445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06133277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062793396 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060379341 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06204224 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061710757 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062709446 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067547913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061937883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060215231 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066502891 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061797661 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063105983 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06066295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062562456 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060763439 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067601489 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062110831 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066841872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062816864 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064588852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062807444 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070309798 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065274147 seconds)
  done (took 4.912237542 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078415746 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067063406 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060938994 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060277596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065974777 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066549518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065923797 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065497063 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06618162 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05995772 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066070216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066006891 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065845455 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066037116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066023621 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06604928 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059771951 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066052115 seconds)
  done (took 2.547173535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071753006 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065180987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070086868 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065395085 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065489216 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065649787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060753637 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060869371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060770116 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065376445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064952224 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065109272 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060738896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064803795 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065094946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064966068 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065294781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060876511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064928541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060892525 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06519625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060827874 seconds)
  done (took 2.775812464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094179923 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082469333 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143617457 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07788446 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08637795 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070939694 seconds)
  done (took 1.917511005 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091041531 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107936188 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064833267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06613152 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078869477 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069435322 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069610472 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070020058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078571036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076082698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070236909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081183848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078141265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072589071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079096167 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08179126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069569953 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069928566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065545841 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081207453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06958123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078358182 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070002745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086953361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069685543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071632023 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081353628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075399608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069262282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077999899 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08134341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069426686 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078314358 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075274017 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065409131 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078212399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069900126 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081109877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077637956 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071829593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065043039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077830665 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077928852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071856229 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081810082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069754448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071789076 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06953573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070159276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084899822 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078266404 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071682649 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078428664 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081458892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081448001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085111805 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075964832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071610097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078427851 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075461136 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071530883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078093705 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071639969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075259755 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081329355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071759881 seconds)
  done (took 6.361355175 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100079528 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065885453 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069939352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076537143 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072863581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069723113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070259961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069529513 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069791726 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065932874 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107430483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070157126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072477269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072470692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070065467 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069763641 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069889658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072091861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065538458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085147182 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069823593 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072409294 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072869963 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072065074 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075876773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081549115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069741932 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069423984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0698593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070046266 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072282124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069866186 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07207932 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066091359 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072772147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069635839 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06958063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072450419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069377443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078173617 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072156524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081638287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069539473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069793847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07584872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069577445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069450663 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065782279 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069989285 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065774957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07597313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075959281 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075810141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072358282 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070092714 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069987901 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069830998 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06976368 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069977483 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081702437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072017031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069779829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085607394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069866476 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070033495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072201563 seconds)
  done (took 6.19508202 seconds)
done (took 127.204403527 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221612949 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19396639 seconds)
  done (took 1.771348763 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072429242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105262761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08159748 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133027687 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069483784 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104433418 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102969562 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082183822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069110597 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069081673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069021679 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072411626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135565948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069104679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069361541 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072421189 seconds)
  done (took 2.754267325 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104317301 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.191044883 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107316926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067039441 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103954728 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076088014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06704083 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082024342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071997525 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069193671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075529191 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073373704 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068878621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073709353 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072101432 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07538752 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068728197 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075482105 seconds)
  done (took 2.904067213 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092553951 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08421717 seconds)
  done (took 1.561135622 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163338173 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13197521 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206740079 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341414996 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.146263136 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27875377 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131701663 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129750311 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112033119 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.126742022 seconds)
  done (took 3.148271262 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104301702 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172037658 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298145819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121892054 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073880023 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087070688 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123428957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079330289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079613625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079744455 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079473819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075956867 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100890416 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075828957 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07349248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075671326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102644686 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072860193 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073781744 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075186418 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10210534 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067612635 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075947006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07290454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077685316 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077377696 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068746516 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067711571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075052754 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073693347 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078082733 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.083538329 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077581683 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104748934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071678847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10555503 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076210075 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072131826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073385267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071778925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076456915 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076688683 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076056915 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075366379 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068887083 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076132119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069121271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067212165 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078730626 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069528487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078882934 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077775305 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104887445 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068921204 seconds)
  done (took 6.071098249 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110963641 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110178321 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072493486 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118104051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109208661 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072029456 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10920406 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100910562 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110674564 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071836556 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069208835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071692062 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082756073 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082092448 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120132541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112337155 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074491748 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072472325 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110706984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110204419 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069540865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105179897 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099587006 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108619778 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068501012 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071563244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068921166 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071435409 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075519826 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078240018 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070094565 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081269147 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084461448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077809476 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067385562 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069175222 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068999712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079713022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079318735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078116009 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077021372 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067858532 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068986902 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069807068 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070709962 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068003511 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078226509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080192306 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078689432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069616373 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071003086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069391651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070439102 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080272622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07765032 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080377345 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079116999 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069147206 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068660948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073894953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079565735 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078447495 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079666749 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071099655 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078647025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069039798 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082289494 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083469274 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069424913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070918146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069139955 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070128442 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070531154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076898823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076848762 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071359441 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069641546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069590391 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078786444 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077852397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069204252 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076332946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067798976 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069133086 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070795777 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071195408 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076919567 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080129542 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070747657 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069153728 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069375921 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068252135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067211525 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075252329 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079739654 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079022913 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077081658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069864634 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078124113 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07814517 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070013498 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077487692 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067723464 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070350193 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068927557 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076670012 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074981537 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07708888 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067969938 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067586394 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075052788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078179478 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067804347 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076276492 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077207912 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.214214358 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069225176 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081227789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07005354 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078963477 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070891768 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079949553 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069844391 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079739693 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070432015 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068930432 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068830793 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07906413 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072123281 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06971369 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071374178 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070052671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078728654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081412709 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072024468 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078138035 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078164959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071430742 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077770994 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069221368 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078666645 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070507796 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070962446 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068108274 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080848274 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069908276 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070335677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070276085 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07934563 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070043434 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080221786 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077387268 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068508658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080490996 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080340829 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077415085 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080106604 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071173955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069747743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068996124 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070519918 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076634421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079226553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071414436 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068837648 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077004662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07892276 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068221939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077806153 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078228375 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078303802 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069720566 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070120634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080143717 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079690618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078840499 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077400868 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078248354 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069912575 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077278152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077836577 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06960518 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084083258 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069045766 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083235541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077978306 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076718424 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078247431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079594288 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079411811 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08015784 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083308484 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06851641 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068852433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079976175 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069356227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069905807 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078933942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071355234 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071440089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083303211 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069650715 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079031153 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068615747 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079873832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06775837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071186693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083453303 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069254735 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070924358 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079148841 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072373215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078124609 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079220733 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077183078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068823412 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071320433 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078665702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07733547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068813415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067672388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070526809 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076158878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073873041 seconds)
  done (took 18.677333133 seconds)
done (took 38.280681288 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.243400163 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173838077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.208399072 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12673776 seconds)
  done (took 2.249008238 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113595207 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105685487 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089451985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063643448 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096542479 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063627422 seconds)
  done (took 1.955021477 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324054202 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.223523501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196073032 seconds)
  done (took 2.157882476 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.228639309 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.431890223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476373846 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291901452 seconds)
  done (took 2.952187228 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146942345 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085677974 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063242943 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082255214 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13194387 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155889413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098198287 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122791412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074798732 seconds)
  done (took 2.440220196 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146835991 seconds)
done (took 13.348254419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097945191 seconds)
    (2/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067635122 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.281482281 seconds)
    (4/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.225717181 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108111546 seconds)
    (6/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.215055968 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075026903 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157718935 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.245968867 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.227430129 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065479631 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098712237 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.246481757 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075833446 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068493666 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223063885 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07360346 seconds)
    (18/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.078473138 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12975946 seconds)
    (20/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073248475 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072967309 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.168929571 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118685362 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075085911 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181162081 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.200981969 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079093951 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117260223 seconds)
    (29/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076657288 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.227443434 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083921996 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063381786 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 0.171598209 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068125035 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203428344 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200428386 seconds)
    (37/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.093208262 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084160594 seconds)
    (39/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071936626 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073216156 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.105841013 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07313864 seconds)
    (43/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143652607 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065622657 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062946778 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066981894 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101129236 seconds)
    (48/309) benchmarking ("sort", Float64, false)...
    done (took 0.130085426 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065736031 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122202215 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168630176 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073799361 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.161503 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07543258 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188806793 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125890758 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183789389 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063149154 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088746011 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088495641 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07151377 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.064914464 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085555576 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137158379 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164998929 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072522728 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.173256565 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063419862 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072920169 seconds)
    (70/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070969329 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090217677 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182089468 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06216603 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072598608 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104330299 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173071678 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135356008 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070414221 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074763253 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07831841 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200104255 seconds)
    (82/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071268038 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213799252 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063591251 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074364983 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.210691135 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07010356 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226281451 seconds)
    (89/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.065296286 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065961205 seconds)
    (91/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096552531 seconds)
    (92/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081296667 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173839126 seconds)
    (94/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139807325 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091773705 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168044428 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065173045 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065205529 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072824128 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093310908 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 0.133765527 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06560319 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085136068 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06465137 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071314369 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090425281 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.165921036 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123915528 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064709526 seconds)
    (110/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064162032 seconds)
    (111/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065729758 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078630514 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081961795 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229528142 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070264132 seconds)
    (116/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.19715401 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135317739 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078074695 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073338505 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065187479 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074099112 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095709361 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089593073 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.238028061 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064850108 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063702497 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065269115 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064566184 seconds)
    (129/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064730872 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1822175 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066383997 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197543485 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096468474 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064268519 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136998017 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074955598 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063893175 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06401706 seconds)
    (139/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.140001018 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073015409 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072745503 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.209144062 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065468787 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063762782 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090710523 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064560463 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072177303 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065951994 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072084217 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072301095 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179757477 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0919378 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063168838 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063630987 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.14007079 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192588202 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175389506 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084892371 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107233799 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140607628 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064952288 seconds)
    (162/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064519431 seconds)
    (163/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.247564958 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088530989 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.099387063 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09101639 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092109597 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064610989 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063399851 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063383687 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163342661 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063601536 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06977729 seconds)
    (174/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.169003681 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072413893 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132130732 seconds)
    (177/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064834837 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137813091 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091819219 seconds)
    (180/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064539193 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137175432 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063193485 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13365135 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141185975 seconds)
    (185/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.07249751 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065969428 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062979844 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064112224 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063557666 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064064283 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064629395 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064074204 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064124397 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123739416 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062850621 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064132418 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077399064 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116013106 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073893053 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065420859 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130462621 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.305852364 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067972805 seconds)
    (204/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066357979 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066023274 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072084252 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065697607 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.14215096 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065561887 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06518883 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073157025 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06591348 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066878687 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082517788 seconds)
    (215/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.14505254 seconds)
    (216/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069398037 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064813221 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091333797 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144069981 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09511684 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064067655 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073167931 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071924401 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064691189 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064638429 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073605377 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065052111 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06536214 seconds)
    (229/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253651444 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065344374 seconds)
    (231/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064329933 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073353633 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075449745 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13866845 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114286488 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072337742 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139109934 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07550809 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120559757 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065048042 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064536729 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090097042 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073776111 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07087652 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064497232 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134157038 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064644351 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065394002 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08871123 seconds)
    (250/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.064229283 seconds)
    (251/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066077599 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074015467 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12924674 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065506405 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065917856 seconds)
    (256/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065090744 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074625834 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063811213 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178111513 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065032256 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214358879 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0888677 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073579656 seconds)
    (264/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070919194 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10937706 seconds)
    (266/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064290258 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064339261 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063685931 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065120197 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065178389 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063505827 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067079146 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174425166 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070761186 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063712586 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144682332 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064140553 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067652696 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120358247 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0708385 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064071358 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063544144 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063905958 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064023265 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063549113 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088917463 seconds)
    (287/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093406624 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063698374 seconds)
    (289/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073070935 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075051937 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064358911 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064398351 seconds)
    (293/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065019274 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143323739 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138699955 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091162908 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063781878 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065076141 seconds)
    (299/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068493717 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070971298 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063826341 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064279415 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072127865 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065643978 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065511149 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064044339 seconds)
    (307/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119080825 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065374536 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064144452 seconds)
  done (took 32.888327605 seconds)
done (took 34.320007573 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085217317 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098909285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073199058 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09478706 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081667605 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098084654 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073303581 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078276394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080178333 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079155589 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079491011 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070658034 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074224203 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075143058 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07244082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096874567 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078615561 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073548921 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073526087 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063835035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073510922 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064207337 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06379576 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070868233 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076494898 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071874966 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074753096 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07454382 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064439738 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064629018 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069355476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07352997 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064245406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077070524 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073125032 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073474227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075103206 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076480527 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064003326 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064600263 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074357484 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064077024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072908854 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071031333 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068821462 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070948507 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07310876 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077384599 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0965396 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068573677 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074376697 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076471775 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076925011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070064757 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069260663 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073842098 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070482092 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097308971 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073345433 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068471429 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074381473 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073650409 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070686011 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073465484 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07290137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075298232 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07677941 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070540956 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075286282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070927071 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064284386 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072991882 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069038014 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066581076 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075471335 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077054572 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063229547 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068720034 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072778507 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073164145 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064315998 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067920736 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063640745 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069385546 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068061186 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070297175 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069575941 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072063131 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064063561 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073463519 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071938212 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072337255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063906839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077659706 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064483215 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070518547 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064551414 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064491524 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064010909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070137068 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064034225 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068573426 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073477218 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063572808 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069485761 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07849979 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064134368 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072082373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063748603 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064334612 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076633085 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075729067 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064657918 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06810727 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063920383 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069712017 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063600357 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063535973 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063758676 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064062437 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068488941 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063683147 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067458608 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069386376 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076602849 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06385397 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068278167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068066137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063738146 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070797077 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063758969 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063776159 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063170361 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077588949 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066814341 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063519604 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068894575 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066919208 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07224093 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062277043 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071817674 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068531155 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067312517 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069215089 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062168132 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074056046 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067408383 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066672116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.0625171 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062705618 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062005345 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.206375129 seconds)
done (took 12.509052095 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065605198 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114479347 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.082852813 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091438039 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079908271 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06548119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070778786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.085142725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066395072 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086657253 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086149001 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087394255 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.103140456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063887904 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064625266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06555956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066132377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069511252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.087426177 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0871186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096074015 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064977962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074327526 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080446359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077483441 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087241469 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065774143 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065890047 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067200571 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083482302 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090778653 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067864083 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066003215 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080729658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081666241 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076768546 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06550144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070792758 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065281478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064799867 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06627174 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080372645 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070058199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072644849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06635619 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072530755 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066110713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.075059759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07755486 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070803864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073868952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.080211606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068864223 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.074474533 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063744618 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.075827773 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067693549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065692504 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065901974 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070433818 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06499743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067868075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.069594583 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066145435 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069801581 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.073909845 seconds)
  done (took 6.413170449 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087255026 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093208432 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083214959 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082736133 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064750044 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065680167 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065609364 seconds)
  done (took 2.082487789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065649553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088488935 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090508226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091359993 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083201734 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091818982 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065207974 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099745973 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064271015 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086934471 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.124785128 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093045641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06954863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078144205 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065762096 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.082447142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065745388 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074296669 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083474933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091480823 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070718508 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092899123 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078948233 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06563749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.100836258 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079225687 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064919033 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066233576 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067021362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066558356 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066639458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109979905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079161411 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080260311 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066509498 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065452252 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079822524 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069129297 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077246615 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075425916 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079528508 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066726625 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064716125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066697027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06911521 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07707233 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06458342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066782047 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066270825 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08628879 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064456494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078435212 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069136448 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071246211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071135163 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070675058 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074106875 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066803502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086446664 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074162691 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067165786 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083614781 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082810959 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079372261 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08263862 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.07089095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07879575 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079431012 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06651346 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067372135 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066513165 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083336379 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065600764 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067815929 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068490957 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067032881 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077469014 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091569499 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091472266 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079933609 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066048556 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067395076 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077524488 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09135213 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071323513 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066775169 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068800714 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064410422 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069850228 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066892992 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071281525 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067130156 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074849663 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068426748 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069548542 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084286835 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065314056 seconds)
  done (took 8.866915288 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068930243 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067410304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07001458 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068631822 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06827513 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067819043 seconds)
  done (took 1.980500588 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093231129 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067872063 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081411161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06847313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107777954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083707969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083647774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077783169 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080138952 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07987295 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082838917 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086633835 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.081329791 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068852377 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082804886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068554652 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083054966 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071857356 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079399076 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069351641 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081257372 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069383853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069859757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087424843 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070133739 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068929811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075866797 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079648395 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079711021 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077920709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068561882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070531762 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074908065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077895098 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083566552 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077605619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06705103 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073873625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069718638 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070103028 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085406656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069285815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070496923 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073306332 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077961041 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075443746 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073498286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076188014 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082444024 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073755941 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073958795 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06850524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070460005 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073419168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075501997 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077924607 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073549475 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083134573 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069024724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075346948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066980506 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070046988 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077264768 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070300905 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075638845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073947595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075069392 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06936022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069811078 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06708584 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073808104 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067075548 seconds)
  done (took 6.98816806 seconds)
done (took 27.844728508 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.931856867 seconds)
  done (took 2.454136679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615070853 seconds)
  done (took 2.168030258 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.663007958 seconds)
  done (took 8.215966114 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378816573 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.404237694 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807110589 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138946844 seconds)
  done (took 3.318186939 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718574952 seconds)
  done (took 2.280751725 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251634588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238250551 seconds)
  done (took 2.064029118 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.360221741 seconds)
  done (took 1.915205022 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110723447 seconds)
  done (took 2.664332496 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276072327 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165952393 seconds)
  done (took 2.011482004 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463327708 seconds)
  done (took 2.025099654 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.332795684 seconds)
  done (took 5.903777973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249365037 seconds)
  done (took 1.846950253 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241513503 seconds)
  done (took 1.804975857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.779256294 seconds)
  done (took 3.340785992 seconds)
done (took 43.581430382 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083064893 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086091774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085515848 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081065719 seconds)
  done (took 1.875230142 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074325815 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070098625 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0740649 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074453363 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071867698 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073521482 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07395837 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070214014 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07191118 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069572424 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068066478 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069500181 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072677331 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06976929 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072630626 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074357289 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069691654 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069459457 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073022706 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069112398 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072413748 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069571504 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067468193 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068520667 seconds)
  done (took 3.273308849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077926954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072826623 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074600665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071841039 seconds)
  done (took 1.868784608 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075797464 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.087775992 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.089270516 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.094188208 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076551772 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076933719 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08592423 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086191719 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065231907 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.090174455 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067715407 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066338497 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066643423 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086865756 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.085087898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06334097 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064544104 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076586984 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075743731 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07882867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067670955 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064930554 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075988797 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076364082 seconds)
  done (took 3.413666365 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081286228 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065098411 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081818278 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093845708 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094022101 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065688071 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08419374 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094149644 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140508548 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065143279 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070948141 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065662978 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105287254 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065212592 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08373547 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108722944 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112201891 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068744481 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099012656 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065106151 seconds)
  done (took 3.289740586 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084176847 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068807078 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070005636 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065880924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07584758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072762995 seconds)
  done (took 2.015953367 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068255203 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067464365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067044602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066510324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071854719 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069688978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065560009 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066931925 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06653888 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066491174 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065875414 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065295042 seconds)
  done (took 2.380281554 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167212608 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069324208 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07012208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065058227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072703679 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065802872 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081872457 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067996475 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085018057 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065621739 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065757339 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068139459 seconds)
  done (took 2.519278831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123092092 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154064148 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105231986 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073262046 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19821751 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108311005 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.09196235 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.136488568 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10281368 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069566045 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105284306 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145958467 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105661178 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.117444494 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086603961 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142335495 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117325135 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096399382 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129607996 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087216286 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071124883 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162609991 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070905736 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100380149 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120841271 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.10405571 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123262554 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150694427 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094803325 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.095521863 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08393819 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076796006 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116986555 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.086626272 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.107758966 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105599836 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107642837 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092299069 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.0872343 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138184466 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1805269 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111744114 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113297956 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144202809 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080057606 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119222537 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086898106 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111652315 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124254541 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104022901 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077113202 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097750233 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119552601 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114940765 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.085261007 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086520869 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132821286 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.113253098 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11090793 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081871909 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111617626 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.0971958 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114010951 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134074638 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152886926 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105703008 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298428794 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130676915 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110455881 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.09831077 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.103005163 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076937766 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128298375 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113747818 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152908968 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129386321 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112510585 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09826965 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088777952 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117374417 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126078317 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105023214 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104860933 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164964338 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1210461 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100476772 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101373844 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.143989395 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072557311 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171903294 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096898243 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127289166 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111796409 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15481678 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102356391 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088495246 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112209398 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116491916 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101151157 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116546944 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093087603 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12818028 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100402908 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112411652 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085459211 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100291218 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0912895 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.105376038 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078268127 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11694867 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128781026 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126910021 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076648487 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117462047 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096281416 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078602534 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104838342 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156822526 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086400969 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078477523 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164491539 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.099830295 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.123935826 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118932278 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085934105 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129903825 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156051233 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095958103 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097796145 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076735035 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326002098 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079762795 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130867219 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08795347 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109956809 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112755125 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154728628 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153833762 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104132651 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081255298 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098856018 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.122981922 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094963191 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092752846 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079476491 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118651097 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14487761 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.110548122 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083094536 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.098984655 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071096523 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130883256 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079340969 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086381475 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105116544 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096539871 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.097248527 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1598855 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.088360126 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122332904 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102100919 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068499868 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095690517 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176861979 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085654232 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.117729598 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126238334 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09250604 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069307156 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.112607457 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075603287 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121137711 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1044972 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113848324 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081028505 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115312878 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069817017 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075817085 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149045875 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110591299 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101213093 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149008653 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111885668 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.101349936 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119368433 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.104007842 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104424888 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111127801 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.117538566 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114824789 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.075878333 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137877173 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099092962 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079426638 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094198732 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079024792 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078368699 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111825802 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126156508 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253426862 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110325419 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111890437 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100724809 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109224384 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094284051 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082073119 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145827625 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078703934 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076806439 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101780299 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119650765 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092160465 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149769851 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080713656 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149689326 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105485468 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087174211 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125833366 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071695214 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071937685 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089727387 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103354435 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130098232 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081007312 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081394115 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131339233 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146089302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109101628 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115524108 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069790177 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103388231 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153888943 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.118570667 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084507847 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119295277 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088984117 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139123586 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10465485 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136717934 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112648907 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122059397 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.093929477 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082658561 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076252291 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093524749 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119990481 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088236811 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084982764 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069375607 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075503731 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10271595 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100574116 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126964951 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097734284 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149285159 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07467417 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114784026 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11691177 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116883109 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099950969 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102825066 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09780922 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093724063 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098038236 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094437005 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075183983 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140428128 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114554272 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080220059 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092654152 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104320204 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112755131 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116634881 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113559501 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098040364 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112719344 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131048865 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104698692 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087126048 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088945447 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101593216 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.091306414 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082002946 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109923024 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126098233 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104623577 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111221053 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09486903 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092767809 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114870851 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100694215 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089880495 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118762251 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161762579 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.106804222 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113099457 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087215701 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111950236 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107492518 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115298242 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.116030758 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116598667 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069674468 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076159395 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070661387 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1115043 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079329188 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121939071 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077019103 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109105542 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102180493 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080346291 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066618371 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100424361 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090067512 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083462451 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134635314 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11028419 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073697903 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098868945 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109786473 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08734137 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128148219 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105006007 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103378767 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072422238 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096995738 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074071193 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110606171 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105209488 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081399225 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075640921 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069232054 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111509178 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085401179 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110955679 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09529148 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10341498 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121204862 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144589986 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090627784 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096110986 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123855836 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116366822 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.085601221 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.391878411 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153549918 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14173683 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091782165 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.096277018 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116310163 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115685471 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109920847 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081663953 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083239216 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12417811 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125417859 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.072059157 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089981982 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075637723 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.094801312 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129858368 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108879583 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088706537 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129840192 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080365162 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120184033 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105360027 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141708603 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135705598 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165140465 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103444127 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088414412 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081705667 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141472992 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.074221327 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129561543 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122548373 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097483654 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071003232 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090844132 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101566359 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.645060138 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117095195 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077899385 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149766369 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093441956 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126764583 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093284931 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.126706809 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100067475 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107547389 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098872132 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150753878 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086912684 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118614692 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178945266 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119533109 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11642115 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077785265 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087707284 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076942041 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.085996477 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089415441 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094836248 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116828917 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093642742 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112708893 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.083511127 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11681336 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099958116 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094628835 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105429628 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241787679 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153360663 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094183639 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143289412 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11664622 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082170271 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079029482 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.095339825 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111553534 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084543282 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097755537 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083508832 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.082091499 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16841338 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115925572 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089447818 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107029286 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.096533079 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.09613591 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09644679 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130677518 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120199989 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076955979 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.091707208 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10949726 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082202729 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077990338 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10271269 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072162048 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099414446 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112085314 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105282958 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099661051 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114702613 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081444247 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097228561 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120318955 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090942942 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080609998 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07941178 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081172553 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078106413 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110030536 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116655855 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125534523 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12246248 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095132014 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106780138 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.081986879 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224490469 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083570409 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101977222 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110026447 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079136504 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.138700559 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093750431 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098529421 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105120652 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108264088 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167388663 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075584634 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118466613 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095518392 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117654255 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094216186 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116968614 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103353561 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10339573 seconds)
  done (took 54.210421591 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.096000151 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143716762 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152544924 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082711254 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.096545672 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124931453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20369285 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193140458 seconds)
  done (took 2.85214032 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076830554 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097951958 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102867229 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082472356 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065893809 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074603743 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.245623009 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080576938 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065508311 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100732527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08014008 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067606652 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.460580489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065432877 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066788179 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076885294 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066311345 seconds)
  done (took 3.591663469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.404504094 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.594370024 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375720088 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074739485 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.953627425 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090764061 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.1428535 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137812204 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080559392 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520231695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371164217 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129519778 seconds)
  done (took 18.607571238 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081731402 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077822992 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089986816 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089907296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077243356 seconds)
  done (took 2.145262202 seconds)
done (took 103.619492402 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081799431 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.216403326 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067932198 seconds)
  done (took 2.043140503 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.092150846 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089893948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090311568 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.087863995 seconds)
  done (took 2.094537363 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07420135 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076384375 seconds)
  done (took 1.880493058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238144545 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17600067 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097109508 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08356308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079357678 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079462821 seconds)
  done (took 1.978948678 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072854925 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072934917 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073337574 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078285411 seconds)
  done (took 2.02633611 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071253538 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066020251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068543356 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071915577 seconds)
  done (took 2.009857408 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086092734 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084705691 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079132886 seconds)
  done (took 1.977393537 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110613398 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098684193 seconds)
  done (took 1.936451946 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083337942 seconds)
  done (took 1.813015079 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094898824 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102877227 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135249707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115822172 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144936138 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1199581 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082274665 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087430408 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076843493 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083888305 seconds)
  done (took 2.772134937 seconds)
done (took 22.858290498 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080726547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369926907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360197197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092750429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673145216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356693902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980023755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092309422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108974999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068612799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087316151 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683254844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971346303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330760894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959097774 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322986094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649258303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068163421 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067977609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068792633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966815283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068168252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069039981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068677163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650630351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374009761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069855713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322511361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067910268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070547569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355988223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069629276 seconds)
  done (took 16.250761738 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072759641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122654737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074219159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086019309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07091633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069689125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071287327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068528242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118398376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069178657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087809442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067927729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072719899 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069553272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090241032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06817306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069629787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069127327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068675826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070055719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089055053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068270442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07016905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069151296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070012644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082602983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071112976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069027306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069499888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071677383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072858219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070680005 seconds)
  done (took 4.174787068 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118229222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127259585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075167375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107124845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119126149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070602574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147255051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092900217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121748376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069029193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087423284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067819431 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103876784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070385859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091296991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069377615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071415192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069734922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069286594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070512568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089673598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069265877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070521924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069542238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070206203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084662271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07063699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069107672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069273768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071846257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074109339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070729392 seconds)
  done (took 4.443063952 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071169087 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072468254 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080963803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082587858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067765642 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068973774 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070555624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067740458 seconds)
  done (took 2.334715798 seconds)
done (took 28.943561584 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079577064 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067780727 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071020073 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08769274 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073782904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079157665 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064854266 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074360966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072660406 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072075249 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07588143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066248091 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070523096 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065215791 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072355569 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066210245 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080509712 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070450912 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079594583 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080151593 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06902093 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072326826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074733167 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080099228 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080214997 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080175312 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077056372 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072409563 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0678062 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070174971 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069362391 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079368459 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082003308 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082196885 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067434355 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067534607 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071239815 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069001833 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081327947 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07695205 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069086132 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077094868 seconds)
  done (took 4.824444709 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087000722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089804727 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084202537 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081476685 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100774673 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08258656 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088261407 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078749213 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076776658 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087503845 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073632039 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080227194 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07799615 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07230361 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076680711 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07383462 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078292891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073750452 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07700357 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076510687 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087932685 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072154224 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088593699 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078777528 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073915233 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079781967 seconds)
  done (took 3.857050875 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073704247 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084630385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091740854 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146154718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112141897 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085375085 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082064957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091716771 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096038991 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068224014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07193092 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093035567 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092527821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073957531 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111175329 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084227859 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083433768 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06958895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075229186 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096431564 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088909456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085841721 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095229932 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084403506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067340403 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070389882 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072214928 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081929964 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071140002 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080260562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071256389 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071551819 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068797744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079346063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0711286 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067196038 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092132069 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080575699 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080454703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105787794 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076719843 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068217994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095757032 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128228065 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066267592 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070677034 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070514536 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079459174 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066275097 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095178406 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081867677 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066943645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068045137 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066398714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066677012 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070995681 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068793914 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069362113 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078284204 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074128735 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089133361 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071812539 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087323594 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066497664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077602659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066079439 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068374988 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066514155 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098108793 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068641485 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116319688 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068014937 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066182379 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079451722 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077844838 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073299739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066780378 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087004762 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078204037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071021204 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07703769 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069784898 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071202747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097417336 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067431602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066726996 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068338734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070475386 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070812947 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067869325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081047766 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066576787 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070535619 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088193753 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067362466 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068099182 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07065057 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069149118 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066857519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081221756 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072352562 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068641622 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079150924 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06790741 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070827531 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080592427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07412264 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066239196 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068779914 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070268569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06891437 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068554114 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070354216 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069029965 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073958731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074519484 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072838233 seconds)
  done (took 10.877306477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177391304 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168207735 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070604294 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159442515 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077629762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082985115 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161074342 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098539092 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069536347 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069759931 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068162716 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111751744 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108153725 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118025922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081225979 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068428465 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094753982 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116829786 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.163347522 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.157661206 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092162887 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076952825 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070747115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069845601 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070141542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078581087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085615865 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077411571 seconds)
  done (took 4.722790688 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081560121 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105522039 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072717468 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092758696 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091508849 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069183343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070216579 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070234772 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085342036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081181503 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068862131 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074464035 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072503215 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071578694 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069393232 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075144383 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075545553 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068010088 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072533692 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074436313 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079242327 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09733346 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074377689 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068175452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070963997 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06821652 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080676577 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084388706 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068526184 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106026701 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066534752 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073439235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083720309 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06899313 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068251821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069214599 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06840669 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068751583 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068665972 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067208433 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067540841 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073198517 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067096039 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080236413 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081719853 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075390716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071079693 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070974912 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071285708 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065925747 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071478916 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071182559 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071190334 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076378281 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072575997 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071313755 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069595729 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096736467 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074580168 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067833809 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067707764 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06726987 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070940648 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082618919 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084872276 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070895464 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067214272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069010436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082059596 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081552315 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067684808 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072943693 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066284292 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06906076 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070956265 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071112488 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069159936 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067177519 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068113483 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068263382 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068977043 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068010561 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068348664 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071271599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066592689 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067075321 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071077882 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071104235 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080795224 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068214264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072332202 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06929188 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0671339 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071200891 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07434962 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071514476 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080050834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082682414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068949459 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066933921 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083439971 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070886613 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067778163 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07462195 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073387373 seconds)
  done (took 9.536919827 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091476892 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069525184 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085481959 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092332311 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078834655 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074835866 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078816501 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068388266 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085408559 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073756973 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076839857 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067154456 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079076759 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078106869 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069278212 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079269146 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071982867 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085927204 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083258268 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067902662 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076918788 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081279931 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081217875 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083078229 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082552721 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083371428 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080422353 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078546963 seconds)
  done (took 4.013662803 seconds)
done (took 39.580954691 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.833489765 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.010254912 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.832466669 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.030081478 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.88761495 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.10618339 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.874369772 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.822284202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.036278295 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.877605271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.148203962 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.336050129 seconds)
done (took 66.691100319 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856883328 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.974907757 seconds)
    (2/2) benchmarking "String"...
    done (took 2.081773312 seconds)
  done (took 5.816153002 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.098467746 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.473401362 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.088577337 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.824108916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.829166126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.249345372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.608849771 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267628146 seconds)
  done (took 31.101495463 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.980773836 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.043369057 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.533469714 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.577067895 seconds)
  done (took 15.936683849 seconds)
done (took 64.657143952 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.865822663 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.825918682 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.828787086 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.853368793 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.831869103 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.829967165 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.828783507 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.828964351 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.854730428 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.84203176 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.82891534 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.832890915 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.829355004 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.858883265 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.455386077 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.888004852 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.834515716 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.835794718 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.833733219 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.835883786 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.831632243 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.82966048 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.324609855 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.015758675 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.438298284 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.975342518 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.160479658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.24502411 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.837935533 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.827317034 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.908981864 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.97135674 seconds)
  done (took 205.551215714 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.828001212 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.831722975 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.903518017 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.860837875 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.251040974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.005248383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.92515471 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.30572682 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.831589737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.843162744 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.107782213 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.831369607 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.136244288 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.8152866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.866148054 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.866417937 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.092610979 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.105694548 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.86599814 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.975639996 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.830598369 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.978041843 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.936551511 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.054826336 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.854389179 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.835168432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.855125595 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.837779231 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.019189411 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.06628923 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.836186812 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.874482221 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.989615597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.700750247 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.857025914 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.856473128 seconds)
  done (took 172.396441682 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.02430457 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.835465542 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.826713453 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.881766756 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.953456729 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.831241137 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.481322655 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.838453048 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.197849423 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.835847921 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.82967989 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.828652931 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.827728964 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.829375883 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.843834547 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.913197006 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.833521165 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.844082733 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.831322419 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.85513305 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.83125613 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.830692934 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.830615307 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.832891321 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.830358747 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.830020268 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.830956925 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.166015714 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.077358223 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.83329326 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.830656454 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.75928949 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.844764367 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.042195742 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.836056171 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.924190373 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.885346897 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.94989059 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.832880937 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.050483299 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.90820184 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.831809228 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.830969268 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.893851171 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.844770988 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.83366321 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.832255885 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.836060389 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837956937 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.896713061 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.103102463 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.835323412 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.95410239 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.316075231 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.833835275 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.832550023 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.832921365 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.420784039 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.835589788 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.831934288 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.838199393 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.839837173 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.832866507 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.833315768 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.220102054 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.904324373 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.057718586 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.26393862 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.836552472 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.904174128 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.957456785 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.832671522 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.830721614 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.832331252 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.833430807 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.834148801 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.837140127 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.953425708 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.835768661 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836945386 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.957908552 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.917494301 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.954159219 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.834850449 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.842803366 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.65414438 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.904991571 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.869797754 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.659813159 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.836189769 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.209020068 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.618646284 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835866848 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.834030758 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.848541361 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835336398 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834211338 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.835215926 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914575033 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.834624789 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.956663423 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.548231303 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.013332654 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.009395244 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.833450157 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.841090837 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.928472593 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.832547459 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.998316172 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835788218 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.902795619 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.841224956 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.835089282 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.983804111 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.834887141 seconds)
  done (took 407.436262061 seconds)
done (took 789.225415259 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.489199403 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.458120881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.583953801 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.4763273 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.453002258 seconds)
  done (took 14.228390963 seconds)
done (took 15.997832035 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.852369061 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.840963147 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.899571395 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.920893151 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.851330444 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.857391475 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.916105195 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.853880142 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.885868946 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.889140617 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.923807912 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.921164031 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.862802381 seconds)
  done (took 26.243616257 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.847025262 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.981510117 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.06908467 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.876546939 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.844972747 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.06588654 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.903355913 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.977618308 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.981792317 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.069598181 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.069281966 seconds)
  done (took 23.460884697 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.8455258 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.990155876 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.060863311 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.882328345 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.846927807 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.069484863 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.909626005 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.004252991 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.994879387 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.069244717 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.083430104 seconds)
  done (took 23.537660495 seconds)
done (took 75.011465677 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.841821285 seconds)
  done (took 3.61428738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.858810926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.005302505 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.841659622 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.840086724 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.839940687 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.839885107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.839561306 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.841220503 seconds)
  done (took 16.68348247 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.842507569 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.840645914 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.839636669 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.840508114 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.840002378 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.839948589 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.840267212 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.8411234 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.842942036 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.842155739 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.841658072 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.841509113 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.841997011 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.841451587 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.842088734 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.841447835 seconds)
  done (took 31.231896745 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.841192452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.842960903 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.842605898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.84211151 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.841808661 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.841251832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.843863164 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.841705702 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.840701591 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.843389518 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.842063156 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83683495 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.837339646 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.837880525 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.837393764 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.839066671 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.83779408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.838534345 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.843368799 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83844134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838247181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.83997121 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.838198286 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.838500572 seconds)
  done (took 45.944818196 seconds)
done (took 99.254709769 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.612524573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.476008281 seconds)
  done (took 9.856580729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.842169346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.838375056 seconds)
  done (took 5.5217331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.839763366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839057073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.838672641 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.838333331 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.838980826 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.839548562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.838905681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.839629312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.839149765 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.838997236 seconds)
  done (took 20.158627903 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.840989948 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.840701789 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.840317671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840386049 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.839677631 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838832936 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.839282977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.841079316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.840712698 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839845496 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.840517731 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.839876645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840857017 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.840485965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.84270776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.839887835 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.840555291 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.840974859 seconds)
  done (took 34.896006547 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.840355664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.840471688 seconds)
  done (took 5.449720346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.840346968 seconds)
    (2/7) benchmarking "second"...
    done (took 1.840843135 seconds)
    (3/7) benchmarking "month"...
    done (took 1.839707483 seconds)
    (4/7) benchmarking "year"...
    done (took 1.842014998 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.841640465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841190164 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.840088627 seconds)
  done (took 14.65422453 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.84137002 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.99342904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.052401042 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.519096564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.844152412 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.842598217 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.75820088 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.844842423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.845837518 seconds)
  done (took 20.311683093 seconds)
done (took 112.616034408 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.683889306 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.84085802 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130363374 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.899449897 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.91066145 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.178854256 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.881326899 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.096225476 seconds)
done (took 43.391268439 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.917212726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.837997018 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.86722009 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.868476124 seconds)
  done (took 22.344141352 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.841914981 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.166498056 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.866398309 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.676341277 seconds)
  done (took 22.339098045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210491994 seconds)
    (2/2) benchmarking "read"...
    done (took 2.187330025 seconds)
  done (took 6.173265376 seconds)
done (took 59.547360659 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84123943 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.84201847 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.842893464 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.842978852 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.8421378 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.843332472 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.842387143 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.842585377 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.84247477 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.843068494 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.843394677 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.843747989 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.843199769 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.843013045 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843366833 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84330046 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843441502 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842048473 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.843803176 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843847135 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845542899 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842458964 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.843741391 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.845607655 seconds)
  done (took 46.007077983 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.845186677 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.844570014 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.845891172 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845022136 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.844315178 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.84366089 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.846422097 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.843548128 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.844646186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.843649539 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844158133 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.844391925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.844886008 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.844661838 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844741174 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.844615668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.845216341 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8448324 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844905608 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.845193723 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.845403393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844648121 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.845456719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844474388 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.844550977 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845091391 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.844874451 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845016382 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844254083 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.844361393 seconds)
  done (took 57.116717954 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.84541555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.84459291 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.845384589 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.845981735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.846685816 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.845243797 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.846197668 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.845306214 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.847041604 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.846602454 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.847260061 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.847007345 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.847020928 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.846925909 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.846251221 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.84707565 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.846218436 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847276262 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.8468765 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.845820771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846639179 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.846868781 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.846321992 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847406654 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.84742143 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847295408 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.846466752 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.84755049 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.845896862 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.847998074 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.847440787 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.846865149 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846470029 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.847809825 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847358385 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.846545295 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.847865718 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.847108539 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.848016588 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.848303254 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.847664653 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.848555112 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.848515154 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.848175613 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.848917961 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.847818525 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.848103277 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.847543324 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.847704504 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.848562869 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.848115943 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.848798467 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847914989 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.8487935 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.847863381 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847743071 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848167708 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848833376 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.848795286 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.849427749 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84939419 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849038899 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.850386259 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.848613519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.847899545 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.848501989 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.848182694 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849172285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.848811797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.849306245 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.849019265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.850257486 seconds)
  done (took 134.799952493 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.849158355 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849213116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849335158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849370444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849859504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850554021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.850849469 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849388842 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849926412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849591729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850673872 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850668524 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851223254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849277253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851300695 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850205146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850896832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850699071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.850471003 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851117643 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85028599 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85099268 seconds)
  done (took 42.48278515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852100947 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.850746658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.851093184 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851965006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851090922 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852673507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.851415863 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851683864 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852150421 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851873977 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851479653 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852206027 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851630741 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851301872 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850707996 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853304803 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85128622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851292883 seconds)
  done (took 35.108838882 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.851426414 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.851665476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.852334698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.85201964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.851415374 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852159046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852131376 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.852486108 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852914056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.853748834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.85336918 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853091987 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.852699751 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851732205 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852637752 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.853274571 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.852404176 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853520768 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853502726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853757262 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854381236 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852996595 seconds)
  done (took 42.539931096 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853971815 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85317455 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.854251814 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852779044 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.853185613 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.8532103 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.85424553 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.852148471 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.85363587 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.852759875 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852654907 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853865807 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.854793771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853858185 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.853931887 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854709646 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854014168 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.85379264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853437079 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.853958796 seconds)
  done (took 38.854865904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85336394 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854339408 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854423967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857276591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854129134 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.854762185 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853908719 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854524529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.854742208 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855483647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854732177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855117363 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855089507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855516367 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854490768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855163089 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854886846 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854157026 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.85514533 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855627978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855663343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855410941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855924033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855785051 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856884515 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855584859 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854663944 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856344301 seconds)
  done (took 53.725145802 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856827297 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855353872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.85730938 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.855770214 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.856978597 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.85518488 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.855890467 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.856403062 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85701601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.856106205 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.856819745 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.855395853 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85549103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.856883091 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.856955799 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.857325579 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856063787 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.85588506 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855946744 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856385256 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.856749651 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856825307 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.856813651 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856264231 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856752726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.856494253 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857260242 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858354738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857152729 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.857290034 seconds)
  done (took 57.480871441 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.8776947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.878228747 seconds)
  done (took 5.540742299 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.859175212 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857741027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.857901227 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85794669 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.858568718 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.858143549 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.858375317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859116727 seconds)
  done (took 16.652471107 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.862674981 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.86714615 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.863021921 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.862890718 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.865035226 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869128566 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.864338199 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.864932768 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865099371 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.866582101 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.868373903 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.867240398 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.87505085 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.866076106 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.861756691 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.869657574 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865259105 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.867223283 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.863742067 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.864782759 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866907404 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865508093 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.865729542 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.866260127 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.863960868 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.867340074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.872761826 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.866571317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865546473 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.861817863 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.871531472 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.865488386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.864682169 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865123528 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.8634844 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.867446854 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.871238419 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.866473939 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.865538791 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.866223739 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.866393473 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866938814 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.866931867 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.871840486 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.864879671 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.866405579 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.864506038 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.869322724 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.866643781 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.870220332 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.877002848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.86626577 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.867067455 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.867681213 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.870839967 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.869868108 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.868990683 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.868135508 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.873475747 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.872614384 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.8673686 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.887485679 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.874590547 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.865638823 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.864688925 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.875909875 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.894860008 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.866699439 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.869736487 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.865239269 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87181199 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.864671686 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.867515549 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.869760859 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.877932225 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.876992566 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.868472634 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.86739738 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.867388723 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.869044976 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865588102 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.867239657 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.867350523 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.868098082 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879216711 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.893356924 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.86561404 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.869385959 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.871071492 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.867928705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.872652558 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.872513356 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.869921226 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.869098515 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.866495151 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.868445802 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.869049274 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.869282435 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.866236705 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.874722537 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.868754855 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.870259573 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.870262746 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.87908234 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.867862865 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.872165023 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.869838146 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.867856166 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.87449798 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.86793091 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.870221755 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.870759826 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.8686125 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.873132651 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.867536181 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87356054 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.87927898 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.874853422 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.870237748 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.872473346 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.873867412 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.871198055 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880653095 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.896661214 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.86990647 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.873620924 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.874467318 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.88741806 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.875470961 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.869931898 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.873772249 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.869164169 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.870734468 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.873983213 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.868786059 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.870956426 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.871969362 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.873158647 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.869651151 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.871156185 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.87322186 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.874008783 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.874375878 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.87178492 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.871549393 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.869724665 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.874171236 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.87578948 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.871673814 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.874072466 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.874109609 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.872908843 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.87353432 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.871088757 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.872709778 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.869458922 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.874467711 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.873399628 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875069892 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.869873971 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.872887614 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.87081875 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.877812942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.874416666 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.873251958 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.875636798 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874163023 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.875041948 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.877785281 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.872094526 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.874926788 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872069987 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.876503055 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.871268061 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.873015538 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.873681847 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.871293406 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.873684754 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.876136658 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.884832947 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.875849312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.88433866 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.868915468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.87777635 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.870662757 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.874785195 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.874256205 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.874266488 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.872643411 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.874585307 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.875333177 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.872936367 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.894212317 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.884782651 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.874976733 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.875492739 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.880825115 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.877823262 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.87770788 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.873426259 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.874625763 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.874614778 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.873414869 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.874185343 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.877170372 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.875435396 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.873940571 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.875809227 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.877303016 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.873348488 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.873298031 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.873735036 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.873390115 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.877517009 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.87070912 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.871843409 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.874058676 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.874966708 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.880842166 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877447238 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.874984876 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.875352366 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875739969 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.874705177 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.876568832 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.874153788 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.880411744 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.873997728 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.875157892 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882962369 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.876927275 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.876482151 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.872705612 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.877418003 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.877060898 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.872131572 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.878887563 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.883257181 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.878684721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.874448825 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.880987727 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.874301153 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.878832159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.874506243 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874944235 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.875086429 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.876078636 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.874083346 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.876389756 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.881904451 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.875292038 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.874956842 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.873856033 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.876368014 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.877553922 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.877760853 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.877031434 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.879243324 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.886619493 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.881474925 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.875893578 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.880218314 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.875218147 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.876714178 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.881991977 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.877436526 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888200395 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.885542467 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.877303582 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.875043937 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.879590929 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.88039226 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.879662642 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.878376774 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881464892 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.877411191 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.880164764 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.883982261 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.877257757 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.879204138 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885790347 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.879494461 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.884348724 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87639461 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.880951294 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.878277669 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.874525417 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878873278 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.876159095 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.879270518 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.881420778 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.876427418 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.878130153 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.878361411 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.883715091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.878965481 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.87848604 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883410042 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879392761 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.879345851 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.880465737 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.878360189 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.880233271 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.880606402 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.877244743 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.878058661 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.877695488 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.883706557 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.888035305 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.883507765 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.887908347 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.880778683 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.889826873 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.880889538 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.879952098 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.881670328 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.885635677 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.8921232 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.881647122 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.880220035 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.889017133 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.884377248 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.881140575 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.885067308 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.878164141 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.88143223 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.878370521 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.881177778 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.88385987 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.884944178 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.882056992 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.879329389 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.884679037 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.880996912 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.882948193 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880966198 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.88011195 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.879880015 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.883142645 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.879766485 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.881016419 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.881241349 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.884712832 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.882705325 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.884927109 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.889715038 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.88204362 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.884216766 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886033693 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.882207767 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.889177494 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.880998751 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.885261967 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.882995133 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.880644482 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.88565866 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.883358274 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.882611744 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.880483858 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.881384168 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.885621832 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.891485749 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.891813801 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.884770775 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.886830376 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.883518182 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.884337889 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890017048 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.910972798 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883662069 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.885764554 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.888300153 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.896128107 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.883559476 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889430812 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.887987289 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.895529872 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.886415897 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.881279654 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.88560871 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.894160586 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.884300486 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.885138355 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.88438865 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.888495592 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.883249724 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.882457445 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.887040788 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.885316215 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.886760302 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.894451339 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.884808125 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.887616671 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885052693 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.882819969 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.884527943 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.882808103 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.885255677 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.886870531 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.885249234 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.882093714 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.885935692 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.888387873 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.882907619 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887168709 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.897212401 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883610173 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.885653944 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.8844823 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.884627081 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.886691267 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886401036 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.883564886 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.887561188 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.885726476 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.88740877 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.891357483 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.89758074 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890456437 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.885617758 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.887652998 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.890246683 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.886220417 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.88511014 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.887618416 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.890410307 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885951725 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.897857474 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.899320642 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.884423299 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.890140095 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.89609586 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.897910132 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.887946148 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.885173645 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.887616471 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.892504408 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.887405732 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.887308392 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888407934 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.887667256 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.894908659 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.889834292 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.889395672 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.884650126 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.886714099 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.892310054 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.889410537 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.892722805 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.888068986 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.887625656 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.8845285 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.889773757 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.889018213 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.889931044 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887106944 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.888512303 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.888420377 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.888072146 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.893279238 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.889988737 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.888649845 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.890358528 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.887780227 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.890519198 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.889766742 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.886605622 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.88738234 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.89315797 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.899087394 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.890374599 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.890696893 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.889832487 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.892162322 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.88760486 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.891289603 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889329812 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.891257375 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.896346887 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.888266768 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.890344847 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.888623782 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.889618494 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.89046567 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.892521061 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.892363546 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888480172 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.890393268 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.89452032 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.895506148 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.904341958 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.898241816 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.894947936 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.899851465 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.89373967 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.890416069 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.890136295 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.889672893 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.890564297 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.89065712 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.893635378 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.889626607 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.893626637 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.889294427 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.893507348 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.890410616 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.895042451 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.889415116 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.890720029 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.892041143 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.901126618 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896171269 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.892553292 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.893158961 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.890853757 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.893441074 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.901792598 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.889396847 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.890077124 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.893511358 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.891551605 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.89124525 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.898247967 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.899469341 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.895086611 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.892672591 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.895641203 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.910326407 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.894925292 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901143408 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.921800413 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.892394012 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.891100225 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.893976219 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.88993755 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.890317413 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.893156745 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.893445085 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.900897525 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.893569508 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.891917274 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.899372279 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.89146077 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.894252048 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.893413412 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.891613188 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.897316637 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.891756244 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.89868763 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.891028146 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.893117306 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.891907131 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.890524727 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.890196732 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.892595234 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.891917884 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.894974055 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.891089285 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.892528239 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89879247 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.893098217 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.895156473 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.903372096 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.902717742 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.892657049 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.891958092 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.892150822 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.89739395 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.895318783 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.893035355 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893625033 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.904721109 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.896659905 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.900247849 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.893952812 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.892628093 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.892619401 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.892155105 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.891347438 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.905734193 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.904984692 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.8927562 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.892171022 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.901368657 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.896600646 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.900111967 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.898278823 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.895777669 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.896416096 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.895472953 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.892691636 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.892140025 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.892002329 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.895039814 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.900233511 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.893935431 seconds)
  done (took 1123.205462891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.890931909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892177264 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89204364 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.893800406 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890507522 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891529132 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891135806 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892070531 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.891438556 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.892004641 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.891328843 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892646317 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.891968606 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.891769947 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891969037 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891623481 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890840764 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.890346431 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.89098402 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892422573 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.890617917 seconds)
  done (took 41.542393787 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.891331086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.891075764 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.891648433 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889613447 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891013735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891688353 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891030162 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891013457 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893755253 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889654281 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.890733737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891026481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.892751013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.895653137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891155385 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892486041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.891028656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889721995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.893290824 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889682722 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891540611 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.890112929 seconds)
  done (took 43.429156719 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.891494973 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890688848 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.888054295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.889501875 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.88888589 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.887903002 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.890304445 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.886989842 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.883684542 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.884799397 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890929252 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.896053408 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.883305564 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.888467446 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.884808907 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.886744758 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.032707663 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.885525641 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.885984543 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.884639983 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.88535417 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.890380268 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.885779329 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885616172 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.885348448 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.886657447 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.887068725 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.886524731 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.887542801 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.887523541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.888660163 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.884431778 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.88656584 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.886456445 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884610961 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.885078281 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.890759875 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.885759735 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.886404917 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.886751699 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.894835504 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.909623828 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.886618555 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.887375876 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.889526209 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.884493862 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.884766064 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.889922575 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.896736191 seconds)
  done (took 94.476517831 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.884774795 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.884811287 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885934033 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883993994 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.884180669 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.880590771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.880748761 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.881017956 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.882100545 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.88296128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.879294329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.880975235 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881521858 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.881004968 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.880795021 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.880243954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880294686 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881181866 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.880637131 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881935425 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.879715355 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.878906742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.879826141 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.880542611 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879516647 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.880617046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.878998702 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.87898038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.878022059 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.881465294 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.879731021 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879689709 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.881032246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.879694259 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880158549 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.87989764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.879604959 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.879390501 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879960485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.880567128 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.881821956 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.88202466 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.879961102 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.880583026 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880958514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.881616421 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882711041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.880180291 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.880244481 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.880729974 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.880906822 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.882517686 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881815266 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.880365413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880590723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.881895891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.88077966 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.881868015 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881776066 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.881997142 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.881592447 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.881781592 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.883187195 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.882412786 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.882300819 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.884267503 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.881970648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883056637 seconds)
  done (took 129.737925579 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881652507 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.880970971 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880468295 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882375303 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.882792277 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.880013849 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880120039 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.881706377 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.880360751 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881892292 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880615154 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.882815601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.88083972 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.881395393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.882983255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.881869194 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880491315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880516569 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880709115 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880521488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.881614802 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.880269573 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.880134454 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.879497923 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880945012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.880259894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.879343158 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.879649048 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880133948 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.879471522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88131395 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.879277193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.879211086 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.879617761 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.877888992 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.879459612 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.879465896 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878287958 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.877692892 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.878689424 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879105587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879226178 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877720572 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.878510957 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.878101072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876666093 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.879923442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.877319876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87731414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877123571 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.878077598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877113169 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877459729 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875339805 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.876116027 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.874640331 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875436221 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.876854666 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875977585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87546547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876462932 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.874551754 seconds)
  done (took 118.324922116 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875072396 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87592224 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.875296363 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.875011139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877179783 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.876038413 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.875883564 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.874693084 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.876076599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.876611525 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875572219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875215827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877193763 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875871007 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.874687983 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.87693589 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875388844 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.875590301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.876445865 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.875218099 seconds)
  done (took 39.323489502 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.875082139 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.874138172 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.874998614 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.875751838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.87577613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.876249913 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.874361869 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875156154 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873981791 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874535758 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.875041199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87447663 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875286937 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874731219 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.874556721 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.874439895 seconds)
  done (took 31.804487737 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.87360367 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.873949522 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.873644334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.874707291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.875066818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.874883082 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.874511915 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.875358242 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.874074021 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.875853295 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.874705437 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.874274953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.873132864 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.873719705 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.874374276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.873858277 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.87436837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.874491684 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.87393958 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.874366199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.874700278 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.874798455 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.873666959 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.874763724 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.874586394 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.876380668 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.87404681 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.874299551 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.873690364 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.874359243 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.874162536 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.876000791 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.874271683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.875077609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.874025968 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.874476801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.87579958 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.874555995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.874129471 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.875857147 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.874239064 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.874881362 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.873724536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.874156107 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.875300092 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.874666408 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.874328267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.87573278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.874409178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.874723091 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.874628959 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.874662267 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.87533101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.874369238 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.874560156 seconds)
  done (took 104.908352309 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873903279 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.876577846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.874905717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.873437007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.873521409 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.873471081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873327652 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.874330298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873705166 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.873698921 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.874037912 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.874150322 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873880036 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.876120031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.873965251 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.873270025 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873385375 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.875939419 seconds)
  done (took 35.540621284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.873438327 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.87384324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.873067295 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.873464711 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.874034461 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.873758389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872775021 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.877171598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872427779 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.874029358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873438743 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.873007353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873698818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.873142353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.874169566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872572763 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.873592713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874002609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.872960898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873563232 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87345648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872997449 seconds)
  done (took 43.023674834 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.872875262 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.872773827 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.887533612 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.893379207 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.890890613 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.905243767 seconds)
  done (took 13.127366337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874421624 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873622648 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873540313 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873456285 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872971073 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873357114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874553498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873562753 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87311277 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874087474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874982492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874158378 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87404904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874354085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872437533 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872434281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87348446 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874057452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872179335 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872918203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873776101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872384559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875742531 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873301076 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873548948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87469162 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872193232 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875985451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87320754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874307816 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874653687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872880689 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874553853 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872623243 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871251137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870617141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870916379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87140634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871994083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871778445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870780176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871793847 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870804321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872696905 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873272506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871581288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872130307 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872158667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871652923 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873322439 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872805538 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871026709 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871797505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873493477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87365173 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872139621 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873584573 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873004886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872035917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874870059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873096411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872952406 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87222115 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874192945 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873808379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874855163 seconds)
  done (took 125.429422504 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873630936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873439876 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874193481 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874416568 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872850411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872910641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873163999 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873473981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874141224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873884609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873724726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87342071 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873634777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873886686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875166589 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87403449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873406665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874041437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874600883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875082962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873274829 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873420836 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873641456 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873768532 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875557407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875063299 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874835792 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874028914 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873635966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87411742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873872886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874285779 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874485569 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875016486 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874907827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874806978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874767674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874310819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875163051 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873945992 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876049145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875128443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876400246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875474225 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875300358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874843042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876761314 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875686017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875930947 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875538354 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875564242 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876956192 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876635024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875536037 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875974984 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875731811 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876169908 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875953875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875746123 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876212106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875386581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876012918 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877411155 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875476726 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875856557 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875505178 seconds)
  done (took 125.543370523 seconds)
done (took 2601.501161569 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.943841576 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.896102528 seconds)
  done (took 15.648392053 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.037827986 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.99307024 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.878072304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.91208927 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.878686609 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.900265325 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.907421053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.878108077 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.878651159 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879887258 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.879016885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.063437722 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.901832929 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.878545646 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.878453777 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.969253268 seconds)
  done (took 52.529588931 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881051108 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.884093804 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.891168841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.885573584 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.880062647 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.892984728 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.913019301 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.884249211 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.914070541 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.892366671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948236301 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.892168933 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.880344313 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.930196932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.893623185 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.895405682 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.972332895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.955357659 seconds)
  done (took 36.095834287 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.957783297 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.886412283 seconds)
  done (took 10.660551277 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.897408875 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.882843646 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.917262573 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.892540068 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.879412178 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.906957851 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.880028601 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.916458654 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877218803 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.918099738 seconds)
  done (took 70.779701109 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.888114851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.887284806 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.884092147 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.884187674 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.880800836 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.886337434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.883903617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.884097112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.537858738 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.918109432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.889298432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.891013311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.886034969 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.884933289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.880746513 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906438205 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9924634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.879897621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.880219511 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.890895681 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.885025947 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.943383313 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.89715596 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88365929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.913304013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.540185189 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.89026616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.89060534 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.991978457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.881657244 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.887452614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.074397489 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.884703202 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.345869543 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.162312107 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.885976567 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.897289504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.895494488 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.881064431 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.002212884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.886523977 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.891534447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.808467193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.142383497 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977872697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.929997548 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19388642 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.901400919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.885382448 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.915574225 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.888982521 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.886967412 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.896999983 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.382821165 seconds)
  done (took 133.551377944 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883093482 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.228689611 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047415164 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.881578168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.167632043 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085568562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.883047017 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927563465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.883228828 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109426342 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.134212305 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987240417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883928793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.88146241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88531319 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881216093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035389283 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950839424 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884771377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.880799575 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908089251 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119658144 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.002708743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.886076365 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.907389837 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090600564 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.002408429 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.985963117 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.676181252 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.881750819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943810986 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.885223706 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.88421738 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.883910995 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035932218 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.005257185 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970137709 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.884395332 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883898516 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.881623401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.630237104 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079131588 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976467768 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.011101079 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13351754 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087657973 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.659824009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.883288448 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.614420184 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044450515 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.110995897 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.111079896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003479313 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.887007427 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.221676751 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884298005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.882560314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.132466065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104541958 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.983149463 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.303068267 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.885351444 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884349894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.17318674 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.889085371 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981222758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88753278 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.884671411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97939804 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982341437 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.113926234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094504579 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913886573 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.221291319 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.395366573 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13040559 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94880914 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.886701719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885249824 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963075408 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.725721397 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137845416 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.165354099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.128961745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919294439 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.601470209 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.885212808 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.109294503 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.104830279 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.144552239 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128349731 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.11997424 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201995628 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.884241031 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.88631653 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.102436056 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007246993 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.889043256 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228753218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116623208 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.444829787 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.912518018 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190188286 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015075515 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.888589241 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.513140633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.884334663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.114380797 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.924671409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.887161235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888003843 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106662876 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.870772775 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886145681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.531155385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.947194205 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.890723258 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117901244 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.890258529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156013481 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890611231 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118355821 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.414357435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91757321 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.059421095 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.129897035 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.888762182 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13105484 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129682995 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001438017 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106686431 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.501842112 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891373945 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174674113 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891189927 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.888197159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054449655 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88846605 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029292457 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.894663605 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181595045 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908659015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116524252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.89035213 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.139883196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.920698992 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939096907 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889006643 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011296205 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.893014196 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.804109434 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043470947 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890843974 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.89086569 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.456586986 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.890194364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035441953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.113697297 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91113968 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.958570174 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.546100436 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.889468449 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970962925 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910333734 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.271078342 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.888944888 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.140756246 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.893012296 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.889472474 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.888278584 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.176761004 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.073908418 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89293821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.889690461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.794298693 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.890267468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890579382 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.069264527 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.285108827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.889765876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093651956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.893969736 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017409462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.893492942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.974946183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222802877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890783968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.892432978 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.892782761 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.892203034 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.891242696 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09770336 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.915365036 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.419736359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.026056376 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.165402049 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.20043291 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.129365976 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.933622824 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.896296185 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.150747502 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.895950729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.955321334 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.894298874 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911583296 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120138663 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895300982 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.183093174 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.161187007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756626306 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9384562 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.894414617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892863436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.892109839 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.035323827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975835427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.894890017 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.890996728 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00593639 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012463779 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.098767297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.894987358 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.959955681 seconds)
  done (took 908.249952649 seconds)
done (took 1229.322641076 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.89365826 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.893671549 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.896048653 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.896094787 seconds)
  done (took 29.404502262 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.894436991 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.894197098 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.896453006 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.894911922 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.895088003 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.893757176 seconds)
  done (took 13.194892469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.892257594 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.893060726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.895331216 seconds)
  done (took 22.506429572 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.965072035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.277452418 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.032585729 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.305926992 seconds)
  done (took 10.406072594 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.896466835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.89563772 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.894917688 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.895964233 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.895426892 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.897100765 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.895787859 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.895682591 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.897866341 seconds)
  done (took 18.892099152 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.011359215 seconds)
done (took 100.239537213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.983101921 seconds)
    (2/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.041575475 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.17525147 seconds)
    (4/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.136883162 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.278801692 seconds)
    (6/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.442012071 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.930231483 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.041702343 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188411148 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.909949021 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.307437235 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928690445 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.125011044 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.912341295 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.452832899 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.415540508 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.075698171 seconds)
    (18/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.079422643 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.014775323 seconds)
    (20/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.93153084 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.932681845 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.994931678 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.395097507 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.953066484 seconds)
    (25/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.361311932 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.051073896 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.579100846 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.682620952 seconds)
    (29/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.046148536 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.90907617 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.095898031 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.146266811 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 4.800554995 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.975767954 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.077974272 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.210903357 seconds)
    (37/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.78670992 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.179604958 seconds)
    (39/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.994834388 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.934318349 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.587106255 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.08456632 seconds)
    (43/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.800433031 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.915102331 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.470108854 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.992913286 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.02759352 seconds)
    (48/309) benchmarking ("sort", Float64, false)...
    done (took 5.690153332 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.912976463 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.014987236 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.235968271 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.339662172 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.127601003 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.930058441 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.054860399 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.043938609 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.909436263 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.242210936 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.856868691 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.926330801 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.046616738 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.604269827 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.164276211 seconds)
    (64/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.990538987 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.100204829 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.943467709 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.984491287 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.068234797 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.934299118 seconds)
    (70/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.287570525 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.518453811 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.918970728 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.005011214 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.915818375 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.912538839 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.129094748 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.389066501 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.229949482 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.93342678 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.913345928 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.244116183 seconds)
    (82/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.995293631 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.922814983 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.352481427 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.925283471 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.226195339 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.994862166 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.913147105 seconds)
    (89/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.208432515 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.15865442 seconds)
    (91/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.952535078 seconds)
    (92/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.913819182 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.122691521 seconds)
    (94/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19513527 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.250510079 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152788259 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.916845086 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.015959389 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.34881293 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.196617323 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 5.656275521 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21090355 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127649609 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.224031316 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.935420118 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.224282033 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158588624 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.919279939 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.084742292 seconds)
    (110/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.379711042 seconds)
    (111/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.385030853 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57826136 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.477373437 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.963453245 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.018154723 seconds)
    (116/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.668693869 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.04202999 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.913060189 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.280156164 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.046378099 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.946772792 seconds)
    (122/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.914404341 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.913139632 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185743746 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.24504933 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.01484249 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.298783512 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241922601 seconds)
    (129/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.674442888 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.917033144 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.921986471 seconds)
    (132/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.189129955 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.920523498 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.192352677 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997181988 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.951944775 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.3119042 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.096891356 seconds)
    (139/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.020233388 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.172738371 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.043466611 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.216986857 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.227799905 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.17505367 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.890646274 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.923170172 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.475526484 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.937035856 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.57282014 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.940359539 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.915164141 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.917156767 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.298546263 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.130420314 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.053733616 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276770069 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.921873486 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.749560124 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818399615 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.031984046 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.318342982 seconds)
    (162/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.054739579 seconds)
    (163/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.687059243 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.841490629 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.938711775 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311258292 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.59458005 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.928024931 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.025938432 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.282667998 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.035579308 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.150936714 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.019434624 seconds)
    (174/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.831178994 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.923100329 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.216435901 seconds)
    (177/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255058247 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.17032619 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.26076497 seconds)
    (180/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.056795809 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.022083823 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.926461809 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.916907621 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.921636426 seconds)
    (185/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.075434561 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.997882149 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.106146998 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.919517536 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.863707477 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.922030943 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.983685098 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.150765636 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.175359778 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.050000468 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.081939964 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.923552126 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.505529499 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.059083216 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.921082897 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.99859073 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.580270165 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.918816652 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.112030469 seconds)
    (204/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 4.229161686 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.925364984 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.021753142 seconds)
    (207/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.162239469 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.003643307 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.076007349 seconds)
    (210/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.927632552 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.079325736 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.705952582 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.971911882 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.889966246 seconds)
    (215/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.433471442 seconds)
    (216/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.011633297 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.265363558 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.724144798 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.924694774 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.915930846 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.239356858 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.959393584 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155300078 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.324476967 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.276194438 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.953446452 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.255403185 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.058570668 seconds)
    (229/309) benchmarking ("sort", BigInt, false)...
    done (took 6.928353516 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.120544547 seconds)
    (231/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.033337684 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.218235695 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.615875067 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.920262963 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.05947936 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.075449266 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.027511937 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.950315958 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.926296333 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.248499055 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.023766787 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.950584566 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.932985356 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.211940857 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.051956546 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.928175832 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.22745533 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.924898472 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.194298071 seconds)
    (250/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.812456286 seconds)
    (251/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.250610552 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.018842374 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.021614761 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244266076 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.187984786 seconds)
    (256/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.60641624 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.946375253 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.017533614 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.922867016 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.927349143 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.017256276 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.044529938 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.081151038 seconds)
    (264/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.927101695 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.045141739 seconds)
    (266/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.271026525 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.323767147 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072573374 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.133187025 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.110818352 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.233768061 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.029998676 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.13341891 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.942197427 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.003926763 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.928242962 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.551514244 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.987711617 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.927239182 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.016145866 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.301761572 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.012608615 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.382890968 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.075725084 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.011903907 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.061379396 seconds)
    (287/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.960894989 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.220609241 seconds)
    (289/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.95395579 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.786915631 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.305171803 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.930493512 seconds)
    (293/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.125442481 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.92762571 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.928233284 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.542831597 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.092959865 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.308627528 seconds)
    (299/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.062646573 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.955856018 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.012443833 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.931537692 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.028461774 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.030622449 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.230726068 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.143251001 seconds)
    (307/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.92737715 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.305154322 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.182170015 seconds)
  done (took 1020.114983115 seconds)
done (took 1022.227885652 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.956370036 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947077903 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.93020293 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.95233258 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.045484697 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.97580877 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.944640343 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.935566037 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.980856991 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.980935821 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.929729677 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.973470773 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.933231671 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.933825939 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.933521539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948581163 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.236587973 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.962889558 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.95282955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.945222641 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.952342767 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.932039687 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.980870079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.972377041 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.937033956 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.93728081 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.935532785 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.952910733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.046096936 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.936190216 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.939753154 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.945041815 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.236555814 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.960427769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.930966118 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.954692414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.945352772 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.944504921 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.937536336 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.966002335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.3270962 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.97269595 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.934550271 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.933392582 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.933479129 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.939262599 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.934483546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.941889248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949578119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948933707 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.320888486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.990336467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.937815636 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.935140803 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.947749984 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.93490559 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.938753095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951791866 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.955111432 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950958057 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.228300624 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.970433419 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.938426561 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.953151517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.943826058 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356486467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.97324387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.942218409 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328690621 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.981298482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.355915786 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.9843035 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.93780075 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.950844056 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.969227729 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.239703103 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.961255047 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.935174653 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.944732551 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.934450609 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.949365968 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951152214 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.940245878 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.935430095 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.951382127 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.979562015 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.947470051 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.937384958 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.946851718 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.956647883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.945809365 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.948545731 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.939424375 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.934305499 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.949347399 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.940549547 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.93986683 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.939470337 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.941684881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.950457847 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.325804742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.990373041 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.932592478 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.93396353 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.936356659 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.952105497 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327405306 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.975273735 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.959660581 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.986763687 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.938065128 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.229081226 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.968498248 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954444186 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.948498166 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.939648527 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.935024882 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229114868 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.353519174 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.991737072 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.938191224 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.937327738 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954356038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.939320749 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.93520235 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.243362932 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.967976219 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.953433664 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.06054662 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.951333173 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.971720122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.936870292 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.942013724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.9848371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.955704308 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.971946654 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.941941816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.955683139 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.956680087 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.936696784 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.951351735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.951929822 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.938708145 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.946611668 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.936998063 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.98534375 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954972517 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955105699 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.960954575 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.063831656 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.938803937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.231251671 seconds)
done (took 304.104147815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.013270865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.933429388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.031530069 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.937024954 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.024741793 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.00743106 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.936651249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.936281958 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.937298245 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.441072501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.938366776 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.942472244 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.937013222 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.936889455 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.005775966 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.937416345 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.936623665 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.385906369 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.937431981 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.015155955 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.935848512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.937479105 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.937522698 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.44547285 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.935381566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.937316803 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.015923637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.937807713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.390957857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.935901659 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.937415279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.390931595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.016969731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.965846097 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.945468001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.942262496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.025419671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.948622386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.005401295 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.004260582 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.032278378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.971688866 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.936728724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.937951767 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.941042816 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.940204664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.941339995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.969616776 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.938888907 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.944494173 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.389437797 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.947876294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.946802774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.940806971 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.940070831 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.968328602 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.941862652 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.941438613 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.019577987 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.941630265 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.007657237 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.448316232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.442710592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.939961865 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.939234795 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.941670882 seconds)
  done (took 189.880017068 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.00642812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.015382964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.005768565 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.94622128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.988647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.008298357 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.946395232 seconds)
  done (took 15.786401848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.948392201 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942847537 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.990067027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.990320839 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.940781236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.120556778 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.952103109 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.947441348 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.969723724 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.943265768 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.578036933 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.990371354 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.949326743 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.941252356 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.952600946 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.998363951 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.943808126 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.94289642 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.057102198 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.089550521 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.946912684 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.949836848 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.969497617 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.952586371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.942743441 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.942964373 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.943564172 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.94882855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.942603638 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.943608792 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942863579 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.994076736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.943439793 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.94195378 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.944379865 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.943406134 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.942061546 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.943399482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.942782177 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.940626262 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.943651748 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.943874397 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.943552888 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.943151732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.943168247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.965718449 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.944738708 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.944601253 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.94428995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.944133191 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.969706508 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943936528 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.946564169 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.949388679 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.986121609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952150166 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.945179676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.94439181 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94577882 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.945418523 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.945729547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.093378154 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.993321456 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.94459243 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.994485081 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.097981459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945766081 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.945428199 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.945154257 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.032472364 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.944955279 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.994217633 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.945921996 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.058534216 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.945278703 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.123707404 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.967781962 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.948222556 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.947577742 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.945373072 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.952521718 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.945251686 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.946993353 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.952190023 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.951275662 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.945903889 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.946729598 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.947493217 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.953835941 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.946206637 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.996396267 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.947593633 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.947847243 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.085339466 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.947294134 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.061207659 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.973523663 seconds)
  done (took 213.220320248 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.951901492 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.953191097 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.948641968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.963674578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.947560712 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.9470487 seconds)
  done (took 13.586460446 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.94889464 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.952069979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.947022227 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.946987895 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.947081595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.947741442 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.947039802 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.948234792 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.951313451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.946925754 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.950324221 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.947853712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.948290849 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.9468742 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.947954135 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.946922737 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.947601914 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.946780496 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.947485125 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.947920889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.153346049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.948370494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.948045223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.950660905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.95370248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.94769783 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.960327107 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.947086749 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.947396727 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.955046071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.95267826 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.949361094 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.950644526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.95472678 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.953019357 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.950998508 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95195984 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.948297996 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.948930407 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.949633656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.949050017 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.948157603 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.948188064 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.949091768 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.949561876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.955775344 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.953640486 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.961788064 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.949841392 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.949876054 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.950172283 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.949368942 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.949997289 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.949677514 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.954696674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.955194146 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.954025196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.949637732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.948841387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.951947289 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.953099712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.95093675 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.950388548 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.954017424 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.956675268 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.949941212 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.953088007 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.953936518 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950840582 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.949970395 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.949943204 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.950149578 seconds)
  done (took 143.511875351 seconds)
done (took 577.864833289 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.404060234 seconds)
  done (took 9.281595025 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.141458779 seconds)
  done (took 9.124614432 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.55100687 seconds)
  done (took 10.434100919 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.974622866 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.959478823 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.959432091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.955119455 seconds)
  done (took 29.745928229 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.208632072 seconds)
  done (took 9.086950855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.972232185 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.949184984 seconds)
  done (took 15.864158412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.067851086 seconds)
  done (took 8.952662573 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.270249144 seconds)
  done (took 9.157879522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.974005333 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.978940488 seconds)
  done (took 15.851512812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.954132551 seconds)
  done (took 8.835457271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.189706753 seconds)
  done (took 10.154167809 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.969071958 seconds)
  done (took 8.918145574 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.992118031 seconds)
  done (took 8.873795409 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.032452482 seconds)
  done (took 9.912811602 seconds)
done (took 166.071174901 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.967971431 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.95432862 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.953980462 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.953921753 seconds)
  done (took 29.711801505 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.988078601 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.98820561 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.99614504 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.987752535 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.979538167 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.978551219 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.988830157 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.988620246 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.978592413 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.986435043 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.988498643 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.985692173 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.988912457 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.996641788 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.998381435 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.98675628 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.988541736 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.989330743 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.979421078 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.998821027 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.987465499 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.989063027 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.954445283 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.954281066 seconds)
  done (took 49.528176617 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.145920947 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.025057905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.107166811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.006484944 seconds)
  done (took 10.167337497 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.953343371 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.018152232 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.005667246 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.002489747 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.007304486 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.057548859 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.008462799 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.093568781 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.084024431 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.082674695 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.9641273 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.97703082 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.979780665 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.001912989 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.057998849 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.953913891 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.954481578 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.070004754 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.016584176 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.140800429 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.954801409 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.009849596 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.006643015 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.007925726 seconds)
  done (took 50.291547815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.955337526 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.96359807 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.962277846 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.956135056 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.95723045 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.957439575 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.963060328 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.957863761 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.977536403 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.960028231 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.956219515 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.956828716 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.963888499 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.956958328 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.957089723 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.970355747 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.971876208 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.957446422 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.961929072 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.964138559 seconds)
  done (took 41.110305233 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.954250378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.803397835 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.300381527 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.208612473 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.956154453 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.957503726 seconds)
  done (took 32.064717981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.967947607 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.963754775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.957152719 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.014840193 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.095801522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.962928536 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.956424596 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.96703497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.003354599 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.02144056 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.978254515 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.984364527 seconds)
  done (took 25.757378479 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.958456844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.959502192 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.959830664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.970051209 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.968151104 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.969141011 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.963772893 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.956924291 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.972438078 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.978266858 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.968186795 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.969824798 seconds)
  done (took 45.482372081 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.666069367 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032961694 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957525817 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.833331952 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423924095 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506261698 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.850048321 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.549864521 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489462654 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.884818141 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161220836 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.95717918 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042841308 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.959704661 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22781254 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.270949978 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148345256 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20217905 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.738184916 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960490371 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.160112737 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166215772 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.241698869 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958747213 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961084748 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.967915392 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.527910503 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.606001721 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057688808 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.354444381 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167184753 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906389524 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006864326 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.96185638 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.969755711 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961676267 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963807903 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230530175 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.972087211 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155924971 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028842461 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206852342 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964522565 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371002799 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.667194739 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.210602569 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.067493173 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959346706 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962411412 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9597519 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.887073268 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043236121 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.963009573 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965785609 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.661260913 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961018614 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035416538 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.961062308 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163054797 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.767006618 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640954318 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.962594918 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961280235 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52483633 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924579812 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.141147436 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610827528 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394692382 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372021196 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.05850509 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.963051661 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962751192 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.183601925 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893558847 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.60482594 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063639792 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09801753 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.978764713 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601903094 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24601731 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.332724772 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.523502798 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884485513 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227831957 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.723614445 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91651772 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179000592 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.805978852 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888025994 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172536906 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990606322 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96564847 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227611578 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550926627 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13879015 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.975059993 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391878412 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981898304 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96758764 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964264665 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179291466 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475489679 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96464804 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.087608888 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979476849 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045905602 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890219279 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.976441906 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.96465043 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.846612142 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965558788 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751733832 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.080277233 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.865703637 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968330307 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.902476387 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966901097 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.932616034 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069156775 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.913954199 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203692872 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.251146002 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.62022402 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780612536 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.165685988 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.28991757 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187626655 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.968575388 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178304074 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494416391 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.345847807 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011841951 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250827799 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.018708406 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250010013 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373195816 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041291926 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615140409 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560769692 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.183344188 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978801941 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.965833285 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967942103 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96935384 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901897923 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.590493447 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285401136 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.129571943 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179321045 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.242198961 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.051255879 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.769480863 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359785656 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102836083 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.959927132 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.604514677 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.31332757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718476118 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.048502162 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06654575 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.167535383 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.998511398 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980210223 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057949851 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982557028 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.979141865 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.292174297 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328076817 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.968355272 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.968062312 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.917027905 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972147341 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.96852824 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491110693 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938571807 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.970443599 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.979283512 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.841981095 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026544043 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97009605 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969838067 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48323898 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472340145 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.971880192 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.628043746 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.982182912 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117302943 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229328753 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.267962415 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094037838 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.668991161 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.36076194 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.076305581 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.670216571 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896727251 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.96857221 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.905606189 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970921289 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.968705203 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973633273 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.155534222 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234916694 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263169658 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.41083527 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026326354 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171600836 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.566690446 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990045385 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.970742069 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974213554 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.977789945 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970928497 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.487796516 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.512998395 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.935683747 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071046406 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976878539 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10301888 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.983213286 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.898546623 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.973380602 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974665034 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351637319 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.06409916 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919894526 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221914637 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.73031501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161895211 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023858975 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.984099606 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977602006 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.565576131 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.081005139 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899521345 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340350188 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079128395 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.563719164 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.715828229 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.544667161 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258017328 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275267442 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.285653591 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.038534017 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.189823803 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058570501 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028921061 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062052346 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91014713 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.90092799 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.613679599 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290762763 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243045721 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984757748 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190147839 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615214903 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270364199 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003781958 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.759089955 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342670014 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.944450252 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991216374 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.259624691 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150931017 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057229759 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977739192 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92476447 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305389137 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010224176 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.675237327 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987845183 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32982007 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342871913 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.200060739 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.287194073 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186240596 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978994012 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316549303 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.129474201 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08305495 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981622066 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.947202762 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.195221296 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557898086 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.813127117 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982050049 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.068890007 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3298664 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.875545868 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.97864204 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.066472705 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305924283 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975389998 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.273197733 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33136709 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.07196242 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024493734 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201840219 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593305578 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341927161 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.516140352 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.449531275 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983118668 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.903548087 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.678887164 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.179504061 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.985741345 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942600203 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179303631 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206376735 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654489834 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197726232 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220500586 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.988018627 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23859441 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042678676 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.073640081 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246511952 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.415303371 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.218402919 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20412938 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507681089 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195959373 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418308436 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.13639147 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.97918881 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184488023 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195392872 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192422164 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.297196172 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137600077 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.688435515 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.983927433 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.184707257 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266324922 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033034882 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.304752819 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151484136 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.062349646 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984813062 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044093459 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984127535 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987907505 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304989081 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500066418 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.993967103 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055997224 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.948031032 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.540235653 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.987092507 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.983991739 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241650197 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312912494 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297693207 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957172789 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.980450008 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980732134 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108918721 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.906759522 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985872547 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251546878 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.983308365 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331255283 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203817099 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997227669 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246013518 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.368649667 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.591715624 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085266635 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985912326 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187394262 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272567366 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.119006241 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165375827 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253486191 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313018665 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.008578166 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304700888 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224126777 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983600227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.855225102 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985558326 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118318418 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.185454354 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246592802 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.480232858 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571208704 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315628525 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836233368 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984298539 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.570456647 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322356013 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244994741 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.027506021 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046345174 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986512068 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359890207 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.805708926 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114880748 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.852262904 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910855398 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.997470615 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272199858 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.223579555 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.693662441 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986610408 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248932036 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278578412 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246551162 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.02682583 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.852496713 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198200618 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9852896 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.995789265 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253514132 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190711528 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221785666 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986989924 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.993015356 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.789817661 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910002581 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.985218446 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027400464 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210644457 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0015124 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.498304953 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.683812561 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25256772 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025213504 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98721792 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247224377 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.480813269 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.517723632 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994775867 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186834678 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.820190408 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.356631027 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.986463346 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356895669 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359397597 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.985540156 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465300078 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.30302639 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253990522 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918251098 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994706285 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198813884 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.854139941 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.990008589 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970418322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357687809 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287996145 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.720632053 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542573035 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.98858922 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.988948924 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359386285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08843864 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364428284 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.07876702 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007017759 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511905775 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.680225456 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.271804287 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229628358 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468319691 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.658033325 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.988840818 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.986360041 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98864545 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906349239 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.175516032 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.174119177 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258183046 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012781117 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365477084 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091733608 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.292308702 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100800511 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082823719 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097959941 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.508829727 seconds)
  done (took 1706.528955321 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.989865092 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.043563976 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.033973266 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.025597898 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.995182949 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02052026 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.002960814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.051494518 seconds)
  done (took 58.07745357 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.997794178 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.134560129 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.99259517 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.988748485 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.99247037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.989304705 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.185517974 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.999794964 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.993054403 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.992663158 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.991016758 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.998974783 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.280139242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.006898491 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.987876443 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.989900017 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.993416753 seconds)
  done (took 76.489206639 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.99093139 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.1568994 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.029648971 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.988666173 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.713194952 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.0041125 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.94746754 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.990728996 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.995472345 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.031621231 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.28720034 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.038894802 seconds)
  done (took 91.091168174 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.002879104 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.992488815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.991930368 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.99150441 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.991834291 seconds)
  done (took 11.89521333 seconds)
done (took 2230.164749261 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.227835649 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.048307052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087552044 seconds)
  done (took 6.051726465 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.137079064 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.183430522 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.294720822 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.054797327 seconds)
  done (took 10.591821035 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.300064781 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.355567709 seconds)
  done (took 6.571539623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.305655059 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.009822521 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.362283571 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.992822874 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.99436685 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.993651612 seconds)
  done (took 22.901626882 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.991722386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.991883147 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.991900452 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.99218621 seconds)
  done (took 9.8850847 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.990102559 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.77202202 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.992545134 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.00081987 seconds)
  done (took 21.672628634 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.138882139 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107196299 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.134540587 seconds)
  done (took 8.297800197 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.212064458 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.839222472 seconds)
  done (took 6.968908467 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143908147 seconds)
  done (took 4.060879088 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019798679 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.262466942 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476035399 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.037151338 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.616789781 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.241332684 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.334057382 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.218277613 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.432429245 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.467736926 seconds)
  done (took 27.023491309 seconds)
done (took 139.846217406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.578515159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.02801427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.19770676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.366240698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.23264373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.197917169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.219274694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.378836873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.078676733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.066118978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.380417346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.235240654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.160463061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013580445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.169328069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.015251572 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.229583626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.372450373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043559192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.281841238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.227194624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.004068822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.196375605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.020694894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.235575575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.15084728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.54797782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.021653078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.185197393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.573518267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.15349171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.438822656 seconds)
  done (took 172.922728972 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.995989557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996638611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996362408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.998119694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.620563272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.997604948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.996437352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.996443913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.489636553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.465342741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.997432236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.609235622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.997354079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.996833263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.998061199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.995970457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.628483504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.997502239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.998858291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.997158968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.997746988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.443881006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.999039585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.455463097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.627915984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000492996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.997294996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997358502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996816065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.996336603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.99904105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.998379141 seconds)
  done (took 214.204140538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.997393522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.999551266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.00106821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.999386761 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.005340996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.999194612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.000351668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.998963274 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.774281588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.762145871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.001836345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.008585836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.000507565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.998096217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.004260722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.998537192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.002126646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.003286609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006580606 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.010700219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00202096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.62437341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.000019495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.620302576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.000369902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.002178468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.998938563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.999255411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.002372121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.003126486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001608421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.998744173 seconds)
  done (took 224.74997748 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.244036165 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.999613433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.00099605 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.919519871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.001837359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.99996386 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.980215288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.246974657 seconds)
  done (took 20.321740248 seconds)
done (took 634.127167929 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.502668255 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.402898526 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.184372249 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.024838939 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.256472951 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.071410587 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.020885164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.085680932 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.856761115 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.09938455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.660528851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.049022968 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.757926169 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.051981921 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.146649461 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.076583119 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.587391243 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.674609566 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.167395563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.08326505 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.205205369 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.967501854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.101217857 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.894652873 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.671868384 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.007083764 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.093820603 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.582785859 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.03255525 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.181790061 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.768086012 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.347646595 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.039276825 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.022334299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.074094587 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.053763002 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281957041 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.036133243 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.149195414 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.766141623 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.081633727 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.767194516 seconds)
  done (took 108.81295421 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.01339103 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.006594415 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.007779657 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.00743692 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.018048166 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.007551222 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.006590263 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.009265545 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.007064963 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.006883591 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.008215384 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.017506563 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.007783694 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.017206816 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.007987527 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.007456034 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.008420487 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.017917963 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.008439564 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.009113079 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.007956506 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.00897325 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.004462423 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.009224022 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.007859975 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.008778427 seconds)
  done (took 54.191351196 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.005014163 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.175204221 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.256451842 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024574148 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.004414174 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.007047777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.023532824 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.009409389 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.007031586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.006158361 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.09714228 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.011550435 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024796944 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.256610638 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.023384508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.005706789 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.005865504 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.006861909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.184851429 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.022572125 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.025832699 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.010175984 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.025513627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.019106881 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.008358707 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.00606757 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.010666342 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.482511575 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.015845381 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.099598601 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.066968072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.032987912 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.451780113 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.265524812 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.062279343 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.016470854 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.006669424 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.102760297 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.012621147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.006564048 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.023687204 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.012906606 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.256908937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.547695535 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.020941799 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.007518776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.489909861 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.112632904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.048501963 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.016956329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.262744062 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.02431416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.007796229 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.008031347 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.044168024 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.016263819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.007693904 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.37408892 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.021881008 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.025500901 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.012687452 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.00912704 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.192692289 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.017857005 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.17968338 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.018688103 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.01484968 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.009977857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.259435684 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025558748 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.564030142 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.023533757 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.008910315 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.100202186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.186309917 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.517408934 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.022310071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.193089534 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.46901424 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.032802734 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.01731228 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.471347205 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.036754954 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.016453187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.010886108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.010292097 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.008263991 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.052988148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.02464633 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.465948164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.555470248 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.392873988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.037152702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.026655748 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.011077392 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.375863551 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.017965418 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.009440982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249290946 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.568981743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.025122004 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.016905108 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.542979937 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.027095459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.029267942 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.018711753 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269841434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.027537555 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.053896491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.010535538 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.017140767 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.013454238 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.028589369 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.019595294 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.010369389 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.530352558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.121342059 seconds)
  done (took 249.130120045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.012273009 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.011043837 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.011211473 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.011593653 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.00793686 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.01066829 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.008806472 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.010074462 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.012597349 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.008527718 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.008296844 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.011959162 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.012303136 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.010956614 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.015899163 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.012406136 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.614152426 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.0117175 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.009945531 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.009952932 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649913857 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.015403196 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.009435378 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.011337802 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.011386581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.012090018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.017807123 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.014670177 seconds)
  done (took 171.503141091 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.012816075 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.124368082 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.033457142 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.040942499 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.020246612 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.012928335 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.110420647 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.032667481 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.018669173 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.013321156 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.012946293 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.073566813 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.02535663 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.111581942 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.047442248 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.12045265 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.119261744 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.022578922 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.012802058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.013538442 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.041716092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.021857084 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.073188484 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.139320926 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.034948078 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.124764549 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.032818173 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.014099106 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.014143867 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.125633074 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.033167781 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.075597351 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.044558305 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.032263774 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130517464 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.130993007 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.119481541 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.119982308 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.020826314 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.014570759 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.014887845 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.015833979 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126921189 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.034023235 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.016146231 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.128451955 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.035172144 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.015600153 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.014444805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.014292498 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.027699802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.033135621 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.078544353 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.148292619 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.052172218 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.038875291 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.112828901 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.146339843 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.017399261 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.113160598 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.023252232 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.129359513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.037413549 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.01752763 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.018032199 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.019998443 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.045718843 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.121759867 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.121597833 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.023254529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.113879564 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.053352534 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.023546524 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.017979684 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.016900365 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.12949619 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.135562711 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.053085041 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.052347613 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.046018192 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.02518877 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.015292045 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.018686804 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.03249977 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.020978029 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.130894721 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.133935283 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.02595328 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.016772127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.017721383 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.017619564 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.042263505 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.137224595 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.053864204 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.122217969 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.084861909 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.093188646 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.033270031 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.030709009 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.023395307 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.079777105 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.035343734 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.031105616 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.331386714 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.078079215 seconds)
  done (took 218.283186065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.394601486 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.065733806 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.073003047 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.331269791 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382981012 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.213857876 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.065660515 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.068945047 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.084343346 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.251760233 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.142400336 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.081931594 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.0532682 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.038904919 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.06424438 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.085334347 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.074362947 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.398972899 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.276521892 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.269640396 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.055986037 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.369448913 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.413067542 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.643982327 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.116296684 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.459384348 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.673966402 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.199858396 seconds)
  done (took 66.300421518 seconds)
done (took 870.146498875 seconds)
SAVING RESULT...
DONE!
