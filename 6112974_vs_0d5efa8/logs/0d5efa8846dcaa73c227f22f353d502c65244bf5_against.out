cset: moving following pidspec: 13379
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.629538798 seconds)
loading group "shootout"... done (took 1.244780271 seconds)
loading group "string"... done (took 0.420450086 seconds)
loading group "linalg"... done (took 8.002439778 seconds)
loading group "parallel"... done (took 0.150561018 seconds)
loading group "find"... done (took 1.475613241 seconds)
loading group "tuple"... done (took 1.965931829 seconds)
loading group "union"... done (took 12.858834862 seconds)
loading group "dates"... done (took 1.33910804 seconds)
loading group "micro"... done (took 0.203581223 seconds)
loading group "simd"... done (took 4.316198363 seconds)
loading group "io"... done (took 0.96595972 seconds)
loading group "random"... done (took 8.438337458 seconds)
loading group "problem"... done (took 1.632324385 seconds)
loading group "array"... done (took 19.324930294 seconds)
loading group "misc"... done (took 1.494936624 seconds)
loading group "scalar"... done (took 39.542753187 seconds)
loading group "sort"... done (took 3.07019419 seconds)
loading group "sparse"... done (took 11.705639977 seconds)
loading group "collection"... done (took 17.052525716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550579827 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13048469 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139982838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12274437 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154002179 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119534987 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127030813 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086403542 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915978027 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155111538 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114520456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486619016 seconds)
done (took 5.614787503 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175506588 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092166029 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07935578 seconds)
  done (took 1.350472639 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064312817 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12830399 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065643627 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066715952 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065587398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065490442 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065601128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065136072 seconds)
  done (took 1.701332247 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071944394 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067710693 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067379692 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067141072 seconds)
  done (took 1.452756072 seconds)
done (took 5.93825128 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.254938821 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.113607608 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.313003512 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.408990049 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.495238046 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09129177 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072846345 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069591207 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126081277 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314663258 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119848524 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.200754396 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099653791 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.180677759 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.01228313 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133396181 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084103771 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125328596 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091419002 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130504459 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.42816271 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076309113 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07486232 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070541204 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067439684 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.64118044 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665599605 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145970236 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082544523 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.103503274 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115188994 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646926428 seconds)
  done (took 10.776069951 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103014341 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100858453 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068242988 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125512245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099857292 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06880801 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074247222 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066610904 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09019172 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130329209 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090888944 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110650737 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064712807 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068780424 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084735127 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.1985846 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07990785 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081034226 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067744731 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079134371 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107959116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078102418 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080368386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079852494 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128701287 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167961072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095421517 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097657176 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065794627 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08187816 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11502548 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126865671 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065259707 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065076479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130108014 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093648177 seconds)
  done (took 4.660823828 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.200896346 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091977303 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.108301486 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.661804669 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065698209 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.16396751 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249058325 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072917065 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.48395885 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.165282285 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.15271032 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.15018867 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123956792 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069988339 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.367530674 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.128193371 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.615939236 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068783297 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067715404 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064918569 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077191894 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068987884 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063909364 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064415487 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078217677 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09235636 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.090628581 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.212364663 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.009059785 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.306849981 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068598803 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160507685 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085814665 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365551162 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068682673 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090415351 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.400115754 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124666381 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063746778 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170408595 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.12794138 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062298347 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120984743 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078549992 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06904243 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070283844 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067118735 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078187375 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078464251 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100357564 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066130789 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063422036 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167207796 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06270376 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065366241 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062301458 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065818349 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14701646 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06251705 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.154265216 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062841117 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067196342 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093608204 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068662542 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.092138988 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113795256 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338776775 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.05767798 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066200783 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.194126098 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075594699 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064356349 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.082134355 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064933235 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066822351 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06586071 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074829335 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067964961 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066076801 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108589443 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064576334 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068834809 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063891137 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070087741 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097721357 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063274568 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463810256 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097690606 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064484987 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076244046 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104163578 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064974772 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071550261 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065690765 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.069713492 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063994939 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066954196 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069229263 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.089680624 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.2065745 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068637617 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110913432 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.029506043 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062711763 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068953475 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065235212 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070882547 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069147101 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067991275 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064661352 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068857672 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067164746 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062869041 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.116141427 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063602105 seconds)
  done (took 22.639366339 seconds)
done (took 40.456572583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25612677 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083829221 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084019585 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083787165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083762103 seconds)
  done (took 1.889504671 seconds)
done (took 3.176553686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107785373 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062139092 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101230567 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.101428249 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062186765 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061890242 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097485351 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062142029 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097341123 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100764648 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.10342413 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.102417668 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061948291 seconds)
  done (took 2.420400678 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070293777 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079802039 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081702152 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06109843 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070178994 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080314955 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061161208 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078738214 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086672328 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079609053 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07984266 seconds)
  done (took 2.106332285 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067780453 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079799554 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082529715 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060713239 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072012826 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079722494 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060553127 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079629144 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08388586 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079823733 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08029362 seconds)
  done (took 2.094672424 seconds)
done (took 7.89372179 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074636743 seconds)
  done (took 1.327389993 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.56170835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.84674119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076608432 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097317847 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195884651 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108992545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.248502065 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082084195 seconds)
  done (took 8.663194023 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095335728 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080223874 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069031573 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067562632 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068211465 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066285934 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067568833 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068470672 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06729446 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067066959 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067640242 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066635103 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067386197 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067331921 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068323162 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06814257 seconds)
  done (took 2.468920294 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097044445 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095480691 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072442245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074220324 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071150318 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070307466 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073564348 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072192771 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069440446 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071199444 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074264807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072947469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0721186 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062759172 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072408511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074909363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069259361 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072215947 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072713175 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073427181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073472094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06254145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071886739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072982475 seconds)
  done (took 3.156094467 seconds)
done (took 16.884677457 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116107418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077338505 seconds)
  done (took 1.455484687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078336572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079528701 seconds)
  done (took 1.432609471 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080119352 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060312888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.0892858 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074601389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061494239 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060998174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086003231 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061173939 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061129735 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061463816 seconds)
  done (took 1.972362331 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064005305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074453095 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070252885 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079244391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069534238 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062897894 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067398621 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063173717 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073752638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062025988 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067998239 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082928887 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067056807 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084354935 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067612437 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068246143 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070318471 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067064462 seconds)
  done (took 2.542551545 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061180567 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062897973 seconds)
  done (took 1.405978557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066193027 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063033196 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06684023 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066660986 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063548824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062756855 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063715597 seconds)
  done (took 1.730076009 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378099733 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122686287 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327398526 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068772518 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078533653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256860098 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06238276 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067989733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068083366 seconds)
  done (took 2.757250265 seconds)
done (took 14.584327577 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079086739 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08553693 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097938069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464573103 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090327701 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065373113 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112361864 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180284304 seconds)
done (took 2.470097153 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21223889 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.52472003 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.816765949 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064451508 seconds)
  done (took 3.691626779 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339652304 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086828779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076202112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064797605 seconds)
  done (took 1.862058734 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065316801 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067661975 seconds)
  done (took 1.422654889 seconds)
done (took 8.486230598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063194935 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088984675 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062630004 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063209554 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062436408 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06220635 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062073819 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.062288749 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062694474 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062461701 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062229992 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.062137125 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062492926 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062244453 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062481167 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062150878 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062431036 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062765128 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0621307 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062631665 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062560374 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062230304 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062452399 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062120687 seconds)
  done (took 2.84661795 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080624227 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065424415 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067000099 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065994575 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067974954 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066463875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066363788 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06418295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066152235 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064223328 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066196967 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066232333 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063875824 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066887758 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064577094 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06652441 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066376287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064535594 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06423713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066700746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066096755 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06421859 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066583077 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06626881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066746336 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066740495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064259924 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064849003 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06645257 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066909708 seconds)
  done (took 3.291600178 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062973256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059133043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060646392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067966036 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059647767 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060727348 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060677273 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059202577 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059611581 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061171542 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060238135 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059271124 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060685081 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059343981 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059333505 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059911078 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062955742 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077313813 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059478265 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059148563 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062859432 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059227598 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059299356 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058861434 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060155622 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058926698 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061656684 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059531648 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05869264 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059958846 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058998336 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062583292 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063272489 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059224556 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068095979 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062702709 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.05910054 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062562814 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060871713 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059254373 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059440421 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059043274 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059104853 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059481788 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067513178 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05976419 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060999597 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059867218 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059410058 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059112014 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059470469 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061811322 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064229516 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.06129233 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058870724 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06086681 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05925471 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060274979 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058927544 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059004956 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059526374 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061941725 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062755795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059892801 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076270649 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061075601 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067652356 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059124462 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060450494 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062344415 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059938751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074246431 seconds)
  done (took 5.718941333 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089130774 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087933175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064253488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06440836 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059712839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060104545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068095497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06018335 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063836022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079323126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059890759 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063691642 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063950292 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064340579 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060287691 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064550085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068768248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060264115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060171482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064037225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060139545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067894754 seconds)
  done (took 2.772209815 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149755399 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06617507 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104705068 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082309076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068824328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078040297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065958677 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065960605 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06625679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066843251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066465691 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06625204 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068958278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065960866 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066518327 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066307364 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066237556 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066560115 seconds)
  done (took 2.656916282 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077235574 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065422838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086101744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065243123 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065611088 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065335303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06986985 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071186475 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065338703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065438528 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070760458 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065603445 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065831946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065476681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065397702 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065483328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065139923 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064992052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071277722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069827474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07041371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071155983 seconds)
  done (took 2.816354736 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07683272 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064397145 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079797968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066224755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061069207 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061018221 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065901168 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064035254 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065595851 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063998076 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064149596 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060440463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06622662 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064367938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066341391 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06425165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064224965 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064502588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064050994 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0601696 seconds)
  done (took 2.618810185 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093731281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063494118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063362111 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081617553 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063065039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063416737 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0815987 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063119003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063062593 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084872267 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063171758 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063687297 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081800806 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081342298 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063533125 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081841539 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081299771 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084400137 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063223433 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063526805 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084876428 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063549967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081629033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063249222 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06314894 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063138013 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063150116 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081122168 seconds)
  done (took 3.324568513 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071862941 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06216506 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062750172 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062505914 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062858572 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06242302 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062548138 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062422095 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06304989 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062679849 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062835692 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062242815 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062469941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062498056 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061882957 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062217801 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061949576 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06275635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062495155 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062316367 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062839276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062516328 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062521432 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062390635 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062101589 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062285919 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062646318 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062286162 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06212938 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06222468 seconds)
  done (took 3.199365214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074310947 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071600306 seconds)
  done (took 1.46263075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062249366 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078629882 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059354183 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071126971 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069072193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063605353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070036827 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069169653 seconds)
  done (took 1.856744636 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.076012765 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.099235283 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.063590187 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063905913 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074387256 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122488462 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083139527 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071117636 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07382353 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062358426 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062480983 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08231825 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061547154 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072592318 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06463694 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069248448 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068889526 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073133212 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072342149 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060200784 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07547032 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065731069 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060257587 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064023287 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061574015 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066956985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076198828 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072085246 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068824542 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058836929 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082522617 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060155871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06173049 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068887865 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073096231 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.06055146 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09724663 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061252828 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.068052321 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059512937 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07198942 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082570307 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073239812 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.0785143 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062677531 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063619197 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059500089 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062908719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062879495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068928015 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059904151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066669081 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059813568 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063311456 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070041686 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061338145 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068410099 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068773077 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075263936 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070375681 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068322915 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074999791 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068390466 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.072216941 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062058896 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079542086 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.06297105 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071181196 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073717445 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062647074 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075261623 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060055629 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058819058 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060154381 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094030394 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062533872 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062439563 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061112334 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060636531 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062604928 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069553281 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068694691 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066278017 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065444066 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076928347 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070494796 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060671183 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070909614 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078274312 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062416932 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060748125 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075906744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062363641 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060233574 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080998867 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068504775 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063120838 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063399436 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063479299 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074285043 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063015525 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058896747 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06718231 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062683661 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071168051 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06662844 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066628337 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.061651276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069904351 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067382774 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062563487 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059143099 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063687009 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061784542 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058943414 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068525304 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060736995 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075011278 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065284831 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.07326086 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074881252 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069205627 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077066986 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060893643 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058336851 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.079603027 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068267885 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062254833 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079036608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059572531 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069396334 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.189943806 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065066632 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069479078 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059956454 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063590169 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061505311 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.069023767 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063790328 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063433439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064096508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068574252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072796644 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06316239 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068208175 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061655729 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075374827 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069544075 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064513202 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0668055 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062168192 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071899957 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066214709 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071221534 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059920152 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062585802 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061292545 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071067511 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070147691 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063897094 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073181835 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064111838 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062852967 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06120299 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062604251 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062835589 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065651808 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061888035 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068416915 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069800252 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075004011 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072233581 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06906824 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060686935 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06071794 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06345022 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060352915 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06517699 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069793382 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074754825 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07239949 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079911194 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061064485 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069489393 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063125165 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077022735 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07216114 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.06161672 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067157904 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059251697 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063205826 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069496547 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071723277 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074591707 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074108476 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06459859 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063641507 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060266284 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074141899 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061352062 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067710359 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070727154 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067705193 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060977093 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063552644 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069334909 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06411582 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060795902 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076437819 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070413396 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060425147 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072892897 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061175329 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070755926 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060125797 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062799884 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06462294 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063797974 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06918961 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078088609 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05886047 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061864922 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079221553 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063968354 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063143621 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067310677 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074987096 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064540747 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067185607 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069644875 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068007123 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064007085 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068554473 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061817097 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070689784 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06616169 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071796575 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060520625 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077447719 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058806956 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.076215579 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06112124 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070292371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061834274 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068858371 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061993167 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076731868 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062842831 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061986842 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072966273 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059083686 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070157903 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059783618 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064070567 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064999646 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.071714158 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062958748 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068796757 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062795692 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067533785 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063396985 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067567998 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069862773 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063220097 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060116052 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069094496 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071021878 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067656623 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.196472344 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064050735 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063010684 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071854262 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064253857 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063000368 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070064373 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065306285 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065533935 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063852756 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064370939 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.0635945 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071066427 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070080423 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078023606 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068486243 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067447464 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070946249 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061101859 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079604726 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060426551 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067359848 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06027385 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070945865 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07084978 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061592864 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079558343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063996138 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06753972 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074789157 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069422809 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063585863 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079461589 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066254906 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069628374 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067347367 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064652483 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066675556 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064110056 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068779892 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072023607 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071966395 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062873851 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067253214 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069241166 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063214226 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.07368177 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063329647 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068601543 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063750766 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059565542 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06526098 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071518616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065001594 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064652335 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061321218 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059120334 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060997399 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071252846 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064698504 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068284334 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074503766 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059344649 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062345852 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060129269 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062661827 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077519565 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069422971 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067538185 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064964604 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059677089 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06276696 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063503527 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060787788 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065820485 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059751678 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060408803 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0706833 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063131361 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0635759 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061281603 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062727236 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068948092 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067483067 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061099896 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066274428 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061078591 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06406467 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059452296 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062878821 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064265338 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05981023 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063047869 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06958231 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075896895 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065892616 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068089639 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063483609 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06745541 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075861102 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071735676 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063168448 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06881027 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0596675 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.08071834 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068519798 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0673429 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069307604 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06292066 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076660791 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063208497 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069374781 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07798412 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061943405 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.070892673 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060273627 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078566108 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066222195 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060667688 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067299195 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066881202 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065056634 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073484067 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062318654 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068129444 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068382592 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063203449 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063045882 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063659292 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067703916 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076045106 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061631863 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067390321 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067870121 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068032388 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065631202 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071928161 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.205727496 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063624009 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064356542 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063439384 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062593072 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07296232 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06173106 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065635033 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06465119 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061134973 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066549718 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074928617 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070984328 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069732092 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060281169 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061404591 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.08036738 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063437889 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.066124217 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068585051 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069873192 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072864371 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071063914 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077446649 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062187228 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066217203 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071585783 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062751422 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061742908 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063392141 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063381307 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069884648 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070401284 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067787706 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066061669 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066765482 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07339464 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.063096041 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064697765 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.069410605 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062763634 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07018038 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068267343 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067806652 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063273219 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060573041 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063252336 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070368993 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06731634 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070448598 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062278508 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.071793841 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075027247 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067594963 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066411831 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060195101 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06601037 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068923091 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067241213 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060387038 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064325325 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062772073 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070973804 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069866678 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063857534 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060389709 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07714666 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067735418 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069170794 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063512237 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063222537 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061541476 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060005378 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071500488 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060280658 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062965365 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064115348 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063280848 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077802632 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067878047 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078935557 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062316873 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06441108 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060909834 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06926237 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064293771 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061256336 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069857356 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060106376 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078233056 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072746634 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069717099 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060379368 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064176861 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067858708 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075670813 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069541392 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070433612 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065606816 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069361726 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062853452 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070571713 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060619232 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059246778 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069799752 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068102077 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071869778 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060200954 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070260777 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063343034 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06705527 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068187868 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063053822 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063034058 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06316017 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069476538 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064640629 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069485098 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064523482 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078227793 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061950185 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07065289 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068884784 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070772222 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073698927 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074259548 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070973268 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06219479 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067240078 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068436933 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062023088 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063825935 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065444929 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.085257122 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062765846 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06329271 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075110068 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.210238683 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06394895 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072815802 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064842892 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07124991 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064463558 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070234528 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.068168525 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062727295 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064549217 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065095779 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060253905 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060838334 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061386741 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070240139 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064828223 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061912064 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07945276 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063334489 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068604994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071804455 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.0657978 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063313385 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05983446 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063814895 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072679479 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075342285 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064149907 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06866928 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064248992 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070598267 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060232663 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069078103 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068263828 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068757607 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061379561 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061391555 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074808126 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075330284 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064915642 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069648263 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069014933 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06395291 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085148998 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068927168 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063098869 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071715767 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064394691 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060532182 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059862143 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064306999 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071187289 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060260948 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063881685 seconds)
  done (took 41.90974688 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101217628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062047684 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061078671 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060774514 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074158898 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061675284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060349922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061587769 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061488654 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06414584 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060657239 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060284242 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073185621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077426457 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072390629 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065979265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060683909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06203636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060201773 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06221728 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071947363 seconds)
  done (took 2.801155744 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069856161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077041417 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073864908 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079080154 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068916935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066623642 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0733442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066407906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075192426 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071372963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074864476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066328235 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070874948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071215967 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071232253 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06646088 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074942304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069992157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066503685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073409657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066607291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073356634 seconds)
  done (took 2.957276067 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062754422 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061898131 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068209043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060525441 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05994036 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065415023 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060158752 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063093879 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063308158 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062828672 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067599202 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061453685 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059846914 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064157752 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05928245 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061246352 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107672004 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061548354 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061665573 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059659228 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064203613 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071491033 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059926899 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060264432 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063269741 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064456992 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060616566 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063858892 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060755052 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063366617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061581691 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059625218 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067887661 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069383937 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063748435 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063157424 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06225471 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063965293 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059790224 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060027987 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068470432 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06196762 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060688136 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062800193 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069548565 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060531361 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059668341 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068054214 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059816771 seconds)
  done (took 4.522027718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077805044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112677587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066042081 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091630123 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076366742 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069601075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065769883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09314189 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062608194 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062791955 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077617834 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077681194 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06495009 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067381547 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067639961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064928406 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065715162 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06392267 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06863361 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064779964 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068509636 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067771398 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076329552 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076644482 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066263909 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063687108 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064340834 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066896951 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076416443 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069583392 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066960014 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067799518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076623614 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067940568 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064140751 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064326929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077818909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065415354 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064640991 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062374569 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064556487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066627572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067491536 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077883626 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064900456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068550877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064777383 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061809603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076733393 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064414686 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070742811 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078018692 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066045421 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065843057 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066911428 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077034967 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064972878 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063053694 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065352816 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076649324 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062139902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066242626 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07730106 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063831031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069655288 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077603316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067939781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066123151 seconds)
  done (took 6.304476532 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071322932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093674373 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073963522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073999642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072965073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072767401 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072368063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072122566 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072592757 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07330833 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072298265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122805406 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067177156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079495872 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072367715 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072233541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072741087 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07256005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072381577 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072246513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073298428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072259879 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072895147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076731264 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06713468 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072344185 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07264857 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073095776 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073088062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07711941 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072357357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072436432 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072927511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07664383 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072217025 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061163201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072205915 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072667464 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072470888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067185164 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073062795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072056781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066692181 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072202049 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072329963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073114742 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076515161 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083476712 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073321881 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072715486 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073779817 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072458881 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072582641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072778517 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083141845 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073250998 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072968822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072533085 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073520587 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073134943 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082313114 seconds)
  done (took 6.027487552 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079916875 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069992987 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082722316 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063068394 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060688896 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070959019 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060116928 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060730176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069681531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069706408 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071984315 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071020326 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074181221 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072281023 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070844305 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074422869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071347418 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070711093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069665894 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070768242 seconds)
  done (took 2.829840996 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074496256 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081004913 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066139707 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070918332 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066727459 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070754496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064903794 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066735684 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066329794 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066960939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07333931 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072915723 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066370519 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070515988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072931626 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070541915 seconds)
  done (took 2.531127738 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067480282 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071221317 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077719862 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062381618 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065908815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061270161 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062061536 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060184887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061230182 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075457491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06201264 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073120132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062013095 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060306271 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06115707 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067800006 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060817085 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061902888 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061989982 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075551495 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068370044 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063565205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065456397 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061593477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067256601 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06902021 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06444525 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065049987 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061874914 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062860076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067116506 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068825678 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061356839 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06234373 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060900576 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062052566 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062115024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062447731 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067133453 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061558302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059855592 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066398736 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061803467 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063080582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060781922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062102143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060554588 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067406235 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062183744 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066514254 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061714563 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063902959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061925753 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069679185 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064938837 seconds)
  done (took 4.959781685 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078141862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066450175 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060655625 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059949469 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066149738 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065921347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066184089 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0650813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065719206 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060024715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066207774 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06528816 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066451601 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066289523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066159251 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065701054 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059840559 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065244457 seconds)
  done (took 2.599192246 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071174744 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065790801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070069516 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065120621 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064897085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064713246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060900449 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060564448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060989188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064940234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064726175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065198807 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060514385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064771671 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065086927 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065264156 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064914632 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061225729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06486582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060799157 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065366649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060687646 seconds)
  done (took 2.829885355 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094542589 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082645088 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143320655 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078182131 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086124366 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070066774 seconds)
  done (took 1.972730841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090798597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107501205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065210358 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066474279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078178644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069477743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069598222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069880347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0781267 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076029636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069756852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080326738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078070201 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071856997 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078052995 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081495037 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070074859 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069642884 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065279593 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081597326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070396286 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07851885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069865637 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088058065 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069497464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071704036 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081809547 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075906898 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069260746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07789691 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081475172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069535361 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078286036 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075629827 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065741263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078438104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069995483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081601965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078629836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072110803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065393285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07799584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078321403 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071972033 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081334807 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069905034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072097824 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069724737 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070170767 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085422518 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078804289 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07200084 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078327036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081672667 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081356762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085094628 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075708673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071649905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078295523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075569387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071618047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077665418 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072216216 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075663357 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081527035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072045194 seconds)
  done (took 6.417835108 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099683875 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066708697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070492665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076080018 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072742872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069916054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069831323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069950799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069744826 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065510673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107555314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070092981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072148675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071939067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070393522 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070128584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06980023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072089765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065840679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085835399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07016198 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072937118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072360166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072547186 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076435266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082084009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070013542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069681845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069624158 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070577804 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072173469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070028192 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072507941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065694301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072056842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069581412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069757241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072394841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069831363 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078496203 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071884714 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081557463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069471904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069517039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075976465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070035469 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069855946 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065683514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069623365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065698928 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076235302 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075950826 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07616464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071832117 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069991735 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070439769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070079453 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069893519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070032985 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081555117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071869296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069614707 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084769952 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069618337 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069867814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071834068 seconds)
  done (took 6.24945287 seconds)
done (took 128.769025248 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208673669 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183723439 seconds)
  done (took 1.802716739 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073239819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104788538 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081298901 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131916136 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069548995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104314879 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103045834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081819487 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0689435 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069238374 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069204034 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072650508 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135148844 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069146381 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069572409 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072934405 seconds)
  done (took 2.810568802 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10465741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190111488 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10767713 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067247904 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103624009 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075518343 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066639882 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081713084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072062788 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068648993 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075859102 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074034266 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068692544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073786737 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071414565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075722949 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068735998 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07538533 seconds)
  done (took 2.955882391 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092722685 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08512872 seconds)
  done (took 1.615194923 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163173518 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132424094 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206262829 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342285785 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.146033187 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278372184 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132054274 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130846933 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112480573 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.127819425 seconds)
  done (took 3.203244428 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103815412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172656128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30039081 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121944984 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073757823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.086964697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123019494 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079767332 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079785243 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079493826 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079632161 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076381312 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10112668 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075618061 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073751013 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076087871 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102868243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072890217 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073913575 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075048555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101913518 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068103767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075740788 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073000834 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077178197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077429676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068792536 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067590973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075360869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073847011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078262276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.083729455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077195245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104630529 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071263668 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105492736 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075974817 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071830522 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073552281 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07194179 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076327232 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076367458 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076035705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075670453 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068342957 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07615093 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068556029 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067422458 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078957765 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068834738 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07886115 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077517093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104671892 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068970798 seconds)
  done (took 6.130579373 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111989531 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110079013 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072246254 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118664203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109228101 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072770953 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109287987 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100827501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109964647 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07206512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069713353 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071751008 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082229562 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081982921 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121013101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112242166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07422843 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071990797 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110778048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110117447 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070118656 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10518535 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099391587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109059199 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067707658 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072689866 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068867358 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070936518 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075523877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078037236 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069960422 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081217961 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084465736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077665828 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067560929 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06881843 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069263582 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079495808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078941657 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078067433 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076900591 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068131175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068963567 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070038811 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071112801 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067572659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07784762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079931566 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078161975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069445705 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070834178 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068857605 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070341521 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079905775 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077279376 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080567763 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078970595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068904475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068670763 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073919926 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079396518 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0790787 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079730161 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071225101 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078579735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068865683 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082336985 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084072585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068719324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070843112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068638904 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069316994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069744917 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076592107 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076426986 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07044607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069232028 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069020119 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078778592 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077514954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069057009 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075988653 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067436397 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069381891 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070640341 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07100646 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076013709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079707689 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070977161 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068763323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069673872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068685235 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06757753 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075661153 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079838596 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0794967 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078303625 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069936553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078186337 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07760583 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071077947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078927799 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068478887 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071311639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070395361 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079273639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076952027 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079172094 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069734401 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069252737 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077208672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079429226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068867583 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078054666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078556027 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.212611875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069070062 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080635888 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069924006 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07876896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070573602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079264374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069798687 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079262393 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070067051 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068945469 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069238171 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079033591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071521567 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069739935 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070652078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070206678 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079360236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081621622 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07217761 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077745052 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078489222 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071562959 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078366674 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069564084 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078459825 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070445902 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070573419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068006374 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080515792 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069344491 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069852549 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069834802 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078993973 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069590813 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079180059 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077084596 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0690192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080542188 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0798589 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077099723 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080104409 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071621526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07000213 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070124875 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070338199 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077223348 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079937092 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071502217 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069356621 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077305569 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078405985 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067888101 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077825347 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077522535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078083797 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069436223 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069654424 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080407689 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079329828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078367571 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076975721 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078149263 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069490554 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077689755 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077195409 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069310855 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084276129 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068967259 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082819255 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077921451 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076485587 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077842884 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079606152 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079163061 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080082011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083256549 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068352931 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06859908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079475618 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069557556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070461658 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078395068 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071496675 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070922711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082973471 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069664305 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078685823 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068199199 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079965092 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067907699 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07092049 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083890757 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069153286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070809389 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079395761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071985963 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077362441 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078877659 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077559019 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068662853 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070645508 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078974403 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07783495 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06875247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068826422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071615795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07702264 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076569918 seconds)
  done (took 18.740829314 seconds)
done (took 38.707280125 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.232449089 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170039923 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203949102 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12641802 seconds)
  done (took 2.279498849 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113196175 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104631119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090053223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063246776 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096629227 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063229135 seconds)
  done (took 2.010610381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329099554 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222254891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195806978 seconds)
  done (took 2.222612651 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.228510445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.43233033 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473546744 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291193366 seconds)
  done (took 3.00926652 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148422333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085887132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063576587 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081828501 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132023328 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156184405 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097516165 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122727538 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074434749 seconds)
  done (took 2.500188333 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147053405 seconds)
done (took 13.666723457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.19318309 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11747643 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098235137 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.219346771 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06692738 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07415384 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075424364 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080966174 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120673051 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084318346 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134547218 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.166853094 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090982478 seconds)
    (14/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.163088802 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122943796 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.136252182 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073761712 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208753706 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072969897 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141315947 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090250587 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072884416 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106594877 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071763401 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063775323 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072980364 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078546122 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114949262 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179924227 seconds)
    (30/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065181216 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064341875 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256903503 seconds)
    (33/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.093624329 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075502818 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171383102 seconds)
    (36/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.191595006 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072958167 seconds)
    (38/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138682256 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115303727 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06392979 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063148846 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 0.131397495 seconds)
    (43/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065440117 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.209275491 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103878963 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075449114 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.087197935 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.149886845 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0736148 seconds)
    (50/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199224063 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064071311 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06428143 seconds)
    (53/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076637416 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073969678 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.065356817 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092976818 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086148894 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172466419 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.2432755 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063855794 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07352322 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133174798 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075007439 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179353311 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119504583 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063158757 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178186198 seconds)
    (68/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.092883669 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063768157 seconds)
    (70/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.184905176 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200776734 seconds)
    (72/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13859851 seconds)
    (73/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077102626 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.180976036 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.237376734 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07134308 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089415534 seconds)
    (78/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.181267125 seconds)
    (79/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063253378 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07516752 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233200588 seconds)
    (82/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063403416 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 0.131074305 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071580158 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070932621 seconds)
    (86/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064458694 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182994987 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123106884 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163796892 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064085531 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214424896 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126332334 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072052541 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135732745 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.145340656 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065629259 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105037631 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206272916 seconds)
    (99/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066154129 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.153328738 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216300599 seconds)
    (102/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140064481 seconds)
    (103/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073575975 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071933683 seconds)
    (105/309) benchmarking ("sort", Int8, false)...
    done (took 0.172100979 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19439035 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186472773 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128587838 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084530694 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.213898056 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170932394 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165663607 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18695344 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073979509 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064090102 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.203609968 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073756603 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074366825 seconds)
    (119/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066473594 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11399882 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094798018 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212706191 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175664648 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065281969 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088173818 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104243896 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07699834 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074544221 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140995564 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203832217 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074860163 seconds)
    (132/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141894154 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210420743 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196489325 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072786152 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091272595 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077551768 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072205895 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089594787 seconds)
    (140/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071439122 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071886982 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073094375 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065198733 seconds)
    (144/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.195108694 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072624528 seconds)
    (146/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073416382 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114126104 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141825239 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063549129 seconds)
    (150/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064900138 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072670334 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063206275 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089735084 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075017434 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088726299 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169300903 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072952805 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063671218 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064916455 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06451916 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079248165 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092445018 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087644593 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095793571 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079734815 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142337215 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071933165 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088368825 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070957442 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072077307 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063450508 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06338763 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066298311 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165429463 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140132969 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06347833 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063346439 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127631172 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064767351 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064845598 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064533235 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063843081 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067995427 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138015541 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066506679 seconds)
    (186/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068385732 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174236826 seconds)
    (188/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169358848 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.172749942 seconds)
    (190/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072714433 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090564383 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063364019 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06377699 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062760666 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062854266 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068911525 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086565345 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22663957 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131329681 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074546615 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.219377594 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077349924 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126918811 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064803333 seconds)
    (205/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06496362 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072634735 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065993949 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074407002 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06577853 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064497709 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145517887 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067383292 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075793573 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073962985 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06522323 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06786892 seconds)
    (217/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064370016 seconds)
    (218/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.170802595 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13826486 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06521064 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080985942 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072911436 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064723916 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21596824 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070982543 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065051253 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064114787 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065535477 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067294959 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065755259 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07156255 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091578267 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064549614 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135285993 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06664443 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082387681 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181055672 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067152082 seconds)
    (239/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066046986 seconds)
    (240/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064342524 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066216412 seconds)
    (242/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065199284 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06441387 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06417081 seconds)
    (245/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065554855 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063690564 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06407259 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063752613 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064981803 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063473569 seconds)
    (251/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072357664 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064351064 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068686154 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065002177 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065609264 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078454295 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065480974 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070165547 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068286175 seconds)
    (260/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063814201 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177755129 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090894702 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064305161 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182790467 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065595902 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065121983 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144109574 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064418144 seconds)
    (269/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.06409576 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073012722 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070906107 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06397209 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06364491 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064811659 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065323419 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063923875 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064967157 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063702338 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064992005 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089135023 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063659824 seconds)
    (282/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072222066 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06474848 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065461294 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063988186 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071144695 seconds)
    (287/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065390744 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06509907 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065092334 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070996842 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090501947 seconds)
    (292/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068498245 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073402696 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063899679 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063587183 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119847402 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063764131 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071059789 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066855776 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065137657 seconds)
    (301/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092844541 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066318165 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063671779 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092554745 seconds)
    (305/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064635531 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063715754 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065102272 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063933178 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067573408 seconds)
  done (took 32.993393532 seconds)
done (took 34.487952724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085251597 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098273977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072851762 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093792359 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081198621 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098558488 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073275044 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077886078 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080438811 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079538535 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079716334 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070881449 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074734069 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074653271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07247157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096995048 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078700762 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073124953 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073456673 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063987415 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073811574 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064403798 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064195956 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071090145 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07614242 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072163306 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074837403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07432283 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064659108 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064431868 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069295679 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072998152 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064378926 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077194266 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07369532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073634542 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074986849 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076971887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064150079 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064656014 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074455039 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064624933 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073095035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071349112 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069226315 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070968902 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073135164 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077678983 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096822705 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068520159 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074594804 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076531207 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077146034 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070044944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069467523 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073805689 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070613753 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096472066 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073300169 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068300199 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074564694 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07368683 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070833302 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073833009 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073208681 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075480419 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076912669 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07048359 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074891932 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071746224 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06401105 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074323764 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068892201 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066756212 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075337037 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076990101 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064078761 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068555012 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072819778 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073068068 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06407787 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068024215 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064002966 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069640596 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068014199 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070396203 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069743952 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07177134 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063970711 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0735725 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071929757 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072232387 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063814764 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077781566 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064436495 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070628993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064628738 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064253465 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064034022 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069745816 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064333878 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068598201 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072991471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063720201 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068963481 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078783215 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064209901 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072418054 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063973351 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063798055 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076918996 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075268441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064432715 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068220607 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063764293 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069657334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063918938 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064122922 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064155852 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064229539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068319211 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06446098 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068079078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06950931 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07675781 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063752562 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068505225 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067924629 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063897428 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070550565 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064423962 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063752487 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06345127 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078260775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067738331 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064296216 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069058874 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067637985 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072523258 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063482977 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073378918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069866607 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067854866 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070078724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063279791 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074796978 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067775846 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067837648 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063311004 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063798872 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06265436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.203608447 seconds)
done (took 12.583810823 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065440178 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114419469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.082301239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091501789 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080153482 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065321467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070672417 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.085260285 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066418593 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086614205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086448812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087497311 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.103816404 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064480114 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065473135 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067216026 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066727121 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070004723 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.088134129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087937409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095681003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064983876 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074464633 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080284713 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076907601 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087183003 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066252992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066254851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06826116 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083437264 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090842856 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067763323 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065942796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081201938 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081436284 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07627352 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065541677 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070862905 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065803899 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064999899 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066414521 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079623493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070451888 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072595817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066069301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072273425 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066117227 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.075568537 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077858898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07017076 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074750482 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.080429491 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068791228 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.075105715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063956402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.075866575 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067725155 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065272824 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065909205 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070134748 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065630097 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067590404 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.069239174 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06592597 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070006839 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.073922522 seconds)
  done (took 6.474258257 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087551802 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093758066 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082823111 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082548062 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064694853 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066309436 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06619489 seconds)
  done (took 2.134512898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065913183 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088005354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091188129 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091349523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08354314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091408558 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065592559 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099471379 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064368654 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08716892 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.124400332 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092417851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069775547 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07806773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065604198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.081969976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065052043 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074059927 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083109887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090986328 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070100683 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09250028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078387299 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065851303 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.100965473 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07967548 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064866118 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065765292 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066944968 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066582386 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066596999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109972572 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079067594 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080380574 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066569318 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065229932 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079720568 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068764193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077119837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075399362 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079329741 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066690724 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064392333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066732519 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068948693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077250055 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064288718 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066854923 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06675834 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086935451 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064187123 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078865922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069235195 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071253036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071286087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07086657 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073742952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067344469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086746086 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073437357 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066693865 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083474041 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08288946 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079509882 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083216691 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070548748 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078632409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07937142 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066857176 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067047166 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066766421 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082962469 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065776419 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067893216 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068947828 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067522337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077642563 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091239075 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090943619 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079814951 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06646632 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066752112 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077567404 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091332199 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071269001 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066513131 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068536198 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064325089 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069641568 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06720567 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07106584 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066736423 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073535379 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067772267 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068721834 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08305846 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064861851 seconds)
  done (took 8.907292377 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068305266 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067477132 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069940104 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067440408 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06728629 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067604993 seconds)
  done (took 2.028180028 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093406781 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067316472 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080895513 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068044771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106997032 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082951582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083186361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077710576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080157419 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079963567 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082761499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086284914 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0811238 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068955662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082675627 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068643325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083669038 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071655413 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079129046 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069802317 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081664296 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068807435 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069434759 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087472196 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070087453 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068712552 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076270806 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079701087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079158583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078409811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06838572 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07049052 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07511684 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077292103 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083277797 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077796539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067038377 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074111375 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069556373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070418989 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085654644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069575374 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069846199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073441371 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077820464 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075197966 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074457449 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076084616 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082491758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073341559 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073196673 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068500772 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069692093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073411533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07540024 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077560576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073668673 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082656623 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068769692 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074952014 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067137051 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070093546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077303121 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070203773 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075509928 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073305021 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075092089 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069018266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069389306 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067717463 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074237232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067159952 seconds)
  done (took 7.026095654 seconds)
done (took 28.137798937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.951093283 seconds)
  done (took 2.52141373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614530409 seconds)
  done (took 2.220906395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.542010305 seconds)
  done (took 8.146069949 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.367255857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.383020266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.797603226 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137352015 seconds)
  done (took 3.324427902 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711974028 seconds)
  done (took 2.325030464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251059311 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238373645 seconds)
  done (took 2.111668831 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.358418134 seconds)
  done (took 1.960596856 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105426384 seconds)
  done (took 2.710296333 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.273529869 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164894798 seconds)
  done (took 2.052459566 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460591754 seconds)
  done (took 2.069143145 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.344421465 seconds)
  done (took 5.958599802 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248501064 seconds)
  done (took 1.897235178 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238960309 seconds)
  done (took 1.852556627 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.771797161 seconds)
  done (took 3.385585449 seconds)
done (took 44.154762313 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083669103 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085238148 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085657534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081218006 seconds)
  done (took 1.928466071 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.073945049 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069840844 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074109983 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074518273 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071942631 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072935842 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073250566 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070271955 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071518861 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070367274 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068755384 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069688919 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072760374 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069743822 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073043872 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074191325 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070021586 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069456617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072976724 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070090651 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073028819 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070128832 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067543334 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068705428 seconds)
  done (took 3.328827456 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078670438 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073664879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076102423 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071741326 seconds)
  done (took 1.921211755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07655761 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.088688497 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.089646849 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.094978994 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076668542 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076379485 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085539326 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086564807 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065645972 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.090365022 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068584884 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066406974 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066305176 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087439173 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.085822347 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063694148 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064827723 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077042068 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076144631 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078798855 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068866953 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065288915 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076220332 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076093923 seconds)
  done (took 3.470159957 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081616359 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065489227 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081864098 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094705972 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095399778 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065813591 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084686988 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094405583 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140985544 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066166113 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072418673 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066048853 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106034991 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065794787 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083979958 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109727527 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112646718 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069096089 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099313878 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065718661 seconds)
  done (took 3.352577794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084215703 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06904089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070453118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065198172 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076965695 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072886559 seconds)
  done (took 2.072273725 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06775318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067462917 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067287404 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066869934 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072892585 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069880272 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066328826 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067712094 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068683272 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067755778 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066607887 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065360363 seconds)
  done (took 2.442866568 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16916904 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07116739 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072197959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065541228 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072380457 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066695309 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082651411 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06852034 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085675202 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066513836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065898716 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068508237 seconds)
  done (took 2.585061582 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12308642 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155550444 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105503711 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07395257 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198874752 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10867365 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092464934 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.136973276 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103565243 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070278445 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105473622 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146332538 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106130437 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.117351864 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086684971 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142786457 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118191793 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096308867 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130778039 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087452331 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071511897 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163560957 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071080002 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100103235 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121026411 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.10538743 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123302525 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146190228 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094682621 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.096271838 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089205339 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077253012 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11755252 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.086410427 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.108249075 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105661324 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108099162 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09300244 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087535934 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139083721 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181150097 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112254715 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113965732 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145221952 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080659524 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119831067 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087122837 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112605317 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124928342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104740214 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077603272 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098894204 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120083939 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115871843 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.086035329 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087101156 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13346028 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.114082052 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112279217 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083303774 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113567402 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.098981334 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115752163 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136316221 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155213402 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106570339 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298833451 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131835113 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112076095 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.099077077 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.103912325 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077484384 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128339379 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114391108 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154413237 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130822597 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112984644 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.099464966 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089984966 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118294369 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126723423 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106767508 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106255712 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166573107 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121944248 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101356739 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102132179 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.144911225 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073923107 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173745077 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097234708 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127733217 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112449465 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156806008 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102248651 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08956036 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113264757 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117498698 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101807287 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116902764 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093990724 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128928819 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100891327 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113365405 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0865236 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10129762 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092281708 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.105622276 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078994485 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117734405 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129534536 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127829856 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077277697 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118537709 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09754252 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078649161 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105655706 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157500638 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086864314 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079073142 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164951367 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.100370069 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.12528858 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120760763 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.087657265 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133004533 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159530613 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097793504 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098844122 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077921986 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174433641 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07729712 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128076975 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086212409 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107297312 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110179019 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150660696 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149573981 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102423412 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08006263 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096570028 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.118946907 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092687681 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09039172 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077328041 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115210238 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140304834 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107600738 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081902278 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096391314 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070024378 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127378288 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07765706 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084414692 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102413523 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.093345526 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093953468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156635349 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.086380061 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118708389 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100257478 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067125325 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093497592 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171473845 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084655141 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.119164609 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119733668 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089777149 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067743918 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.107505328 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073653342 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116485064 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.100117138 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109199659 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079246637 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111078995 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068501062 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074484552 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139842126 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106228177 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09713773 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140594681 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107698467 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.096758248 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113270195 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.10009713 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100514342 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107216219 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112591037 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111282484 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074365399 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132158876 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09630445 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077297726 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091450229 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078649294 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077180116 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108645917 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122887338 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364694348 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111871662 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116456179 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105290931 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.113850018 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097622818 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084966517 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150039965 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080653592 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07916565 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103154989 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123016013 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094847191 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154335639 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.08331912 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153257323 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10786511 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089857281 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128437271 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072433742 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073243196 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090885268 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105052859 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133114754 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082152988 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082841889 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133290177 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147597785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111157354 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117058407 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070876246 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103855073 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155240798 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.118908379 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08543308 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120578748 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090078822 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140885587 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106331846 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138070321 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113643988 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12331465 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.096480859 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083865966 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07757948 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094442527 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121386749 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089526421 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08606611 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06985752 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077080213 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104061201 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102026379 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128576338 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098465638 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150384134 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075970961 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116478898 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118122118 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118045148 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099957767 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104632864 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.099402633 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095719375 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099323476 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097035124 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076665815 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143914366 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116145403 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081438285 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094676443 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106822773 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276306241 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12144758 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117478107 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102756743 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116725522 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135485316 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109020046 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091081543 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09291847 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105760728 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.094897185 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085397592 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114118966 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131133669 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108215961 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117084626 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.099286974 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09553936 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121435649 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105536303 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09445213 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126279954 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173226447 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.111504633 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117901303 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091801049 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118134551 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11289251 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121017246 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.122296731 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122497026 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072531057 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079080291 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072427985 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116284047 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08299294 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129914613 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079864275 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114139583 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107801423 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083450871 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068742714 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10653607 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095589208 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.086649055 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142542848 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.115701854 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076805277 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103925461 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11498491 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090957065 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136062186 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.110280163 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107779256 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074352735 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10134149 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077745022 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117910521 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111285304 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086008512 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.078351801 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072119034 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11807773 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089375283 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117761928 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100123061 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10849779 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127509434 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155904342 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094741614 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101216103 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132612897 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122222476 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.089028145 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281618008 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15150622 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.13957385 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088943322 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.093448228 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114228067 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114586198 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107628631 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081077774 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081933377 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122506028 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123694981 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.070968168 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089051165 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074263394 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.093336141 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128144017 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107623527 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087408685 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128747764 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078947746 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119118649 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105074901 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140588004 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135413647 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165811894 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103504152 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087986541 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0817924 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141281511 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.074101819 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129452203 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123185592 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097490855 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070831867 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090966026 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101553492 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.645366743 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117172003 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078581863 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150679721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093703995 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127463001 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09324217 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.126783357 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100707299 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107766203 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099109147 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150568518 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087294791 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119192093 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178983344 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119713053 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116606175 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078685535 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088908612 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076837827 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.085938017 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089527863 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095227996 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117258366 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093703881 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112749292 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.083611087 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118076985 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101312999 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095191702 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.104995831 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239100544 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154286581 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09529159 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144068896 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11708977 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082448577 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079215016 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.095606337 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112590871 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085435182 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098859188 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082890236 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.081926176 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16907948 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117231175 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089508518 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109187755 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.097072986 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.095995007 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097329015 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131436928 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121070424 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077887148 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.092433231 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110848624 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082953307 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07883861 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103484364 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07262807 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099939413 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113400032 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106151087 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100130107 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11517729 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081415715 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096965305 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120349864 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091836253 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080512828 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079663967 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08179105 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078870958 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110548168 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116965955 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125691758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12332915 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095887991 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107420298 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.082734033 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.226961317 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084040934 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102613365 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110078649 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079696913 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.138922268 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093951224 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098705371 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10567159 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108852883 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167806164 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076225966 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119751107 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096060188 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118160433 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094751346 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117883625 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103638802 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104547128 seconds)
  done (took 54.684280837 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11323422 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.160986495 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.154164121 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.08287661 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.096889795 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125288454 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204368991 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193160547 seconds)
  done (took 2.926758731 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076362179 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099276524 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103370847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084411578 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066934851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077077205 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.247347823 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082413858 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066824774 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101324541 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082251599 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069841725 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46294294 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06602685 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068115331 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077427038 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066504813 seconds)
  done (took 3.659250927 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407610059 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598500607 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378324217 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075859804 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.970955737 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091587204 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.158219989 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140125932 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081699152 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521824219 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36789128 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130473167 seconds)
  done (took 18.701518036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081635637 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078960382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09181231 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091061394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078373998 seconds)
  done (took 2.196493111 seconds)
done (took 104.934417104 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081542433 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.219346341 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068645293 seconds)
  done (took 2.089554579 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.092392002 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0907176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090765257 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.088571976 seconds)
  done (took 2.140784044 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07454309 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077225573 seconds)
  done (took 1.925955558 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.241373382 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175285914 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098399083 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083943705 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079624477 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079982322 seconds)
  done (took 2.028392377 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073224748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073561821 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073941636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078976212 seconds)
  done (took 2.076436461 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070793561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067058367 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068973143 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073005047 seconds)
  done (took 2.057289125 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085726025 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085047957 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079718027 seconds)
  done (took 2.021460333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111283766 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099880018 seconds)
  done (took 1.984312312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082592567 seconds)
  done (took 1.85416 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094290087 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103380454 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136952673 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117330224 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146200085 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.121165298 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08231656 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087717845 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078081141 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084598164 seconds)
  done (took 2.824126907 seconds)
done (took 23.373852323 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079006917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376829202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362156696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093704286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673633998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35720574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98095308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093538238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1096884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069074107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087909706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649667777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007168795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33085733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959218314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330560653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651966678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068971143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068054433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069146733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964896695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068050045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069055534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068902145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651868772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375336533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070345413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324786376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068308231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071031797 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356151982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07005916 seconds)
  done (took 16.328556976 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071017591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123638104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075098168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086946323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07165337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07065848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071994925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069758661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120033715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0696892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088277386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068447274 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07324881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071003678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090372931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06833412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070544983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069917531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069611593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070674683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089242812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069074939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070467083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07000015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070525849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083109893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071329481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069026861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069403194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072718083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07323938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071415608 seconds)
  done (took 4.243570028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118069987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128023436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075388164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108178098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120092197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070562021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148155213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093982502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121639635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06974328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088325374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069062462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10452923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070962835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09215899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069958499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071688613 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070342862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068937384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070471002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090116481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069278459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070427219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070107344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070826235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085226849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071227075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069231893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069888371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072111379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073846942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071424253 seconds)
  done (took 4.50781645 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070381537 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073516716 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081897349 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083251707 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067794963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069803467 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071992456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06916005 seconds)
  done (took 2.384106616 seconds)
done (took 29.247441103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07861408 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067894508 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071421641 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088175963 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074339264 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080428792 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065322898 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075555091 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072889223 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072748009 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075912055 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067172951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071743521 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066030691 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07306943 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066979221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081222818 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070673506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080398128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080521369 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069622433 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073444101 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075170629 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080979238 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080467056 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08069906 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077528596 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073314828 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068537396 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070751358 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070329458 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080233156 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082299757 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083009118 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067521807 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068084579 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071622684 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069620552 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08247571 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076966854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069422493 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077351932 seconds)
  done (took 4.893865752 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086117212 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091713004 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084356082 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082288274 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101355531 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08290172 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089070704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07980971 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077316158 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087720454 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073704159 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080472708 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078598714 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07235126 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076813917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07457913 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078876187 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073710403 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077596429 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077870349 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088658802 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0724556 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089375633 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07922243 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074615094 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080607681 seconds)
  done (took 3.918000868 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073184414 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086214786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091997367 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147633631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113108773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086125218 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081626582 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093366251 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097922554 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068057654 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072448315 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093105174 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092976698 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074934152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111940931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085072406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08409296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070100927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075642311 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098079135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089788747 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086937782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096465706 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08608367 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06871391 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07101976 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073069906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083115519 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071987555 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080587117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072258103 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07254151 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069338601 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080083702 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071916624 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067686817 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092621667 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08029179 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080526986 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107233834 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077631698 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068743864 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096307858 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129165973 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067022719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071548222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071265715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079877 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06672636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09555726 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082496024 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067625768 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06836107 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066915271 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0670848 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07125216 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069405823 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069625653 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078773462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074471165 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089354975 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073164812 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088191271 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067199639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07834705 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06661335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068853479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066494345 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098964385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069402223 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117426838 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06872308 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066702276 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079494492 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078165338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073829469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067091368 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088307975 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078946936 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071707025 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077769961 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070948289 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070914115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098791109 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067889269 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067498942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069074586 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071163028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071119412 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068794605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081753035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066750009 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070918628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089031024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067380812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068647206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071085171 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070147418 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067331913 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08115145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072208925 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068905983 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079353922 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068063814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070737395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081171755 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074999651 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066543411 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069738282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071107763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068874002 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069267791 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071401978 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069762256 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074566023 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075110597 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073269346 seconds)
  done (took 10.997680893 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177222451 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167826097 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070455381 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.158855277 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076981111 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082985077 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160580602 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098664675 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069839137 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06925621 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067933195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110908009 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107891442 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117170284 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080938688 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068650721 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095139012 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116656541 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162568945 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.158050813 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092360757 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077295809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071054072 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069765367 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069749149 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078966087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085608252 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07760022 seconds)
  done (took 4.684520982 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081518362 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104644331 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072547545 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092304226 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090642633 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06928398 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070762289 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070545764 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085172403 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081388995 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068474108 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074686839 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072505473 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07221642 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069119576 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075483064 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075572635 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067557855 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072425015 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074339086 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078872569 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097002356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073960907 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068806599 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071044643 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068203782 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080942558 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084367701 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068791563 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106665445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066276598 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073547019 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083520537 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06921658 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067753835 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068905191 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068475588 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069013307 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069217215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067015703 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066810503 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07299996 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067204851 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079725434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081434048 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075250612 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071594167 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070658354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0707832 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066264823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071524594 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071057701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071186153 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076176972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072879836 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071206208 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069558458 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097018846 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074589327 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067601201 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067964083 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066717921 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070357953 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081850895 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083878336 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070902217 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067095385 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068223196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081715416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081471862 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06789968 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072809208 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066075776 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069479721 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070626266 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070872615 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069583873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067371694 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06755972 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068327954 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069106518 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067867829 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068147932 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071172837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066688049 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067373184 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072095801 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070755999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080176936 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067576336 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072265719 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068981297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066930281 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071086522 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073985253 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071461994 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07924009 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08234718 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068737551 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066587096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082533809 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070780044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068177713 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073733272 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072998213 seconds)
  done (took 9.567668748 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089830256 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069326014 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08524726 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092097117 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078341869 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07455632 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078540558 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068970559 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085585984 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073980861 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076528678 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067762328 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079842299 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078399396 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069413246 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078426684 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072053592 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085941035 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082800902 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067958195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07696431 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080524673 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080356054 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082417112 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082232596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083203554 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08055861 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078743402 seconds)
  done (took 4.054106174 seconds)
done (took 39.905924989 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.875114644 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.130416063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.876658017 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086937205 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.934047901 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.16014408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.918495673 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.870540792 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.175010561 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.920813565 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.142920205 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.419942092 seconds)
done (took 67.445129445 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.907455533 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.02476067 seconds)
    (2/2) benchmarking "String"...
    done (took 2.127256888 seconds)
  done (took 5.957210674 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.10893649 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.521932072 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.137930789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.870213628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.877167751 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.29844739 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.641510551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.315255927 seconds)
  done (took 31.468205997 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.073084094 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.091940945 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.598189027 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.620012576 seconds)
  done (took 16.234340448 seconds)
done (took 65.570837451 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.881019938 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.869656125 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.871871858 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.899133554 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.879840493 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.874634875 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.875460843 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.872156277 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.91544296 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.885298751 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.870517795 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.879902058 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.872787338 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.896991725 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.338166887 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.917160393 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.887314837 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.882663846 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.887148618 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.917799519 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.873047391 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.870446818 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.357726761 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.024288312 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.493043029 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.04172665 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.262027335 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.267452054 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.873973166 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.031419353 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.918662677 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.09439205 seconds)
  done (took 207.089770318 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.872018396 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.825625658 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.878611162 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.922048382 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.303059124 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.051017348 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.007666984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.350316369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.876064884 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.878775002 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.028465588 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.873610958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.04791965 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.870710052 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.908904061 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.904629657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.072098944 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.054304005 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.911508207 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.036957883 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.897123158 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.879002088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.849786136 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.006628522 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.882768139 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.973162123 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.886711107 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.877825647 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.063331069 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.045722578 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.884298306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.89272202 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.061331142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.74581852 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.897866725 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.892559717 seconds)
  done (took 173.218132555 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.075263131 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.879687788 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.872925462 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.925206009 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.994560373 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.876648412 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.544867597 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.882589592 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.562595922 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.878447082 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.873096654 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.871403453 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.875189877 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.885768281 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.975764792 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.876890564 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.889100236 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.874667114 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.89727317 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.875629341 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.873504504 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.874187464 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.876237071 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.872779378 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.873610259 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.873339926 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.873481262 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.270290229 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.122637983 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.876062496 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.875668586 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.393544678 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.887721517 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.037392554 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.876432361 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.967316331 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.92712226 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.995355538 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.875333704 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.090775192 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.959466227 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.875043084 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.874356285 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.938784446 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.889276206 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.875365764 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.875797922 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880196782 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.940954282 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.118144521 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.878333583 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.995513926 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.357250418 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.876297686 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.87595045 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.874238281 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.876308112 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.459525826 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.875883814 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.875966053 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.881191679 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.880530219 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87702585 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.875592295 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.261162677 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.946091668 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.965111104 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.49727335 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.879433319 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.35776605 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.11063985 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.876894268 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.876035028 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.876721159 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.877821543 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.876169446 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.877785992 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.996977155 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.884860868 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.984232052 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.957907659 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.998498219 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.880059081 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.886019481 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.696971854 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.945725466 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.910885443 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.701629919 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.878477092 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.248544984 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.641454428 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.875535987 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.876763847 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.888275523 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.876869674 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.878380589 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.877796743 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.957270849 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.876936625 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.87752161 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.998060205 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.586837607 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.309990726 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.87627151 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.877030331 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.878752411 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.884357779 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.959017946 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.000794897 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.880856368 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.943071912 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.88424069 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.882043425 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.972270778 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.879629849 seconds)
  done (took 412.830324499 seconds)
done (took 797.07684607 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.505444922 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.475958854 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.57237191 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.487019055 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.468309012 seconds)
  done (took 14.321458295 seconds)
done (took 16.133438489 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.892349122 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.883552043 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.934590664 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.960789666 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.894985604 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.896676591 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.960184915 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.896917664 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.928478559 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.93180374 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.960689647 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.962358947 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.903448048 seconds)
  done (took 26.81983139 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.888485052 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.029182599 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.115462776 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.918802403 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.889170102 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.112747355 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.943575883 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.024187 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.030540848 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.110285545 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.135624062 seconds)
  done (took 24.014769819 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.889466626 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.035444008 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.110795962 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.921006998 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.891382067 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.117299225 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.947815566 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.027276404 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.034734041 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.115622944 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.119263361 seconds)
  done (took 24.03357258 seconds)
done (took 76.682491391 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.884738576 seconds)
  done (took 3.700299862 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.902980401 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.050166287 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.882771724 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.879807901 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.886052505 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.88445889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.881112902 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.884334983 seconds)
  done (took 17.070722677 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.883497352 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.882605738 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.885839875 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.884667705 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.885318169 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.880678498 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.883183272 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.881938407 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.882205004 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.881626401 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.884951815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.882322964 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.883288114 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.885502227 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.885792732 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.885842238 seconds)
  done (took 31.958609787 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.886619922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.884999745 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.883487021 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.882409483 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.884539458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.886666116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.887339669 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.884543418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.885061057 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.88498962 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.886919032 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.881335159 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.882285131 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.884755216 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.883612093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.885408426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.884978871 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.88354116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.885898217 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.884560965 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.883957592 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.883394182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.88616774 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.884304306 seconds)
  done (took 47.05736984 seconds)
done (took 101.610926063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.580206346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.474309371 seconds)
  done (took 9.870383727 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.887399089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.88258901 seconds)
  done (took 5.650532946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.88340894 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.884188913 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.883698204 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.883049095 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.884374617 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.881984932 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.881039222 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.881555142 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.882042446 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.88218519 seconds)
  done (took 20.642443923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.880834826 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.880990895 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.88352436 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.881157877 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.881918873 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.881206342 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.882227146 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.882003309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.881753293 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.882378371 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.880918396 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.879806732 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.88146961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.880913632 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.882625501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.880077391 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.87958649 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.880447916 seconds)
  done (took 35.678187262 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.880490446 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.8793097 seconds)
  done (took 5.572489416 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.878722528 seconds)
    (2/7) benchmarking "second"...
    done (took 1.879765614 seconds)
    (3/7) benchmarking "month"...
    done (took 1.880062104 seconds)
    (4/7) benchmarking "year"...
    done (took 1.880968705 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.88010743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.881038838 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.879661954 seconds)
  done (took 14.970583316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.879538365 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.028540053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.086888033 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.508249213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.869726504 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.871953496 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.773368595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.870496265 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.871761012 seconds)
  done (took 20.573277727 seconds)
done (took 114.773102727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.707447166 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.870602351 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152369857 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.92668316 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.873669169 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.161481605 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.894956804 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.158864161 seconds)
done (took 43.546994544 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.866721107 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.862854296 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.892264344 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.89156067 seconds)
  done (took 22.447143769 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.863109732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.183670475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.882890745 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.688775922 seconds)
  done (took 22.425754491 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.230044884 seconds)
    (2/2) benchmarking "read"...
    done (took 2.206994885 seconds)
  done (took 6.235953361 seconds)
done (took 59.776386647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861955515 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.862890655 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.862059459 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.86353858 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.862512948 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.862216627 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.861663641 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.86263852 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.862954182 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.861190291 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.861742708 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.862481543 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.861161612 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861094964 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86174334 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861480879 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861869792 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.861284625 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862132972 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861950746 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.861650515 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862532353 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.861742227 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.861826114 seconds)
  done (took 46.483171998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.861889923 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.862267993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.861995486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.862834944 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.862347796 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.86301149 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.862796374 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.862724177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.862665521 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.863805419 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.864527174 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.863574789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.863467705 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.864887483 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863288544 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.864288281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.865613974 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864135622 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864439649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.864270933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.862888699 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862951082 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.862079399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862822066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.863158856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86344191 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.863970542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.862151908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86303033 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.863088686 seconds)
  done (took 57.694886292 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.862599279 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.864518404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.863561594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.863431359 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.862984921 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.864415596 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.864154471 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.863841369 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.862397004 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.86341619 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.863103871 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.864685305 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.859267133 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.858908492 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.859421092 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.859198289 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.859325827 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.85898713 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.857374249 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.856635901 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.856875194 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.856909138 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.859681657 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.85238905 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.853365721 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.853351958 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.852431647 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.853632887 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.853117014 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.852233853 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.852085877 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.85193057 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.853057256 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.852430094 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.851935304 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.852049054 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.852302184 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.850722955 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.854805835 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.852360067 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.851021013 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.85177946 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.852213618 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.852678082 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.851523516 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.849890406 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.850104872 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.848947499 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.850058231 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.850609332 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.849607104 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.850088657 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.849309362 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.85068534 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.849558295 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.850306678 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849351038 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.849094228 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.849844324 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.849514739 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.849883604 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.848635209 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.849090943 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849214563 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.849011376 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.850729994 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.848436657 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849375322 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.849221878 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.849158742 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.84950419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.849385033 seconds)
  done (took 135.294743032 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.849699359 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849219648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849798065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.849244907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848668002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849165196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.849891209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849250824 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849392419 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850511152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84927938 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849606221 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849245384 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849711934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85031238 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.848649297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849296904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849057173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849293793 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85061719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849923363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848841456 seconds)
  done (took 42.470454734 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850141863 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849433127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.850259702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849214567 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849224635 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849735134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849516298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.850396383 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849526469 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849214062 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848396586 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849104946 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849793374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850047795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849000171 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849070274 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848220625 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849353759 seconds)
  done (took 35.071635146 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.849506145 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.849068766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849303482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848338216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.849040837 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850740769 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848793902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848420463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.84844129 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.849572865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850186767 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848895974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.848773422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84894634 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848919812 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.84924564 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848090816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848066776 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848923104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848301323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849322472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849351519 seconds)
  done (took 42.461568223 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848245602 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849173436 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850213238 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.849092222 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849325856 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849641313 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.849280234 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.84991442 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.850002276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.848957905 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849940347 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85052152 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.849275267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849609088 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.851310187 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849916113 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849999662 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.85046847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850765557 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852085179 seconds)
  done (took 38.778782756 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84983036 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850440209 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.850560948 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853710344 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850570594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.851024884 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.849780351 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.849984659 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850428493 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850619341 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.850607436 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850368117 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851216472 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.850781883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851102868 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851373109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851102673 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851056687 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.851264794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850869681 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850830366 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851025043 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850363158 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.851172388 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.852364029 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852041788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851447045 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.851430043 seconds)
  done (took 53.611260573 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8511302 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851700817 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.85159207 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.852364539 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.852862638 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.853022282 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.853642517 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.85416875 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853382979 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852215937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.850419635 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.85041517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850734009 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.851721768 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.85110844 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.852845978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852451164 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.852987732 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853637503 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853469574 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.854842473 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854285806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.854837746 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85343553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854041595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.854254305 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852273969 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851999696 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852271826 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851949256 seconds)
  done (took 57.363740243 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.872169644 seconds)
    (2/2) benchmarking "in"...
    done (took 1.874142473 seconds)
  done (took 5.530358456 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.854296077 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853138942 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.853256589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852661697 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.853867332 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852719056 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.853174343 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852679836 seconds)
  done (took 16.610645444 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.854631426 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.858116255 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.855762794 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.855130371 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.85403315 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862068181 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.855624486 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.856257938 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.856546799 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.855706222 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.858602797 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.857974345 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.862447509 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.858831774 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855665571 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.855989274 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.857112589 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.857735548 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.859759723 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.856484066 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858916912 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856913429 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.857456009 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.856069774 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.856893715 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.858228522 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.865007203 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.85767904 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857305743 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.857320405 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.864452108 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.857598346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857085448 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85814037 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.857090613 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.857784143 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.862897343 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.857786649 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.857516162 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.858238068 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.859265685 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.8602834 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.859043124 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.86394822 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.858756967 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.85760774 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.856946771 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.858133886 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.857991134 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.860104773 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.864191068 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858502387 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.857871572 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.857919905 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.86005833 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.857917619 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.858668282 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.86000262 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864246204 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.863523583 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.859985257 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.876987554 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.865572543 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.858864078 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.858675647 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867112814 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.879025242 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.859857491 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.860685647 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.85888368 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864572866 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.858809837 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.859682874 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.858719613 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.870268659 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.865306168 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.858841525 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.85939226 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.859130758 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.860459215 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860888715 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.859565338 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860191607 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.860824476 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868146106 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.880155921 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.860400905 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860769885 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.861986582 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.861275864 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.863156206 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.862671849 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.859674532 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859299915 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.860370071 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.861896344 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.860869603 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.860792195 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859088048 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.870274258 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.8612927 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.86099238 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863493299 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.867991538 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.860708101 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.860532787 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861764946 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.861335936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.867687085 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.861446279 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.861936123 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.861423689 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.861659777 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.864737976 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.861803534 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.864260643 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.867666709 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8682379 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.863069241 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.863846646 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.865253316 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.86258494 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869445389 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.88267772 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.862277861 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.865667177 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.865426523 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.871993619 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.865755884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.861798891 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.863869453 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.862493602 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.862217913 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.864744899 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.862248918 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.862992891 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.864578537 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.863034243 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.863008739 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.862925646 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.864631198 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.864527708 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.86529678 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.863520965 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.866403742 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.862773815 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.865336347 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.869591188 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.862905166 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86354683 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.863455256 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.865314417 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.864683171 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.862766711 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.863067649 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.863945218 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.862952349 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863571861 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.865895558 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.864242427 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.863971889 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.864439786 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.86719234 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.864619696 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.864672058 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.863925882 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8640152 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.864703094 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865103934 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.864963378 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.866351976 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.864623072 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.867790159 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.864707798 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.864329948 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.86482429 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.864655598 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.863645999 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.866682271 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.874315133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.867620401 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.873176055 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.864910361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.87179117 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.865961417 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.865941685 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.865259677 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.865321069 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866242025 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.865729364 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865233487 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.86859082 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884149259 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.873914936 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.867033589 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.866663229 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.870199204 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.869053146 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.870981304 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.865930021 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.867258854 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.869259458 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.866454239 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.86680655 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.867001936 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.867619906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866228866 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.866128179 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.870091953 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.866693348 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.867343336 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.869190882 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.867771789 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.869729765 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.869214404 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.86881085 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.867728356 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.867189321 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.872040685 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867985289 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.866394914 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.866604497 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869045443 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.867371004 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.866862599 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.868389541 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.871081537 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866058445 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.867696766 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87427737 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.867678719 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.868076769 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.867391393 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.867416409 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.868647763 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.866854702 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870138375 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.873588803 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.870667954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.868599823 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.873356129 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.867959003 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.870320456 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.868560166 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869953466 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.868785164 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.869247368 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.869173177 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.869133022 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.87760377 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.868548945 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869173534 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.870217424 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.870602236 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.869994386 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.871399235 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870075255 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871374931 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.875470643 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.873905772 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.869375289 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871392704 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.87140567 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.869788631 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.872375533 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.870656395 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.880922571 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.877091619 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.869478873 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.869475144 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.869725045 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.871349251 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870116511 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.870130447 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875567791 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.870077109 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.870827161 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.872542492 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.86953936 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.870541179 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875466674 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872192744 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.872978359 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871339514 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.87323276 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.869217244 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.870292082 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.872499752 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.87100365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.87079929 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.87403744 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.870223775 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.871706124 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.871051642 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.87878607 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.871429655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.871777942 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.878367923 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871907964 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.871666654 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.871912916 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.871506316 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.872236838 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.872457808 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.871513213 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.874186265 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.871738808 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.874420618 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.880772068 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.874679573 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.879665784 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.872813644 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.881030944 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.872955698 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.871467432 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873013134 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.875102397 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.879056935 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.872405856 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.871466971 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.877873065 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.872342742 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.873284138 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.875489688 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.871766899 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.872799769 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.873081259 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.872967988 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.876407867 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.875874777 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.872988871 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.872983008 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.872148255 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.872015805 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.875540853 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.874932413 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.873511702 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.872534159 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872127674 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.872713712 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.873570284 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.872950807 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.872950447 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.873252083 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.87328814 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8808173 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.874412536 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.873927866 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87729857 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.874131821 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.882434239 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.87517065 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.873907802 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.875373825 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.874588195 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.874857485 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.874795475 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.87499043 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.874791001 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.874140829 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.87578818 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.884019915 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.880992701 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.876828818 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.876097109 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.875994804 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.875490215 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882741357 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.894660733 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875304891 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.876682045 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.877901149 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.88103425 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.876973843 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879112209 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876727747 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.882313779 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.878569044 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.874693218 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.877242994 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.885762964 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87615316 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.874633791 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.874545671 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.879925065 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.87677273 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.874939941 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876391082 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.877387559 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.875790173 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.884697575 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.875939675 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.877597581 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877603511 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.875618528 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.877306192 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.87624961 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.87762214 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.876741731 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.876959662 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.876697087 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.878277828 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.881375174 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.876869156 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879681473 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.884496147 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.87725109 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.877740748 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.878779336 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.878423077 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.87961317 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877410737 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.877938267 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.87775834 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.878638531 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.878431388 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879568886 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.883844352 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.878540519 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.876482485 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.877388172 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.88056444 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.876720352 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.877369587 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.8791964 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88662655 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880386736 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.887061832 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.884896322 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.877887225 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.878389359 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883582194 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.885188765 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.877991107 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877168697 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.879020828 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.880610165 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880068219 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.878289144 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878848068 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.879023977 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.883559228 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.878691231 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.879148633 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.879319708 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.878572274 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.881092488 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.880738876 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.883522858 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.878628398 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.879068484 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.877122869 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.87967034 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.880045342 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.881539973 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879094871 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.879514952 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.882454665 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.880806275 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.883459784 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.880088027 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.879576875 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.881424097 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.880216827 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.880135003 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.879671326 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.879584138 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.88067516 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.881881157 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.885968224 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.881038588 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.880655214 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.880466195 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.883458373 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.880126663 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.879772605 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880512068 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.880271034 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.887049755 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.880476272 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.881067254 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.880617274 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.880322767 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.885275919 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.881732922 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.885478721 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880454055 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.880757587 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.881092525 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883567303 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.888791139 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.885832851 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.883764852 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.888741614 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.886117555 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.882641188 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.880455388 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.882260647 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.881333291 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.881656225 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.886033999 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.882484669 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.88440011 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.882046368 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.883453948 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.8824757 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.884646943 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.882632212 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.88261133 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.885230375 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890429043 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.890358753 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.88355598 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.884110533 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.88324949 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.885403717 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.892271045 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.882829752 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884182195 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.884059309 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.883985359 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.885956339 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.891513493 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.890741482 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.887663222 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.883869585 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.887602233 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.898117317 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.885722036 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891720882 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.910325948 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.885294574 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.883614207 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.883630152 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.884635685 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.884187758 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.886407239 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.885001982 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.890550947 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.884117853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.883585109 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.891157524 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.88477437 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.883987319 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.884482762 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.884318316 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.889131461 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.884845318 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.891071771 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.884431384 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.884516758 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.884934681 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.887172345 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.884599727 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.885061001 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.885620386 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.886570879 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.884122554 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.885767105 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89255955 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.88646049 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.886877087 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.898020611 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.894348506 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.885894125 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.887266361 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.885837208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.889959481 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.888373176 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.885874271 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88862422 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.89368713 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.888651783 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.893343094 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.887587605 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.887796122 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886060514 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.885548304 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886671559 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.897768674 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896212834 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.887510756 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.88623421 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.892459318 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.886018025 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.893884406 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.891727765 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887112066 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.888884822 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887683726 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.887833099 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.887504158 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.887328704 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.889421054 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.893797026 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.887797643 seconds)
  done (took 1118.267139659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.886324014 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887897165 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886910967 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.887634093 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887345076 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887388557 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887894739 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.888100629 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.887811924 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.887896781 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.88757849 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887950184 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.887480491 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.887757779 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887598749 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.887805533 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887527255 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889218129 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889485961 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888343122 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.887621997 seconds)
  done (took 41.461537783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.888018515 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.887852139 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.88764773 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888112659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888140475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.889121562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.889338929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889491222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.88806837 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889377826 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.889379792 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888957961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.888760465 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.889190828 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888842016 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.891415422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.889953079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888426603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.889580181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.888903891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.888921326 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.888805084 seconds)
  done (took 43.376014906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.890197485 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.889861056 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.889392806 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.889574703 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.889104297 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.888874135 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.890616236 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.890498376 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.889172291 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.889813953 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.895843387 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.8970259 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.889958116 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.892188556 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.889491463 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.890666276 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.041411987 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.890156358 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.890360003 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.889801304 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.890109144 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.895179657 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.890567374 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.889098316 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.88977543 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.891430614 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.890449917 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.890595041 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.890522366 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.892132765 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.894161638 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.891626449 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.892401789 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.894104117 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.891443775 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.892170644 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.895230802 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.891373874 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.891238745 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.892191903 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.900087786 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.914132008 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.893666076 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.893032403 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.899441096 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.892977741 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.89284877 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.895285027 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.89838794 seconds)
  done (took 94.700465642 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.890343317 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.889792147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.890509216 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.893108639 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.892023194 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.892399653 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.89152189 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.891786652 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.892826512 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.893548026 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.892325813 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.891379948 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.891841576 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.891915011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.892084741 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.892767443 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89193782 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.891832991 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.892024587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892034581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.89324456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.892411549 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.891828943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.892886259 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.892405963 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.892267196 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.891566932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.892807037 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.89249689 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89330735 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.892916153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.894092402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.893705863 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.893279979 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893579664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.894273794 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.894228924 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.89280484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.893946682 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.894381608 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.893905416 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.893790438 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.893497993 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.894291222 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893359669 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.893912942 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.89347326 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.893880474 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.892764823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.893707155 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894145733 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.894349753 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.89534209 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89475938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.894589434 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.894626343 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.894874221 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.894730951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.894884196 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.895026421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.89541959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895173847 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.894946492 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.894756756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.894529902 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.894802292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.895098126 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895239591 seconds)
  done (took 130.56725774 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895163982 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.896774094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895530718 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8957656 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895618255 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.8960351 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.89553578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.896336488 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.896058026 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.896873632 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.896167705 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.895778845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.89583219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897146815 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.896449954 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.896494612 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.89617788 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.896574426 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896887303 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896775548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.895818442 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.896690342 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.897522126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.896716471 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.897490094 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.897260792 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.897365184 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.897900566 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896709539 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.897642421 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.898986405 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.899103299 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.89931064 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.898927554 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.898506569 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.899234286 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898196402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.89694208 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.895984545 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.897217025 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.896268874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.897161134 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.897540888 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.897980375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897929022 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.898660359 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.898186726 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.898648896 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897753053 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.898774902 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.898671943 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.899058845 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898477292 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.899129364 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.898448337 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.898656714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.89858686 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89860942 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899063954 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.899229695 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89900774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.89881904 seconds)
  done (took 119.470350991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.900806054 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.899712257 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.897902275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.898819653 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.899332722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.899183677 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89966059 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.899142987 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.900039294 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.899485103 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899369929 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899445922 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900735252 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899604052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.900005508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901822675 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.899634887 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899745471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.900369892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.898920363 seconds)
  done (took 39.824208889 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.899119328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898803375 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.899116672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.900854671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.899894517 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.89915985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.899634023 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900066364 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89887966 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900090258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.899642494 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899783669 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900141542 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.899346713 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.900239619 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.899584216 seconds)
  done (took 32.223959492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.900032818 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.900501485 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.90061661 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.900836816 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.900309283 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.900532973 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.900451979 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.900857747 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.89957169 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.901657213 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.901004044 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.899916327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.901351821 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.901212725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.901546608 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.900835382 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.90117901 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.901872203 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.90155526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.900882448 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.902232387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.901468687 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.901693147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.902045145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.901984354 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.903054295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.901606198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.902121329 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.902090898 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.901976612 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.902231639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.90252295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.902427914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.902378964 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.902334021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.90275073 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.903185908 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.902168731 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.902549429 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.903170188 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.903288785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.901906319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.90207403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.902424683 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.902469857 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.903125942 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.902602005 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.903396042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.902454121 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.904003408 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.903611205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.90272512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.902795805 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.90245448 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.902881003 seconds)
  done (took 106.437181159 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.903530359 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.902786076 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.902970875 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.90227954 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.902775263 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.902630485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.90248278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.901810647 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901878912 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.903149557 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903640195 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.902909951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.902963012 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.902836684 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.903206456 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902971754 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.904588556 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.904233272 seconds)
  done (took 36.087574289 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.903976234 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.904472387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.90381859 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.904033027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.904120599 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.905277706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.905387619 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.905196843 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90546466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.904167213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904154658 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.904331802 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904548006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.905183252 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.90370369 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.905561766 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.906709331 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.904733886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.904544562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.904148199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.905337319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.905216617 seconds)
  done (took 43.739057763 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.904538458 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.905524851 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.918043719 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.923514314 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.925367904 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.937238068 seconds)
  done (took 13.348878499 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905818993 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905513659 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905217064 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906163028 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905869239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905968904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905681067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906101679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906442741 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906181131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90558646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907002827 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906792986 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90594959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906869345 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906903986 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906976372 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90636856 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906395101 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907042788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90626182 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905950826 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907389492 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906204987 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907249926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908584832 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906837665 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90727984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907625582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907733653 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907671216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90683327 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90703355 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907539448 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907606641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908479952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907154608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907693678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907152628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907367102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.908108791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907964772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907366005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907623837 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907658982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90811334 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908084157 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907956959 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908185404 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908250724 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907863059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907958001 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908531514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908528935 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908692636 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90849594 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908798813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909181511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908746083 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908635389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908617677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908227534 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90902535 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909596421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909117186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908995713 seconds)
  done (took 127.727204037 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908956394 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.90821343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908696432 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909514096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909942878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909261271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909181732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909105402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90968999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909234625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910175316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909686785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909835878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909412991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910185905 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909489343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910359193 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910629116 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910558966 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910622048 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909766634 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91029797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911286015 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909882528 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91061658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909416542 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910860076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910264237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910088063 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910229687 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909947103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910878639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910387369 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911032774 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910558676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911576403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910254194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911348621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911818178 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910954779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911400535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910513117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.911384168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910894097 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912133168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911924955 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91158473 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911853881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910449189 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911653692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911910014 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912095258 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912498779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912132144 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911721064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911403953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911981926 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.911779882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913727464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913301072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912731275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912245082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911852276 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912630591 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912402212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912888899 seconds)
  done (took 127.955643108 seconds)
done (took 2608.356996175 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.020378662 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.157115634 seconds)
  done (took 16.020494725 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.084384167 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.036810175 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.920227903 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.955907705 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.920654093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.943367342 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.945705489 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.920327744 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.921054871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.921598295 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.921488248 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.105903917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.937851779 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.92080512 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.921527001 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.01339955 seconds)
  done (took 53.246134575 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.923537568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.929511486 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.933366888 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.927115675 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.924051567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.941461692 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.957082463 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.927639859 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.98426904 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.938755869 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.050452918 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.934685469 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.923369018 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.97800451 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.938164944 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.938339997 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.018321328 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.00075775 seconds)
  done (took 37.019440288 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.002402851 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.942675323 seconds)
  done (took 10.803384338 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.954093923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.961725569 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.003791836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.940519048 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.943981581 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.923863603 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.921330088 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.953652257 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.949867378 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.94575498 seconds)
  done (took 71.351463076 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.924144598 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.923496001 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.920245164 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.918954289 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.91612173 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.922767594 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.918576701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.923459761 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.588929939 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.957714711 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.926064514 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.92464369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.922083417 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.92269223 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.918733955 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.941291688 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.037606958 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.919262483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.917615259 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.92460718 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.920972 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.974100307 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.935038369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.923352569 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.950027757 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.587335442 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.928032683 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.927175932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.031169286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.918766796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.91946802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.106177158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.92331474 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.379962648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.18646893 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.926789986 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.934295074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.925463273 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.917931478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.032918848 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.921242192 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.9260929 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825540935 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.167085162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.020311697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.964236467 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221348224 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.940674779 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.922544264 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.950821465 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.924995535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.92224363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.935590995 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.430334588 seconds)
  done (took 135.538956293 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.919335094 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.264877681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.088427179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923565603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205085355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12433042 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.921366046 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966106615 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.922484782 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.14762851 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.173415713 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.024219505 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.92165514 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.920321614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923281933 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.919832267 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.073315501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.992927534 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.922543357 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.920799359 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946835334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159971294 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.043039553 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.925309857 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.944352442 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131223131 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.042554258 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025279495 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.784572247 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.918468291 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981559073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.922316163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.922499569 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.919452779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.075357362 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.015091743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002061759 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.922758391 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919935246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.92105196 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.670724725 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119576111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.01693163 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051773159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173602952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127070081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.702297835 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.920155236 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.657273779 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081751111 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.149224378 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.149336822 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.04379238 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.924594228 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.254402067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.362365683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.92266839 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.171526485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142059775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.020039709 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925395317 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.921229033 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.921746121 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.209835421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.922957472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.016360482 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.927891668 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.922935765 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.01959947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022430393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.152917491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13385988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.95205709 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.262105399 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.429097574 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.167130539 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.988247212 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172053705 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.927300333 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.92236103 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999942915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.759090752 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.175392219 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.204411203 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.167187326 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.957314957 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.63721471 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.922871157 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.147356613 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.145406905 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.183607893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.173101541 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.159492783 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.23853099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.923646274 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.923924449 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.162964407 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.048062673 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.926194234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.272471602 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154421866 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.483459892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.950055337 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.22687853 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054596609 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.925978273 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.552190185 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.926428878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.153700641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.962779397 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.927967135 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925675011 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.141706071 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.914045074 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925248584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.797650861 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.984693729 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.928582388 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155704418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.927684402 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1928265 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.927005942 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154559594 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.443325591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.954775321 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.098895349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17295985 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.927975851 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170207781 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.168783568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040504472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195673504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.813535332 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.926777831 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.213578004 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.929545418 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.92439952 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093467007 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928846733 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067587016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.931235799 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.216520061 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.94987768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154731448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930427044 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.17944259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.960663233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977511261 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.930610934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.045604569 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.929441795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752456279 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081690277 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.929361444 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.926406801 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.472873718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.926438128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074221558 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.152670742 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948758941 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.99912953 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588362884 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.926259015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010103957 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950259712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.314757863 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.92685099 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.176594489 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.930006809 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.926730305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.927545661 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.213402594 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.162099811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.932331541 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.928251727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.833018199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.928014673 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.928812809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.109946228 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.399814476 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.929379392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131715531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933237376 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055680406 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.933607995 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.002686391 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.25980813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.927613322 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.928423087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.928825709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.929358627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.927441589 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134842373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.954384762 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.466227419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.064568363 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203833949 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.239028259 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.167324916 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.972343751 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933381379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.182192601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.932641654 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.99187273 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.933026268 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948896637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160300393 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932888234 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.138598065 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.199930502 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801364228 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976989196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.932519341 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930385528 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.929728758 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.073460654 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016644225 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.934074539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.930375725 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.045236808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052173734 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.139517604 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.931039905 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.958869355 seconds)
  done (took 916.410132355 seconds)
done (took 1242.232389648 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.930954107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.931664243 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.934604917 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.93359997 seconds)
  done (took 29.592947469 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.933855839 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.933970087 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.934682322 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.931805472 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.93363056 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.93226102 seconds)
  done (took 13.46038134 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.00949262 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934891905 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.935347045 seconds)
  done (took 21.740828568 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.003622147 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32187445 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.070164604 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351022768 seconds)
  done (took 10.609017876 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.934413804 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.933817853 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.932875192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.935276738 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.935061767 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.935491973 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.934619033 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.934839283 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.936905643 seconds)
  done (took 19.277306453 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.995536037 seconds)
done (took 100.535617109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.879433918 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.433849694 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.007574839 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.181935162 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.038795466 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.95500803 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.948054859 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.934617405 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.012825545 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.219434727 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.195776237 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.974600307 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.325131498 seconds)
    (14/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.03447693 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.937617024 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.136519323 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.093623598 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.110071453 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.959505664 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.069309867 seconds)
    (21/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.936671725 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.955109231 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.047367276 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.096826037 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.243379274 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.033473466 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.582266011 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.063690922 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.092848026 seconds)
    (30/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.042552048 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.166398371 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.937551409 seconds)
    (33/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.807513804 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.938949915 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.325964518 seconds)
    (36/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.470054016 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.109324012 seconds)
    (38/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.012609902 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.878643941 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.248032252 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.043906239 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 5.661821656 seconds)
    (43/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.122299955 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.697323432 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.285052372 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.941695664 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.433164922 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.151807505 seconds)
    (49/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.941127667 seconds)
    (50/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.316790423 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.285778223 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.331292274 seconds)
    (53/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.070069362 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.958735927 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.65040291 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.922855045 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.193192198 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.934283586 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.939522915 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.188938658 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.957920735 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.936224392 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.950576709 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119924999 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.946867665 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.109181692 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.935465747 seconds)
    (68/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 3.924777953 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.092839051 seconds)
    (70/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.937898645 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.930711794 seconds)
    (72/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.941689008 seconds)
    (73/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.068367387 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.091032894 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162196589 seconds)
    (76/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.040413907 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.842753456 seconds)
    (78/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.128155361 seconds)
    (79/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.375190504 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.956357816 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.937644248 seconds)
    (82/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 3.174325034 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 5.639801288 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.024809567 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.119249928 seconds)
    (86/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.045183801 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.942018962 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.068033115 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.047554828 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.069706851 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.02498001 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.046596949 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.143691872 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.980570586 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.019107966 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.940981592 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.783548566 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.259799175 seconds)
    (99/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.264725629 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.940218887 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.274915252 seconds)
    (102/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.225549772 seconds)
    (103/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.021360906 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.955296576 seconds)
    (105/309) benchmarking ("sort", Int8, false)...
    done (took 4.813340908 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.130377513 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153873347 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.065322977 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.203261171 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.943818357 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.127842495 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.059619008 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.94174907 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.233306465 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.074392381 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.198674916 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.966434603 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.958672599 seconds)
    (119/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.717750734 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.070958775 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.609144259 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.984428016 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.071514113 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.941769947 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.487491995 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.328461145 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.943081899 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.007618529 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.059238434 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.127718349 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.974689068 seconds)
    (132/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.029679534 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.245934857 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.267370791 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.202094136 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.267444496 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.268249431 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.193910485 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.720356842 seconds)
    (140/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.040090835 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.951981979 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.96265177 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.101750324 seconds)
    (144/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.779209355 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.966975074 seconds)
    (146/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.028449816 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.07019744 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.239415929 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.318952461 seconds)
    (150/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.077815322 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.020240641 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.957128732 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.071085318 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.984790647 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.25844171 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.065685536 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.970160814 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.092098116 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.199653729 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.226437104 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.637650705 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.947531895 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.352260101 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.946638589 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.599757327 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.955049911 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.973933839 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.952716431 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.262910037 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.096726505 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.071702345 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.304712661 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.017940388 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.385834364 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.054950882 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.272652192 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.260945272 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.049189603 seconds)
    (179/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.120366264 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.281557105 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950103728 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.209086754 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.016895227 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.099256087 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.948757356 seconds)
    (186/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.186438094 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.084063021 seconds)
    (188/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.060793155 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.156983914 seconds)
    (190/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.966664384 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.840733075 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.261827673 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.285698299 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.951447088 seconds)
    (195/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.023894854 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.040834281 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.845447518 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.948785747 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.186738158 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.008883003 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.265750098 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.950241896 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.133854768 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.183871415 seconds)
    (205/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.622854706 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.178170486 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192675306 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.948766986 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.42565665 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.338755003 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.948526283 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.191131872 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.733186594 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.271472357 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.948474283 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.100846408 seconds)
    (217/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.299740826 seconds)
    (218/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.857229719 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.948543742 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.12624501 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.793074202 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.977119544 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.203193679 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.948863039 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.960690932 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.949111438 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.23374553 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.214179042 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.952504563 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.580132441 seconds)
    (231/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.112429739 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.964354902 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.285113248 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.95159728 seconds)
    (235/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.193333288 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.774880237 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.95252205 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.411071458 seconds)
    (239/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.189584746 seconds)
    (240/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.69598497 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.353280298 seconds)
    (242/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.032182586 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.081938387 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.195067226 seconds)
    (245/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.261326161 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.267534597 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.053229948 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25482342 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.28610361 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.035541002 seconds)
    (251/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.322347525 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.140981861 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.022107386 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950033591 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.307435314 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.464874524 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229189286 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.968202661 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.007208024 seconds)
    (260/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.861740174 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.95226322 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.592381816 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.341202104 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.952955365 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.012032125 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.511073539 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.955280066 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.32878813 seconds)
    (269/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.334215449 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.951524086 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.24017941 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.132794705 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.205396561 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.951073018 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.994168465 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.118666639 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.426431965 seconds)
    (278/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.099509524 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.95453609 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.239134375 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.423325391 seconds)
    (282/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.980151571 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.948264928 seconds)
    (284/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.182421241 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.258975015 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.973166167 seconds)
    (287/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.158508252 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.353486099 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.954027763 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.068819402 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.747237705 seconds)
    (292/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.085736661 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.789704484 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.203675032 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.204412015 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.957119358 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.229545723 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.989886301 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.02941146 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.949895991 seconds)
    (301/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 3.229447755 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.089328091 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.204123661 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.990630835 seconds)
    (305/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.950881875 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.32540585 seconds)
    (307/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.246224935 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.173900537 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.014414895 seconds)
  done (took 1028.430144385 seconds)
done (took 1030.345810996 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.976985057 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980480563 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.954074858 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.977334336 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.07231867 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.009799799 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.96760546 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.959376723 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.004623775 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.00418203 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.957233776 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.00671742 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.960806741 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.960070191 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.955505324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.980944357 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262549303 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.998903756 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.979357719 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.968107572 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.978888429 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.958636741 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.007511559 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.008734846 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.960624772 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.962852623 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.965126525 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.980258787 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.0739471 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.964220255 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.960889413 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.972372891 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.264461866 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.988934986 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.953326463 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.981314961 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.97479166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.968261793 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.96018607 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.99450594 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.357085227 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.004585111 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.962802035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.957522521 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.957367914 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.963819302 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.963124396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.965378279 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.982885946 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.982480314 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351180616 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.023808338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.968045129 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.959777199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.972306603 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.964503775 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.9637458 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.983160747 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.981318585 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982435652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.253875906 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.000233623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.962020322 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.981370354 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.972406795 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.384966507 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.002845117 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.965630762 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356265329 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.012366756 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.386323112 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.017894958 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.961490093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.978635921 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.997548901 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.266250608 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.991924356 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.957756474 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.972803343 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.962398231 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.972474697 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.984834494 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.963795455 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.960196212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984905097 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.015696885 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.974015562 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.96591154 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.972575063 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.984767185 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.973258028 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.979770326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.964834324 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.959090233 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.97293643 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.965114887 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.968345371 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.967556831 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.964711391 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.973589357 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.35679108 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.031675047 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.958337239 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.958057435 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.960422018 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.980407582 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.357175465 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.011146373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.982976362 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.010375162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.963518641 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256416516 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.003501329 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.987727332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.974312498 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.963954328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.959641684 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.256735017 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.389085635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.027333336 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.96171025 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.964916892 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.991337763 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.964792546 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.959426913 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.271043672 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.998389466 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.987951386 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.089793588 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.976275725 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.998870669 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.96540403 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.967946532 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.018905371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.987803708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.998676418 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.965441689 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.986965037 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.985085794 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958987475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.978256837 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.975145637 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.962339578 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.970053958 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.960904383 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.020805363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.987860353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.987044149 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.984573854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.090293827 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.961492438 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.259177072 seconds)
done (took 308.330308893 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.043624929 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.960702609 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.052365175 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.960280079 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.049145684 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.034091786 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.962206204 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.961117375 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.96047559 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.463163927 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.96218198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.96782006 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.960542836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.961600142 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.030547275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.963120496 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.961573731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.506773837 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.966979258 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.041168567 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.962241312 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.961144303 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.961524784 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.473131007 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.963057862 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.959298639 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.062558226 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.962356431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.415394959 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.962157777 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.961130252 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.419821391 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.063112929 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.989132683 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.971089062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.96830091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.052363941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.973031568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.029694314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.028728742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.055890783 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.995898335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.962257158 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.960880581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.964064193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.963949769 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.963988177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.995744909 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.964070152 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.968408202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.413382891 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.969100744 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.971291031 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.964694379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.963629982 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.993048155 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.964130054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.964936458 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.042577629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.964890626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.032791629 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.471404938 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.571584426 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.964336749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.964100515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.964109832 seconds)
  done (took 191.773619307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.029338625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.039132059 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.03008946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.968760653 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.013568731 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.031598248 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.968727278 seconds)
  done (took 15.972029013 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.9720708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.965454943 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.013679124 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.014619288 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.964976992 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.144471918 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.975900451 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.970786909 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.993302879 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.965148482 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.601676724 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.01402006 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.972801639 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.964924544 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.977182202 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.022571795 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.968590253 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965774595 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.081712776 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.114282408 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.971067942 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.974021361 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.992059083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.976856184 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.965964982 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.966404382 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.966031479 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.973055314 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.966570869 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.965508962 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.966620564 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.017448109 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.968205155 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.966244292 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.966779362 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.967503116 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.967240837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.96686291 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.966102635 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.967182376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.966668474 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.967107446 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.966837278 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.96699525 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.967244269 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.989346132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.967413025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.967202431 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.967519635 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.968560693 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.994542259 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.968976377 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.969242113 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.972686001 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.010836917 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972648378 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969433144 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.968260461 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.968328938 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.969297957 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.967657813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.11708567 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.016221357 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.967042902 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.017033207 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.122766837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9683659 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.967215035 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.967593296 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.057699667 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.96790314 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.016556731 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.968853311 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.082369498 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.969654225 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.1489225 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.992109758 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.972178483 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.971505689 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.96858149 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.975718708 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.968057624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.971321277 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.974845405 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.975148593 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.968948165 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.968973389 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.970080991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.975725962 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.96907702 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.01926886 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.970136319 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.97011383 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.110321221 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.969416241 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.085449389 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.996262779 seconds)
  done (took 215.520605985 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.97794686 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.97752105 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.972232822 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.985194959 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.97078637 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.970334515 seconds)
  done (took 13.750419596 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.974253985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.975232169 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.972151712 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.973758613 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.971688271 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.970616094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.970909885 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.971159844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.974317429 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.970899281 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.971748579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.970737754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.970748559 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.970195543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.970229772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.970709532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.970770729 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.970607261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.970895169 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.971527777 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.176708046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.969811832 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.970390063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.973547094 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.978178871 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.969925518 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.984353397 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.971405338 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.97109792 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.979491202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.975923658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.973033879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.973663586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.978398759 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.975005393 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.974272386 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.976159396 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971154962 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.973349309 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.975035999 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.974276185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.976141389 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.973614961 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.975137449 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.975149228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.979369814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.976421388 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.98480085 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.97215817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.972487697 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.973267579 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.972729447 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.973803372 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.973230461 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.977948815 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.98012841 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.977289035 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.973188352 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.973668995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.9768854 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.977361903 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.974044968 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974637699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.97768507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.980950008 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.972741686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.974933878 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.977058783 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974087766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.973322303 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.974943707 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.973299622 seconds)
  done (took 145.239193498 seconds)
done (took 584.160926945 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.549726503 seconds)
  done (took 9.449237735 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.186584264 seconds)
  done (took 9.19219984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.47849293 seconds)
  done (took 10.396124102 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.997334565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.014930608 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.987884366 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.974217999 seconds)
  done (took 29.895952825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.237802269 seconds)
  done (took 9.139359716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.988343418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.974572166 seconds)
  done (took 16.228466978 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.996377587 seconds)
  done (took 8.899711137 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.472700765 seconds)
  done (took 9.411215631 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.989270314 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.991962758 seconds)
  done (took 15.909106783 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.981215855 seconds)
  done (took 8.886677624 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.305748762 seconds)
  done (took 10.274484232 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.003504968 seconds)
  done (took 8.980137456 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.98013552 seconds)
  done (took 8.885342298 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.03608042 seconds)
  done (took 8.942112378 seconds)
done (took 166.389736489 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.982918012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.977340872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.980463023 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.977225077 seconds)
  done (took 29.823758108 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.016041738 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.01478357 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.023746917 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.017501693 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.00558314 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.004954615 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.014942438 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.016613454 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.00535304 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.013712856 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.016226607 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.015936328 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.016152247 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.024935234 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.024926763 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.012551955 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.014719708 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.019278183 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.00696124 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.025140713 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.014263203 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.016612397 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.982795017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.981092197 seconds)
  done (took 50.210698227 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.172290263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.052844468 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.138294441 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.033214541 seconds)
  done (took 10.303791631 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.983288355 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.0455475 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.035196939 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.029030431 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.031983751 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.086026514 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.035556891 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.124814347 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.11035633 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.109737467 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.989379589 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.00247525 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.006840834 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.029987234 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.084664129 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.981784338 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.981883368 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.102549779 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.04497762 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.170113771 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.983452914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.038297301 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.033437705 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.035419797 seconds)
  done (took 50.984810102 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.984388449 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.991921408 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.992230242 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.984346644 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.98492189 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.984611296 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.990355041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.988009728 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.005271713 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.986282682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.98377961 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.984064954 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.990201672 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.984525893 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.984669769 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.996385554 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.998440739 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.98680102 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.988211339 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.993455781 seconds)
  done (took 41.692547362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.984633951 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.829779243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.328045815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.233275257 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.981218117 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.984693335 seconds)
  done (took 32.253088013 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.997750314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.990835348 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.984167244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.041716326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.124811287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.992296507 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.985054761 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.995184859 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030210651 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.051638076 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.007339899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.013177448 seconds)
  done (took 26.125500933 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.985371227 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.99032014 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.988362256 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.001436196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.996435948 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.993565766 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.993482143 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.985852659 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.999629481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.004961023 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.993654583 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.997254902 seconds)
  done (took 45.843386027 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.69301708 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059915876 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984787968 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.860717763 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418846824 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532490644 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.880418484 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.668694327 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.525411929 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.912481339 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188445235 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.988497059 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072274967 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.987227972 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258089784 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.306979582 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182583723 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229290629 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830299 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.992124263 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.191879892 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194167788 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.274278705 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986820178 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989474762 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.00005843 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.728855472 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.59818692 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090274354 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.482663705 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195989358 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944906167 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035535734 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.989499254 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.001107943 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989959941 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99235257 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25854915 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.998704191 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185811862 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057619855 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235972014 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992334118 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402382928 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.692351373 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.237811789 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.100121757 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986682482 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99075033 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987916066 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.91669121 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072170599 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.990305376 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994173921 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.690410574 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.988406884 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063553506 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.990283067 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191439767 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.798217147 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682270304 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.99029753 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992510987 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.545412263 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.968855284 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.175579344 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589456426 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439217378 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402242911 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.089572819 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.992678177 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991305511 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368640947 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923583919 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.645361023 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096821579 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1310763 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.009677404 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631883893 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294739528 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.369248644 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.558273768 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910887103 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25994347 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844987704 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94310632 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207977896 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.821771248 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.917012136 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196171005 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018967629 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997172911 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.25588165 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597022086 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179806184 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.005095402 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429217749 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010772101 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998295785 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993594722 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20792983 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.594988179 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993980711 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116828036 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009508091 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075441111 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920236098 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.005846443 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.994524712 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.876798451 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994227382 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854019165 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.119827822 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.999319027 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996389487 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.936206726 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997226018 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.977578257 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110534073 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948320188 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232506166 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.291121861 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.669362721 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910357041 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.207235744 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.338396955 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229751982 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997670551 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209128196 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526140227 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.35650888 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051412931 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281007115 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.057393899 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28426598 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417998278 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076455799 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676925243 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.602954623 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.213103209 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008578758 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.999382877 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998573069 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003746603 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934035985 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.631925705 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.362314184 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.167096008 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.206987443 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.368220573 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.063500228 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.863921488 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3789634 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130489597 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989165274 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642301027 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.493774082 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.781917953 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.087602877 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226036734 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285552617 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.034608249 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009111093 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085222833 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010972677 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.009003304 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.347421329 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368378455 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.996015703 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.99786031 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948349433 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002394342 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.997051893 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54633594 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965567769 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.001116308 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.006426915 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.869251246 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054396622 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997484331 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998685092 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.51934783 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504757818 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.000726509 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.66580454 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.003299092 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141036407 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267437125 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.347593991 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136684353 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.69947201 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.369492907 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.118488172 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.701039522 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92612712 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.999065901 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.938962541 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002125183 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.003474414 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005163498 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.193125479 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281851392 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302193945 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.456969468 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070572315 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205990537 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.633811323 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.03369216 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.003350364 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005747077 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.003015009 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998649393 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.521415462 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.546986273 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004012634 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108848903 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004721348 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126914644 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.010373416 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.929205254 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.001525022 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001391876 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451454775 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.093992973 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.947301722 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296056356 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.809503145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20091463 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049258455 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.010224521 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007124001 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.632093592 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.120377509 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928957544 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443706681 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114725842 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.627753477 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757798013 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.565913598 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301712375 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316155427 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.32953772 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.067994428 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213786522 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082781239 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061137805 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086917097 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938420228 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.927893133 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.651025531 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335357949 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291796611 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012463255 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216899389 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672596016 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307908789 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029205612 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850155399 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385371914 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97784265 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016324608 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.343703293 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18081414 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086111611 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001712056 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.942731903 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327559139 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038240592 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.702045559 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014644006 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353336905 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477156733 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230199151 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.359426875 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222825658 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.006878113 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348839374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270985047 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114446388 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005895672 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.977096315 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.221139655 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581765267 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.847118512 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007393704 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.14770099 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371558169 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.984106361 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.003010143 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146680126 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335095396 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00071713 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.355385848 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373243109 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.10319478 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05015188 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226207864 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.728260184 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380181345 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.549157636 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.481379571 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.013953013 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.929953595 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.703572374 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.204908222 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.008499702 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967269752 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210326722 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230688616 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689656568 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22262741 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247411069 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.013747189 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273810548 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075436998 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.100995449 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316998288 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.460647188 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.244335536 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229206171 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535635927 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222509999 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443132322 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.165138879 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.006842035 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208903771 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220482865 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219820671 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.381338884 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179328323 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.715510517 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.008617671 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.210614846 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299257922 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065919652 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.381386018 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196000258 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.100202398 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012969203 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071025604 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009551392 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013997224 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.387398082 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.542732039 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.019146678 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0805018 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.027393912 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.582313001 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.011872005 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.008854467 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276482533 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368066824 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339060641 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988080568 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.004588589 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003595604 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132324677 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.930292908 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010187875 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275027085 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.007641513 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397846883 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22977447 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020539773 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.332125434 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.410679306 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.710147657 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114976947 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009985547 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21657054 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299321109 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.249213821 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19262637 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277986917 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335492713 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.034171679 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.393372847 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261069478 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008614532 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.878986021 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00850608 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126429572 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.210237733 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282755273 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.513753361 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646845458 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356116741 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.857217654 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.009274278 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.647856942 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361851764 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280660221 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.060086879 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071653107 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012648253 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442712792 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.80249476 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140218152 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.848537872 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93527065 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.017169968 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279885617 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.248356819 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.716547955 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.009955536 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286691817 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311466252 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282459966 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.06149171 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.895124632 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224325733 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011081584 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.021067795 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263478734 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217480388 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248096352 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012406527 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011553696 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.815960099 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934844394 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.010277805 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05223157 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235523819 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026902028 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.523772808 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.710631115 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283441954 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052701173 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013275263 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285298805 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.543506161 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.554037628 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01939719 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215708243 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896813085 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384003583 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.011000927 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441267012 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.38735956 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.010745783 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.518156522 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.328920355 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279795485 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957132374 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017227594 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223931463 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.947541455 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.012036559 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994776427 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434248207 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315390859 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.745332425 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566591216 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.012477721 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.014616669 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431529028 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117648485 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435843302 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.103295757 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027659436 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.531552713 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.757631436 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.295559273 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.253247802 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.571686017 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.727306268 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.011226592 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.012344601 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.012774397 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930868439 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199389997 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.203081667 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285185493 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039877204 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422613244 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118205607 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.423061783 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147285816 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144854062 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124333911 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.539685231 seconds)
  done (took 1725.102248946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02403274 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.109804028 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.068039462 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.033580683 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.037145601 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.043046594 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038795298 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038819638 seconds)
  done (took 58.333286243 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.014174169 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.190493384 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.02124901 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.01587055 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.021550789 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.016820157 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.204146648 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.026838379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.02064714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.021380635 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.017371343 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.015732532 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.306226495 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.034316844 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.018447761 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.018257821 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.020582891 seconds)
  done (took 76.939681398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.017313606 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.187173916 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.059425364 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.020980163 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.73275049 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.020585987 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.955170732 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.026651329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.021492201 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.064677769 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.318740042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.070059294 seconds)
  done (took 91.437191892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.031977872 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.019428671 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.019387276 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.021081046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.020528561 seconds)
  done (took 12.062742118 seconds)
done (took 2253.031733061 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.251381779 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.077365457 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117508472 seconds)
  done (took 6.138355592 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.167772009 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.212160345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.323795959 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.084695223 seconds)
  done (took 10.738007049 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.322522007 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.38628201 seconds)
  done (took 6.651992284 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.336416579 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.052522692 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.395354846 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.021544692 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.024811152 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.023269735 seconds)
  done (took 23.019531178 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.020066006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.019898378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.01887939 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.020773538 seconds)
  done (took 10.024277589 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.019697477 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.814971971 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.021220896 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.030860597 seconds)
  done (took 21.830697589 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167182786 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.136068594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162962587 seconds)
  done (took 8.410802043 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.241041609 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.868902643 seconds)
  done (took 7.054177412 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.171953689 seconds)
  done (took 4.116132227 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.049393181 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.290616245 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.530798611 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.084384653 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.645350545 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.288370641 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.368344746 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.252500381 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.461784283 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.505311646 seconds)
  done (took 27.421412918 seconds)
done (took 141.384818198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.600509151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.063403378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.240331237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.392713393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.266673128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.226804989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.236112284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.389261477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.091012171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.065381927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.398968224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.261330887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.179649387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.052639853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.190022134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.05138984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.253779893 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.417716247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.071432367 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.314313748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.250843245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.028310527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.226185373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.04760115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.258743248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.179263372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.571869904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.05729421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.203386893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.588896311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.186506314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.451343242 seconds)
  done (took 173.761742892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.024257566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.024866534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024586144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.027215907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.471019794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.025053545 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024604163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.026330785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.498958577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.491902546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.026082053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.453698258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028648233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.024820707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.024872571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025350384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.713905679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.026221966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.024968861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.025318294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.024676536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.293915222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.027293921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.311947973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.645129643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.026884048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.02579479 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.029833813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.025975354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.025019548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.027356644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.026307809 seconds)
  done (took 214.455288408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.024549535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027296961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.028745339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.027440287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.028994046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.027212152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.028592789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.025496956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.803443845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.786888095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.027363284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.02843347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.0299014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.02623398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.028822918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.026483558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.030108734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.029649728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.028432552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.02873541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.028504459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.631117363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.031682938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.630513429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.029269645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0301578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.027622292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.028602651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.028871018 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.029903041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.028937936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.029153244 seconds)
  done (took 225.598348122 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.273411813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.028702701 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.030416029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.948679887 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.031301856 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.029224815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.010335053 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.278277476 seconds)
  done (took 20.589081998 seconds)
done (took 636.357944466 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.390585647 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22664875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.213942108 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.054128896 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.28041954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.09788695 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.048693136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.114805367 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.88204784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.125389508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.707478673 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.074553845 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.801304288 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.081418893 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.173553461 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.106366107 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.638161134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.747690545 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.194521677 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.098682125 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.234956962 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.990242028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.132446704 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.914234661 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726052916 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.036963779 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.120523244 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.642337753 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.063383359 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.215159284 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.734666372 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.391463034 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.065350357 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.054288322 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.104573224 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.083753739 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307321972 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.064980453 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.177649943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.794555678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.104268138 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.79097006 seconds)
  done (took 109.761728567 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.039978625 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.034756321 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.035242466 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.039124227 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.044460705 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.035489728 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.036236849 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.040305736 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.036404457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.036596951 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.037242127 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.045774389 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.038625748 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.047011678 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.036781692 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.037019899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.036591378 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.048019717 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.037104019 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.037253878 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.037291042 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.038248311 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.038449099 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.038571952 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.03697149 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.036380415 seconds)
  done (took 54.977284404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.032523664 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.202810218 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.277062575 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053472342 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.033859987 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.036110066 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.051960978 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.037940497 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.035710475 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.035428304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.123951306 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.040128878 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053080293 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.276299171 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.050983097 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.032935755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.033782208 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.035575238 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.211896629 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.049730569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.053119592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.038028402 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.052286373 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.046711187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.036105722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034694187 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.037157436 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.466045534 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.04384476 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.124571193 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.095596055 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.059792417 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.41981488 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.288295584 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.089378157 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.043318374 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.033558897 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.129276306 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.041288054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.035323838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.052791084 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.041225474 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.282210286 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.566443057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.049231051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.033949703 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.478798335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.140949377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.076090646 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046261517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.284302638 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.052928937 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.03779269 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.037459196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.072640673 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043758948 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.036069632 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.348266288 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.049249586 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.054513484 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.040931237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.038481112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.216771138 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.04473052 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.207052172 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.045539116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.043522092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.037900642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.282046466 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054548846 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.587077148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.050403762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.03708598 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.127816623 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.212678406 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.504713013 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.048316668 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.220600634 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.43609115 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.06104206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.047785958 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.455600394 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.066062465 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.045772841 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.040434469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.03894839 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.03762391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.083028067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.054046799 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.48909701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.57945005 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.367089814 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.064136362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.054902807 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.03911507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.34788055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.047677165 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.040571089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.273574242 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.590830701 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.053170441 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.046184342 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.562226247 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.056026075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.057440645 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.047358777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.290978881 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.0561077 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.082546682 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.039812448 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.045641193 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.042478632 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.058628413 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.04644631 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.040041547 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.550707078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.14550086 seconds)
  done (took 251.898765432 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.039794933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.039969482 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.038156833 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.040611619 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.038877745 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.039231663 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.038514633 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.037178458 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.03921393 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.037961654 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.037781427 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.040274832 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.040115658 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.049707803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.047187922 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.041044484 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.64384884 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.038782909 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.040251999 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.038623426 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.688059441 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.042868316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.039959992 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.039043348 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.040509193 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.039375397 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.044141329 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.045109882 seconds)
  done (took 172.352473307 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.043144691 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151980232 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.058813781 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.066275932 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.047117724 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.040207025 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.137944249 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.058346395 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.044969197 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.041167798 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.041201631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.101021535 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.051938212 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.137665814 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.071460988 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.147121424 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.144702307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.047631009 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.040842037 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.042383428 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.071414612 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.050141278 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.101259573 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.164743112 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.062389729 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.153643899 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.063401319 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.041986514 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.040829223 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.153469655 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.061264408 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.102352333 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.070845876 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.060183984 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15919538 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.160478495 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.146455363 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.146316862 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.047721624 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.043370788 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.043355851 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.045277902 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.155065507 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.063741306 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.044544237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.157253137 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.062657381 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.044437147 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.043452046 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.043877713 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.057005572 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.061853149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.107415696 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.173942264 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.081306711 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.068238933 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.141430547 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.172172287 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.044529215 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.140045033 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.050846771 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.15768652 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.06627767 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.04466485 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.045162959 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.048748052 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.072809078 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.149820705 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.14813236 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.051878942 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.140780737 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.079573939 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.050501977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.043501904 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.044471968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.157563242 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.162866216 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.080526168 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.079536687 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.074909436 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.053967905 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.044859865 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.046909817 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.059864887 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.050029067 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.156575403 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.162866551 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.050662709 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.04511977 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.047015655 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.047482607 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.070645398 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.165431202 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.082773471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.150445043 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.110409357 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.120280604 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.061715646 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.061162469 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.050267883 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.107477741 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.062248469 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.057227402 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.348988203 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.105034119 seconds)
  done (took 221.208042442 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.443144521 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.093419574 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.101552303 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.368295118 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.435280467 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.173045295 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.091016628 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.094520934 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.112506745 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.275287133 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.168657268 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110066081 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.079899678 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.068150641 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.091241473 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.114944751 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.099770822 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.43088523 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.311348946 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.274911255 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.084052754 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364651936 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.412051461 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.67299017 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.143139037 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.496389723 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676342488 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.228092345 seconds)
  done (took 66.991281604 seconds)
done (took 879.141882986 seconds)
SAVING RESULT...
DONE!
