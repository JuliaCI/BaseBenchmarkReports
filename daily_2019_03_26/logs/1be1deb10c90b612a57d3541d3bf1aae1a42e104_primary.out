cset: moving following pidspec: 694
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.28908572 seconds)
loading group "string"... done (took 0.569748978 seconds)
loading group "linalg"... done (took 7.092052646 seconds)
loading group "parallel"... done (took 0.165274532 seconds)
loading group "find"... done (took 1.149160659 seconds)
loading group "tuple"... done (took 2.005435756 seconds)
loading group "dates"... done (took 1.264241368 seconds)
loading group "micro"... done (took 0.235974416 seconds)
loading group "io"... done (took 0.958306217 seconds)
loading group "scalar"... done (took 39.791177307 seconds)
loading group "sparse"... done (took 12.903106109 seconds)
loading group "broadcast"... done (took 1.022835397 seconds)
loading group "union"... done (took 13.668327385 seconds)
loading group "simd"... done (took 4.530249552 seconds)
loading group "random"... done (took 9.177610833 seconds)
loading group "problem"... done (took 1.952773069 seconds)
loading group "array"... done (took 21.666544862 seconds)
loading group "misc"... done (took 1.965688497 seconds)
loading group "sort"... done (took 3.317523702 seconds)
loading group "collection"... done (took 18.43806433 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534369906 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139831177 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115044762 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13715077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181677046 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130059606 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139125724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084010108 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.89083365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157587559 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136017009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.472613705 seconds)
done (took 4.85473985 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.194560057 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084523746 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095234152 seconds)
  done (took 0.859041733 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066463665 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124085976 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079138132 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066786736 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065904478 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080041896 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066847128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066314268 seconds)
  done (took 1.238213866 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072529695 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067283724 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082686103 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068025282 seconds)
  done (took 0.977814204 seconds)
done (took 4.031379473 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897485992 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236713906 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187504723 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446428026 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150592397 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188786016 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65353042 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330196628 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208075754 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098798909 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102782394 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.374448981 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105197567 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657158552 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074655401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103279727 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158041531 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444119819 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080180795 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081748818 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101706099 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13966761 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099183244 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075928913 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167463673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071043098 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15045656 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095807243 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06753637 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242042739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188719453 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677187827 seconds)
  done (took 10.379114596 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095259123 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115821892 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06823023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137913893 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114374829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06980061 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.06985265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083187994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091448592 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156671123 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112319908 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104312731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080080669 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068707973 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099840494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211395202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108102874 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084629296 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085936943 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074611403 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121893518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081558607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09220958 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075913775 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151070877 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192628287 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108417909 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109682671 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067760831 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078888075 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129864242 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138648178 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067528433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080492422 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138253961 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108792324 seconds)
  done (took 4.473231529 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.050016549 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.170599582 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090832554 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150520561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084041007 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124304423 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065697472 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098840512 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243115159 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.084495489 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.142913596 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467874263 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110479969 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099659604 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066761408 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083286041 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066588454 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504626335 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143047052 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119674681 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082904344 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088937167 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069195373 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357623178 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080977224 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065774915 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066895255 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074583613 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143650449 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067885777 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.204038798 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087704145 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085403419 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100677925 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190253652 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065527206 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091255904 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122587522 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080383064 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065411269 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166425573 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072228757 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082048949 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086981002 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1183702 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117158827 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067487418 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08094517 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178126148 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06648571 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09704024 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.904257101 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165741184 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088792172 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065663867 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28245704 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083529875 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082879442 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063925794 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265734035 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152225493 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06817818 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.088479596 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06564155 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066421625 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080097711 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065907845 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368896404 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08272202 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07617934 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.755636768 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069250745 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080792561 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072932325 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071003499 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100985174 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065295099 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079805179 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067310664 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064453285 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081823589 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068077212 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101313734 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205053071 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065817718 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082841634 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06454634 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099424954 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096154077 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083639672 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065414771 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114933847 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069056525 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066471827 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117711933 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066576869 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102500213 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083469809 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114179152 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081020455 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138505664 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067658016 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11219243 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07113897 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113043068 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093376581 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072068501 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151659338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063797271 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080896555 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066162442 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06402538 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08329071 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067648796 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096829963 seconds)
  done (took 20.806151516 seconds)
done (took 37.394775379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298394227 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090160922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090024757 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072349599 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089031191 seconds)
  done (took 1.402002904 seconds)
done (took 2.1354442 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144456197 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099906042 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078790304 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094836581 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063070072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115510639 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112223554 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.07946861 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113961947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062950888 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109998294 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06350727 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077434739 seconds)
  done (took 1.978565944 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080920107 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082780534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08431052 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079781166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077462888 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080569242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077795646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102215683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078363285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08552565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063650343 seconds)
  done (took 1.622354541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079742372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082138305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083810492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078599058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077016075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079927284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079829899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101282535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080347701 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089104549 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065500613 seconds)
  done (took 1.628694308 seconds)
done (took 5.954654516 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077004488 seconds)
  done (took 0.800346804 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700336664 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.355606429 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081390263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130123484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.230376321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.149731252 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.425792378 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108017514 seconds)
  done (took 10.086729102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113184603 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0867548 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069656253 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086003799 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070800447 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083523934 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068283288 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068428126 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084727201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071834434 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083332438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071674384 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085373978 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068303008 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067552609 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082610715 seconds)
  done (took 2.056858078 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.102336484 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.101488318 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089001424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074535433 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087259831 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071522527 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090546539 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074379029 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085166607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071722711 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089498273 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073598681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086136233 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065463844 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088131369 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075479147 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084718118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074747513 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089763826 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074028579 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088949176 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064265528 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086162124 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074349685 seconds)
  done (took 2.801248709 seconds)
done (took 16.474869673 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.128850844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074536636 seconds)
  done (took 0.937866138 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080106432 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096162486 seconds)
  done (took 0.919873822 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080787853 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079230573 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087618148 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091118946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065636699 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079692965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100709402 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065673 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065514374 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080362818 seconds)
  done (took 1.539526029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067402029 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091417227 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06879567 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095389633 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072793207 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079342613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070902596 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082444606 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076097213 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076860729 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069795139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096304888 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069952123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097086131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071423976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081818933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085097991 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066246217 seconds)
  done (took 2.163772013 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064527348 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065907165 seconds)
  done (took 0.874518049 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065154371 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062574839 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079879806 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065851877 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077196437 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06232608 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077468896 seconds)
  done (took 1.233902164 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390326361 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1078057 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256031794 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070419206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101036347 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271053356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081506112 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069765146 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086218472 seconds)
  done (took 2.215925003 seconds)
done (took 10.625980714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078429 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084815638 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108672473 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415683914 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103853824 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065227317 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.141388065 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.201093177 seconds)
done (took 1.943397628 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123190716 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591695357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.394711212 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209000109 seconds)
  done (took 1.941519593 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366690061 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088870661 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074678772 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066574408 seconds)
  done (took 1.345509575 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06500708 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068671422 seconds)
  done (took 0.883000946 seconds)
done (took 5.040521438 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065759532 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111123034 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065137089 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063289306 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082380843 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063146679 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063867196 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082609818 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06609391 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064958482 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08135742 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066273298 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080144568 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062910629 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063337655 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080907157 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065521813 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063425746 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077961604 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063442885 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06298189 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080510288 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063423356 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078137509 seconds)
  done (took 2.501680986 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084261693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081914269 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071136316 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086425829 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069480359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086008801 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073409279 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065965047 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086036812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067892452 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085120449 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06963958 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083265665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070253345 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082518401 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069581083 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085732721 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065643884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067772877 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084480583 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070856705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080570619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069748346 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085918812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069715898 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084339622 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068777054 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081997877 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071340999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084573326 seconds)
  done (took 3.052984857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069599159 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063713554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07966513 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069905588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063079617 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080587037 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063130106 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079462827 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06424118 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063329649 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080122007 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063043058 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063298958 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079885401 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064372734 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082249298 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080035001 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063893318 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078828955 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06442972 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06601426 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079211369 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06365188 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078641027 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063231091 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063390169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078469148 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063721703 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064265714 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07957902 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066130589 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066301282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078774575 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069674493 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08223131 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062814791 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067417447 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078359236 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064290846 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063223287 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077868175 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063703059 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07828228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069754877 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06346999 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080805918 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063941189 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064608748 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079263602 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066792935 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078580199 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063138757 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065443874 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079995762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068035336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062946354 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079512515 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063589419 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079597721 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063313028 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063213372 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078474644 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065932315 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064562707 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093245866 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070588957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078536327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064868727 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065122352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081401843 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064809898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092230793 seconds)
  done (took 5.864729249 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11480901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089805221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081058881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065560267 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078139315 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063668631 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067208358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079844682 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066231758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084007938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064296292 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065672638 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080829482 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078673086 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079536566 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06523177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085174806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061375254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064124306 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082215963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063959132 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081893587 seconds)
  done (took 2.422191664 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18042267 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086099501 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107228533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088571366 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067324526 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088411795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069092267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084639745 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069507581 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082843168 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067830737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084452319 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066786279 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083825525 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067819651 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084132336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069464551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083372352 seconds)
  done (took 2.292658746 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076837015 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065635116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10458453 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065121305 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082013681 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068366312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086397953 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073802576 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083567815 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06631872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089751049 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068612153 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.193451022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06580299 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069162428 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081281132 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068416541 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08108504 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074557149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085588117 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070584115 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089062259 seconds)
  done (took 2.571935392 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08031476 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067602371 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098987645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083769403 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061721507 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064989326 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087978628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066022627 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087191146 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068424087 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066338727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081548407 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0705322 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081659147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070514382 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081194627 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067841624 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06606291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083615326 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062793431 seconds)
  done (took 2.262393931 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085921808 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082598136 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066765736 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090813922 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0676259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083584661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075276869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082357657 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06677693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106397543 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067917706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082322209 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074581937 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087140231 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067387517 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090011105 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075505323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090595252 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066431323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082619508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106277703 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067028456 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090133453 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067347099 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067252743 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082768324 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067709358 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08681386 seconds)
  done (took 2.996047711 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065953117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066171199 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079596213 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063759037 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063233425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079447652 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063573357 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06449943 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081792555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063699386 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065351942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081538575 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066015621 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081834189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065655246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065600105 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08144966 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063571666 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063946168 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078777596 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065955231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065380829 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081382551 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063672532 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078966694 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065319476 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063697767 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079043682 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065864988 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0639892 seconds)
  done (took 2.865451587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075209217 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089378807 seconds)
  done (took 0.935195651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063020582 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079965423 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079576187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06968887 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085507719 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06715196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089622626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070241918 seconds)
  done (took 1.373140957 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080706427 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07700067 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083482282 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076738798 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092417679 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083200505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153916818 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08278703 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072366831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08091899 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079386385 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064884632 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088128302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066596237 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087964867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072055 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064484159 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087611026 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068489273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080771947 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067731863 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092942328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068005347 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062874366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083454519 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0745796 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093388028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067494229 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086047029 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07296093 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087465155 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060379055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06590455 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082341749 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064984025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091957247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08128301 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085086233 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075090773 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066676096 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091703142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061284089 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086858449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072659057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091364178 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066869642 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082841507 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061604915 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064634114 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084081009 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062268086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066482942 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077013431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073384695 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085822074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076705772 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081886507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067446997 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069043865 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086056269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073008288 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084328147 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06920734 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066387535 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088724735 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07116536 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091177409 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062439361 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06074236 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080385485 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076208355 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105210495 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072588814 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083170979 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067360544 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079981386 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069151065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067056506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087272361 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073142633 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082366093 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072037811 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089213409 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066945581 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068536891 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090243315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064426261 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084527252 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064457838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098889611 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066130353 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080442465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064058428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076589517 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08553148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066674015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080375042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072892106 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060423587 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082870092 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067500371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083073961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076990706 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087488455 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07212132 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09041603 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074235449 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065593918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08543774 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064192646 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083235028 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065801545 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072681635 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077414485 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06944651 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083193358 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066677013 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090607514 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064271246 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066285878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08919664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072231045 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081413291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062883077 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068832657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081975969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069497609 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089706373 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065139782 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078299486 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06135163 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069023151 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082020849 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069373158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086396924 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069051939 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060776057 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080806865 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070575563 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091233425 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066710547 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082861488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072374111 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067133402 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081179433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072678937 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084900667 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065992623 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087534733 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067718459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062283262 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08500164 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069407868 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081100035 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069962947 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069172773 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085264517 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067412256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08117119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071039561 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083489536 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064844181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06641143 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08190862 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076803549 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08446304 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061630344 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063718423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089434425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064987127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082010004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064951932 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068871554 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083394165 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065018324 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081756676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068158546 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092511006 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070010951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067013512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087787368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077774643 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08202126 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069952411 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082069009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067586955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066474612 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091361738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071716588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087138253 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068710081 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079440012 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071600863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072667012 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081235006 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064540802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081303315 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069937831 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070617343 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086939578 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066863116 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080626015 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067379816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085271271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068872015 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065974905 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081702037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071155359 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081609945 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07247268 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083247815 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076139352 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085731346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061341473 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069364042 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081084773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073542217 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078388125 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064756486 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065771434 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083149036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065225326 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06873047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076977832 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07315055 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089762857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066779122 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065378325 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08329314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073186689 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083927677 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070745752 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085856425 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071849907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091961687 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065574679 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069762683 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092903708 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067523775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076992966 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070991252 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064983245 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08214359 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066321531 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080618588 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069142875 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090246484 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073215942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061005373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0849054 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06521984 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065124321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078343707 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070726137 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086303796 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067891212 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088673844 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067336376 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06688356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08619256 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066686708 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083278441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067535258 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068368695 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08441643 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069030271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082070604 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069644522 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065819797 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080833868 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068172961 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083931386 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066729487 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07164775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08323322 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066891726 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085202415 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067938581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083951211 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066564649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065908219 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086126006 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06739036 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066331337 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085497816 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062147846 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089911551 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066503815 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089618291 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067348433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063505842 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087954987 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068975004 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087761146 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067818465 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083816284 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067419277 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066134458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085766347 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072961375 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081284948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076932129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090572766 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066862009 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069010405 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083768834 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068278463 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064794145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0840718 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066933244 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083444456 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067165099 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086899642 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069349864 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067444106 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084801378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068094917 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082266352 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067467944 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06129944 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082293994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066249299 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065915588 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092751836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066586601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083166171 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065269506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084405945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065647134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063374354 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090645409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074298339 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083231541 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073263156 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082574609 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068321771 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092837926 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064238124 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065519804 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081145875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064919173 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090148586 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067356051 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075327292 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083864263 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066826739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080136984 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067905902 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064956454 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078097456 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065192936 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086695431 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06644358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066013103 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083429848 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069725179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08392625 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076374825 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065834367 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084452118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066968664 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081030271 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065863997 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065605526 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086197187 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067654317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081333853 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06460019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06604508 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084279316 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068162349 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083333826 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068267209 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072723758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082979161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069841915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086145124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062109532 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06905399 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083010199 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066379233 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08220366 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070692859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069587215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084680217 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075332038 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083228662 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067354782 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083055636 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064709814 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065724131 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082909401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066885602 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082202944 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067509034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074002236 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08107853 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069699399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083109564 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067353081 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072655477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083903583 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069710189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089400977 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066938653 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084699405 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075025022 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086278504 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069881881 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067031514 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085201341 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072262791 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082715085 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072336797 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067021316 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08536818 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068455907 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081666896 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066517086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066268083 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082438783 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073034953 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084487292 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066487281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065358262 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0815467 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068243459 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086071319 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074236849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085822315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069696857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062705752 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080487669 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067781924 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064522827 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084964175 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070363427 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089003995 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069321505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084066475 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065954332 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074979404 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089192214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070508319 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081415031 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069931174 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066861092 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08661261 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067603281 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083214616 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068384646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069838208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085288756 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066230423 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090621325 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070462941 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083868879 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06844435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066905363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083921648 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062858749 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08485414 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068038079 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071139627 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085628867 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067216186 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093359136 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065374282 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066524816 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086915515 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065874537 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087581236 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062773475 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084093481 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067516163 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067179299 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078926592 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066932489 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063808412 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085515901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065646908 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078550619 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07709679 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092438638 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070116958 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065647967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082080237 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062913625 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078661096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066014336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067672449 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085610243 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076901078 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082850978 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066444187 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06160762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083705739 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069658233 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086197569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064525033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061834597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082625827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069880336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088462391 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065105391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065615411 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087348966 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069598954 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081748989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06963759 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062905644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087428823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078756919 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083887416 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067801624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089428859 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074290372 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084052557 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06229247 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067043792 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086429835 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06758494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084710927 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067819996 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098894495 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069923531 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066083363 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083045656 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069501614 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083012761 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074507839 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067587359 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08402071 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071587069 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085189175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074661451 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08610908 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074530711 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086398891 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069812285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064981178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083876924 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064873497 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064657875 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085868166 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067806322 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088300629 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073538958 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083356036 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076934465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092671949 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068945226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06375816 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083738171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066615262 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079848176 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068472538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064530864 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082374858 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065158968 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083035614 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068186619 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071984406 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085433039 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067688894 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083618196 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062043517 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06855819 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086404538 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069040271 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063200321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084166883 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06762464 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088312006 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070230374 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081502485 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069096371 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068127261 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084612762 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063416452 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089696614 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066204299 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06936983 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083437334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067312408 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084541513 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070114932 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07085434 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085303272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06849217 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092390193 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068692547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081340627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064654061 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071138121 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0817189 seconds)
  done (took 45.703336248 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10500405 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081504319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062328992 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079426424 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074744563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081511456 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06237557 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062721453 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080309534 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066006678 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079343845 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062363007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088584341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083755692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091790011 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065628821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07956267 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063401798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079214188 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064039525 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088566428 seconds)
  done (took 2.412669089 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.084892084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09979384 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076310713 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097720501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088780972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077455287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094286464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077160726 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097501536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072638954 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097506309 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09456085 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074056244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.089996959 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073836175 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092301074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079530688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089657299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094440691 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077103646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091733785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076910897 seconds)
  done (took 2.707756866 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066529597 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065634449 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085185035 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062018817 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065369116 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079202121 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069863322 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081786241 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069453646 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064949358 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082910678 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065499254 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084855979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.072858052 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066150063 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081608496 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128915262 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070221052 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065522096 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085767484 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061709443 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085949726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062674847 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061776367 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083217918 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069242465 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084421575 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065135162 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065109534 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082523767 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066804651 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081414861 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067224215 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066479177 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082984464 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065444817 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065433995 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083970863 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061806754 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081679437 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066855796 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062361755 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083623283 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067980061 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063743916 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081531157 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068122698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083126964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061846593 seconds)
  done (took 4.416001496 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082602876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137543894 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086402121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121051623 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080022417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091127534 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07049835 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120023219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063362967 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083683436 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10071169 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080379449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083964686 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071079328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090136329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066390317 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084858874 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064874965 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087362698 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06605829 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087153325 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072800141 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098371271 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078670075 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086923598 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066028878 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082678434 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070266895 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096550268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070907664 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087701042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071963815 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098427756 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089071073 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065660499 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06802913 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100087159 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08389999 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068190767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063373323 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086040037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069601507 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090391122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099287474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066438059 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070786356 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084547204 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063173648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.095965961 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067277439 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091821935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097832518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07060175 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083747981 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0706866 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097885971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066797561 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081484454 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068982194 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095638597 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064430836 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086583085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079786285 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085073964 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073308249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.096971844 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070863918 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087631739 seconds)
  done (took 6.537423357 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074806 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089921367 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080233061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098572223 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090830548 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073736607 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090308219 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072239485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089784561 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077054608 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090024137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11149677 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068592827 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092869411 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073579809 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090233191 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072578443 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091036064 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071944612 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091491323 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089882526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080802855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090189877 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081119631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119637044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086259316 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073198613 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09007873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080581975 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0912004 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102045532 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073601872 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090111606 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080361087 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10205336 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09018052 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066514177 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09009379 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073186683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089594802 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068592015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097751332 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072092228 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087335536 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072743507 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090266252 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098494608 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084535354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093232156 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095156855 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073069907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098291633 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072417352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090681041 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09807211 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105964595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098300685 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09871574 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073942121 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098219823 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097855536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087670121 seconds)
  done (took 6.205887345 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086876429 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093670833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077235097 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081119216 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064633992 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088553112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065024544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082787077 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075382206 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092014621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077391517 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088407054 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073266702 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094910952 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087863061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073673867 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087716691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070188759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09272818 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070383077 seconds)
  done (took 2.446964209 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075270451 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101610271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067628683 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090079914 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070208843 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07144516 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087322995 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069300669 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085450418 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070091191 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094551217 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077359513 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085160551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073706625 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094350843 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072878549 seconds)
  done (took 2.111503411 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077469658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094629074 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08141741 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085584758 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065392725 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081772076 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06744614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062339733 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081699153 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081356199 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086051029 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069022743 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084905612 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065864391 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063295627 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088902933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063629562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082483488 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066649507 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099611745 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077798376 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083208217 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068053323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067461255 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086318435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071823465 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085270546 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064378081 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083361369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067625966 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085372882 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074850345 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081794168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066388027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065755875 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082132132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066808938 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085241337 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070376787 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066117225 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08364244 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066376734 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084941734 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068641399 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081490106 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067768656 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062775051 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090972337 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064823649 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085213533 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067114494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086776089 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068090736 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075863682 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089008003 seconds)
  done (took 5.019785951 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080064568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069565981 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081790501 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065118471 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087622322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068976544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069823514 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087736056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068634608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082703835 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069007978 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087236661 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069049473 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07007156 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086887954 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07080288 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081424092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069476611 seconds)
  done (took 2.193615199 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073124465 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066579331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092577909 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06802636 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084893305 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069800196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062340282 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084543826 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065758749 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084963179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067405022 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069011744 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084029176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070309561 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084600572 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067459372 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069246976 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083867427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067435854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081100503 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070136035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065687785 seconds)
  done (took 2.463482492 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072274006 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093241209 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16221781 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106602371 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082469214 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099141759 seconds)
  done (took 1.446924653 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090325978 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097465931 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067807102 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106493842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075613905 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086908098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069184642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086778957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077118314 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099118986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068507996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094971315 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094633015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079802026 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092581341 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074509353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087028398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068329998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085535782 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085387292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088092488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094233615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069209872 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086292074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069414895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095179009 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076211988 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099979366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085628563 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077119852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092743628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068447984 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095258792 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100102967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070888788 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094976399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068777631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104268289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074498179 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094762895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070514284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093389472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095105396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074158924 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094342268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069602039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09152009 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067660396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087719286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110068283 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073953073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094450281 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07402126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095048964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094373459 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111590123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08134891 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095043089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074513376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10026408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094674962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073310263 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094785594 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099957304 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07505811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095260639 seconds)
  done (took 6.510709991 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081634293 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10525474 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069889808 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100529295 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09562349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068821229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086984272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069051908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086854674 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068371199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127214898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069117914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095058123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094830304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069199429 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08635296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069142509 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094491713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068976655 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110128217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086318517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077234602 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095471558 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094985601 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081379377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092521117 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068865171 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086817399 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068463004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086988577 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074018544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087312371 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094160581 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069245018 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095103282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069925802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086500224 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073681028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086078947 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074313317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095064506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104488355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069419456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087317255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081569251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087600454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068540312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087284932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069322126 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086702348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08191053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100803402 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099559562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075522562 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087787179 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068596654 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088211734 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069379871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088809208 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092619882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077070468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086406806 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111805501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069282162 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086824701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076777043 seconds)
  done (took 6.403330598 seconds)
done (took 126.465399041 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204882589 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183826986 seconds)
  done (took 1.221792841 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069174307 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11626232 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07858555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128507062 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08645659 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100260602 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117659531 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079903786 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066367792 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086375606 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067906161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087077182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13145571 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066667653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08592413 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069141372 seconds)
  done (took 2.277223346 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101309344 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194385417 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108447429 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066038525 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098077977 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078263496 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084720602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077595084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090937131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066688258 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077510304 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094942976 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065574875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094515054 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071946887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09673715 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065423331 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096970388 seconds)
  done (took 2.471197659 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105026019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141772447 seconds)
  done (took 1.087471101 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199192744 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122219188 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200565231 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.411753406 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.202497721 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27737212 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172833381 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169560346 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154024151 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168964403 seconds)
  done (took 2.915907599 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098428926 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168801099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308639296 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136369024 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086654591 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113734125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136870502 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.107986104 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081653605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100162655 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08020812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096537521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.116308625 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075511785 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093163851 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077876857 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120294002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074540717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095691368 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076356303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117319729 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067471706 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093432865 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074534047 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095978445 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078812533 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084679326 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067614757 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074045939 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094422968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078036196 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111331744 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09696993 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12868492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10029351 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128971469 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077632077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090705001 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07599689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091665191 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077377374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095148132 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.084764816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095830413 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067795709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096570728 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067295511 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066202371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098819334 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07633111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098301959 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097088423 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127541965 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.078262404 seconds)
  done (took 6.141383403 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.737810649 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131639261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071968455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.796159986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110514476 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082424211 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705061481 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116104095 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204844884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757080775 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086867094 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098339758 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196774425 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212035926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921469801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.261478602 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.621563894 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103920442 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128845817 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.129410328 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137106654 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151055348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144398916 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.398261102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09579259 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071231138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133660596 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09697278 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137299549 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102672925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07385749 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15081791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223130254 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.173087234 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074847068 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091210507 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070863178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14422876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236609617 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185173113 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135685801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088610884 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071072369 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137033963 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126532824 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08908995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13934453 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.149780288 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146467041 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093054456 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075990939 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138579611 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.15700908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.13873803 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080268229 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29018043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276907314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070877055 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118980871 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102810438 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213184825 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103202475 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.172840018 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134529872 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183792826 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069367759 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748830048 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14466356 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068485894 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096115399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118773385 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073512034 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.15664601 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.122196902 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366780654 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138786055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093928134 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069644745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209845113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083429342 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09159847 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137450036 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075360642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120350696 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140899457 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162003793 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.143450307 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210954147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13987151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134544876 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095296229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122329177 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074510411 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186831518 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187108246 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13662117 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184325437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.15768766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137904547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144494429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075242579 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166975878 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096314471 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099851679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135388107 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.184974324 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120818517 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08264711 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093094553 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137957112 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12301462 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084366786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.157336027 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.145499232 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.425346553 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.143118042 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087918918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085331623 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135724757 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136798365 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096663145 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227741916 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099092649 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163600738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119265238 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069274681 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119308423 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138052362 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076895979 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119969431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156840064 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077766189 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209880583 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186508803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076704591 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211783398 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15953738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075462515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144895038 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118740746 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142847575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097858229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136896876 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073570629 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756105075 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14017376 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119741746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09315331 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141906993 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091971115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080835879 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104038843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066962065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745098305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104841627 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079842194 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102865219 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074694754 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120009652 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134145692 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093541775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137949615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197129486 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076623964 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118291109 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102208852 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136603335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075810527 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103248027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082555871 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104244827 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121624413 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072420806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104317356 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143967286 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.137353698 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187928358 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537096028 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091834368 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08234157 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196938529 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068986092 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257504393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13316746 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193291538 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137823456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099433863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.258937031 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.139420334 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162997686 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106506146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149865866 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067450383 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.155223721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.138613025 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070593027 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094756832 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.13733802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143370915 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139864205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930659607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069703994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198474572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088875171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.147004897 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074564263 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098137439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262738152 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070797941 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14260047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159376134 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07301458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102567223 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672520422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082475396 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.157456858 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075280272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.189885408 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139482232 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134105403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134815917 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096207005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137693285 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182472976 seconds)
  done (took 39.756888637 seconds)
done (took 56.714315679 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269437963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188452235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240540571 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145173755 seconds)
  done (took 1.781000509 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142617136 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104231183 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11607888 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085519032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102806228 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086007613 seconds)
  done (took 1.502482296 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40340846 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264708894 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230309749 seconds)
  done (took 1.762113791 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294439017 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226809664 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.442301351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293605658 seconds)
  done (took 2.225024833 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188440582 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112896122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066313906 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10628103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156535697 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251508449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127389291 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18617712 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079240323 seconds)
  done (took 2.183588056 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19531245 seconds)
done (took 10.517132793 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108529942 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.189371691 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.202142171 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10379448 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.306484223 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.274690449 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099370459 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10471858 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.267818709 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.292716561 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078458186 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117357302 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076492211 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146865423 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095833757 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098829917 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212532278 seconds)
    (18/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144462756 seconds)
    (19/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103952953 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072369164 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.275242135 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.225409283 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.20049039 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.143481363 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.233511387 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071448784 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132968729 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05398772 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.27651781 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121183963 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.14619587 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089438033 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073811585 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.185058078 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088353772 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.159332262 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052047016 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074192655 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227750104 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073236189 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07408249 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102117896 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073999025 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176655325 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107851782 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092740742 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.298266494 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07468043 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.22625297 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169892505 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076009696 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070746624 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1271931 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067486106 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198472297 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086744686 seconds)
    (57/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071287033 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11317042 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080191625 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.062795251 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.251124103 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114444357 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.093149107 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097294582 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066329485 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11657751 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083802747 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118153415 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.111021091 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122040108 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064477741 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071591472 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097620784 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065867128 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112176558 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.067863763 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072992627 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072416325 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083109799 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09855962 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077397069 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052243151 seconds)
    (83/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11077427 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053155381 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09511489 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052463256 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163091003 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.22009054 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076150861 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098902796 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.236883161 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.136579382 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061874965 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141373187 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08825812 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100831384 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122352278 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.225402513 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0984677 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095698541 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.241821457 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099958351 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176730189 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.16203006 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152214055 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193423217 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073761542 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.24256157 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065663822 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.248302341 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111359567 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.063121766 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.162988602 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134898553 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192554958 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061311962 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083957662 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075231552 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080462741 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190557835 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088102949 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053652454 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090498838 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089032211 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.155245472 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07594647 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051401867 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094630707 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067262811 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08712839 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072288298 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069162097 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160340719 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072440235 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129706957 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080289682 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168878573 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112815922 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110402695 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062325346 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157172448 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073278267 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076375522 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098211375 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052873071 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147988087 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074535006 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074339316 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075255491 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093073776 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066713076 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074202566 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.292033482 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06708005 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072169228 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.235664668 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157362274 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076317674 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115807923 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086683685 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147856997 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088004492 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075061937 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052542666 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.119720759 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067248742 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.247123204 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120194125 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067430899 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066419363 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.242677584 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086645949 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096839978 seconds)
    (174/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07321605 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096702069 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067443279 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086027604 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052235117 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053963755 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065156492 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102834444 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.248187457 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073555408 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.236021952 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067171823 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138037878 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.247763746 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075489063 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161820874 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066761897 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 0.14900867 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068062863 seconds)
    (193/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067450837 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089005479 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.239737047 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065364694 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072709056 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073166633 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053268077 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089199279 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093152959 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073230173 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065507559 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.073099618 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.148310197 seconds)
    (206/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.074782495 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.138161873 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075156688 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052966553 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071662 seconds)
    (211/309) benchmarking ("sort", Float64, false)...
    done (took 0.147716 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075007807 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095643867 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05430314 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052080499 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.240969126 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089071485 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231183268 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110049216 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063085882 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087672502 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052333576 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074834431 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137056332 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072242273 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051327437 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096495995 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052986236 seconds)
    (229/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061769911 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.072891983 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073500461 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052920799 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086233075 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074678992 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052262777 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088946725 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052446785 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1200841 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052418841 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052549366 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161348265 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05243086 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088426902 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068198836 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062626804 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053786645 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085677374 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073626761 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116452242 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09184506 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087513614 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07360435 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065697751 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073572489 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090421288 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061171177 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075535121 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072784103 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069573412 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096020305 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077777688 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111688632 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129574244 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074930405 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065890539 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052775665 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095833727 seconds)
    (268/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104727152 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076368088 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068757608 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068089737 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095640276 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082387311 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067420799 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.083431789 seconds)
    (276/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064128434 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062554822 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09673161 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21609069 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088828147 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065578353 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086045667 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065061733 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188612526 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074947886 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089156048 seconds)
    (287/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118459197 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052268286 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110772426 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07025474 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09263866 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099115134 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11684703 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074406402 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054531101 seconds)
    (296/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.075801906 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069820762 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070846035 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112740517 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08304232 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092716266 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072942815 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052430849 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114378289 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067595072 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090800226 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053494701 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170784759 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066600517 seconds)
  done (took 34.729167639 seconds)
done (took 35.601671976 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080930898 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114460539 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075410693 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114354097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081182333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100590471 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073818069 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101492633 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081147285 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10363903 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079671961 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056005012 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09761218 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076194014 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096907236 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09277846 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101460062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074016091 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074145156 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087289288 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07459546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088379674 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068450288 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055498446 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099817706 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073616138 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094452778 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075659722 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066410327 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087892639 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070404499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073136646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088300891 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080143707 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094022683 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074539643 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075379781 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099054132 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068795739 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087314749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074533672 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066157666 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094724797 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074275046 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093797891 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071987042 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074595732 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101396807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093158633 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090687419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074919004 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099005114 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077766672 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07281527 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091985743 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075150821 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09314353 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093985702 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097458524 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068829191 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074585563 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097355172 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072003074 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095985128 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074445981 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076787563 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09881341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072542777 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098457737 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072133505 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066385399 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095653746 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070400273 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087757782 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076904095 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077581956 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0870076 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073576453 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072642825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093871454 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066100618 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090021419 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068655379 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073203889 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089795479 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056260578 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070823668 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094172938 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066265593 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074419859 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094032914 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073885666 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08958793 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077350437 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066029546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094368946 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066763835 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066194347 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089914987 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071253583 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087319421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068858738 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075611036 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089074443 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073153934 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.102356034 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066203424 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073044952 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087419525 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06583297 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104407123 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07632545 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067107464 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090177635 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065949452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073977568 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088134319 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066715797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065781482 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088380529 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072739021 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087446897 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068777533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074336195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10131314 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069006911 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069783448 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089919586 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066850117 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093406175 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067261522 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067483589 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089978868 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063894117 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069165942 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089108966 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07478839 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068883916 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097184272 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069011316 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09635266 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071338703 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072769937 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094016709 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066187677 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059221737 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090591582 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069064807 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067728997 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088328697 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068816923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087611715 seconds)
done (took 13.195594023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066718466 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169076004 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125781211 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097210884 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109815262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067783317 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099789818 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126010783 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068155758 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12665425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088985879 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107697981 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115041239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088275813 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067662529 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070519134 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09052088 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089199697 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125578364 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108703495 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139937669 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066270931 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119661438 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091081034 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111470793 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126286179 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067844318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071871369 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092242628 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093473073 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108360725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070852431 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067192006 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122546548 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116576686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085169232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08869503 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084416102 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088749363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066972935 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113387422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100029421 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104042094 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.104001166 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071071897 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06948568 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090188139 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08662171 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113128313 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10287632 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088627368 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132237824 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091420758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082363797 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065231716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110023753 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105081706 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069086878 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067809457 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091214197 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067067733 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070276918 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110871623 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114384678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070896678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105196824 seconds)
  done (took 7.203547256 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084218372 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116120113 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085004099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106584463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066931282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067868163 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089129447 seconds)
  done (took 1.542977498 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067665367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089926686 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112401561 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089957369 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109654044 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088635138 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099668017 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068462598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106526142 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068387881 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088537403 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128258009 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090907653 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074273573 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091291362 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089930376 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091884015 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089585048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070901564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113475144 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07010915 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109610051 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069403892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068606071 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104660113 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068336674 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138347564 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07296074 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091509093 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071348287 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066283564 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138913573 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104339956 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078251354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067293903 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105432483 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083550725 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088353543 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085099633 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095223504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08231747 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06857859 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091339969 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066507127 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071995594 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101453122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069006373 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090477116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070640935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109968319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068190077 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082918826 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090669771 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071494343 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068612582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095622805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078748989 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091365703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0884153 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068956727 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107197021 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084421947 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105015184 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084347441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092324867 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082580602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104777696 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070636237 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069575138 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093875292 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084526862 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088656512 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06978156 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078800592 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092196746 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091626298 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113918884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069494868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10080769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068233065 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067758581 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090985029 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091919398 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094038917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068564992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071967435 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093667137 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066019344 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089166026 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071153692 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06644857 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091625975 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071172931 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068985713 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09311566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08507829 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091264053 seconds)
  done (took 9.291294224 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068510963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068944055 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092248471 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068507104 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069272786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091634232 seconds)
  done (took 1.398357908 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097900565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091932072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082746631 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095052683 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107124844 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105548009 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083211487 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105406383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086276151 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103049199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083031782 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106105723 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089325385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096065092 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083221804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095796317 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083868029 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100156304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079687258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097142896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088390874 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096769493 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073921729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107929118 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070935683 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07350787 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100386451 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08019288 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102957229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082682984 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096747597 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071767797 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095226355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083143886 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10596594 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072686219 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096379654 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072389664 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100053163 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072128004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106501879 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074142088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.101338896 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07244904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10565024 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073146662 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072010088 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09917053 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082700467 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094880645 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071981595 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09545915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071416344 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094650452 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072853968 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10566487 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072778626 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105546436 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074159112 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072304045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093868384 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072349034 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105013596 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071883342 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103505096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072333013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095115364 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074345929 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096670238 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073395285 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09454639 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071019369 seconds)
  done (took 7.302148691 seconds)
done (took 27.657420442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64704115 seconds)
  done (took 1.586343547 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.772554958 seconds)
  done (took 1.715719177 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.905517531 seconds)
  done (took 15.848960966 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.609915372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.762370974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805632736 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157166418 seconds)
  done (took 3.275660036 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.873937233 seconds)
  done (took 1.831939677 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235073132 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245954429 seconds)
  done (took 1.424507249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720047189 seconds)
  done (took 1.674537349 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.269728011 seconds)
  done (took 2.214885004 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324798734 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18146693 seconds)
  done (took 1.460631847 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.511823375 seconds)
  done (took 1.464185884 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.547011195 seconds)
  done (took 7.504395731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227058799 seconds)
  done (took 1.192206623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.265801115 seconds)
  done (took 1.221877895 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.15279904 seconds)
  done (took 4.107940099 seconds)
done (took 47.472871156 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078325076 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081593432 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104751186 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079380669 seconds)
  done (took 1.294459627 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078751267 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074212668 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101288744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073482092 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100993453 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074521256 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098825235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078213543 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073092047 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098538604 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074183683 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09666987 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076545102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098783734 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071643979 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076241139 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100602981 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07331776 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099445302 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073941059 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07139958 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099169758 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076543626 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096025641 seconds)
  done (took 2.999659508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077949473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073664853 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097840227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073381379 seconds)
  done (took 1.281942123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077496682 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116158701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090040119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100726852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093180368 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11078087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070602931 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070235254 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095833442 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077539881 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092162658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0991866 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11163514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078334576 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102266087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067320656 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069517903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111376194 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078066645 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101186375 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071216169 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100629919 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069313698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090100377 seconds)
  done (took 3.110234371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078355794 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10362601 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102613946 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089455957 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116029462 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066154908 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100008731 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091608172 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150122536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066266267 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09476044 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066797598 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096675734 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066625748 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077436802 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133467111 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111726904 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093014774 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097802486 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.089939218 seconds)
  done (took 2.860504793 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075799039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07101588 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090057337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069508813 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07667101 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096890961 seconds)
  done (took 1.445455182 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068955458 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068652355 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091076421 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067286643 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0721715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091381929 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066843189 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067347615 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091044475 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067934819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06753524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09013257 seconds)
  done (took 1.874586249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.418655323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068471691 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092508407 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066635838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072225957 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091142693 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080732237 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068893672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115490022 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067339879 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091468305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069562531 seconds)
  done (took 2.271635952 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256563699 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077930713 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321405228 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167374361 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137676648 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154253413 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103803566 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139880999 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195269566 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137893255 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199144924 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218992603 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13290976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167246981 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114584642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131675185 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182553026 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219009564 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129540457 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19923808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204735522 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155976628 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178151518 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127742268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133796588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144981941 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072727752 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105893298 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228673661 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160577491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199714903 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137582389 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119990278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205978201 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218077833 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194462946 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162584755 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084893645 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157605436 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163827172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253546422 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114343504 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218011286 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109111581 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106501078 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171535861 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145693924 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146362772 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135565312 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115138429 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171951768 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235288016 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188919629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087741982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136499535 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137850663 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143289659 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127292711 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241258604 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191742993 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181818406 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072140734 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122410177 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185210622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158593308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140986012 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176587196 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094037515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19322929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18560695 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142079159 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197650251 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.157472992 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113612054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145777792 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170872557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152863188 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228128315 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152316339 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073987629 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173265549 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101303078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106974803 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168175451 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07728542 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231293781 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124523865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113100622 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137337515 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135153374 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135263588 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216041551 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175774217 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12961476 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066414402 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129761416 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148166856 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198079911 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088260338 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134340334 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144718823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104323337 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164950095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101614311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152106312 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079300824 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15008519 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16005064 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101112795 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151798553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127247809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103153081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187893468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191994502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115117086 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108018494 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199323788 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153975257 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12972145 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199493509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188802245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127403283 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12607513 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174175745 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238133638 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115535107 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220739601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104489492 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108771301 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114178557 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154277869 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139479858 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14823651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0834103 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152426363 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225169045 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099894992 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096111815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165573528 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106207318 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107122972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138800913 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100211333 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120709219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126429933 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132215258 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166907318 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154170727 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134831643 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150959043 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124842693 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217656079 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114308643 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106005905 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129493802 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070265448 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187332123 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190250706 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10576709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223497383 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154745382 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130826002 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146735439 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084589471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168109942 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105698325 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071509189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195809816 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138531383 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111416186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208693349 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13011147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154247689 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150844381 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15910526 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157351094 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185854864 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108294402 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112954665 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138880587 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152489261 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099107127 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095493509 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10875527 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130747017 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120135022 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084506502 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16997583 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179183444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098584646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139814939 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124169091 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176980009 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10344489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157499419 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147244388 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121714329 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183752875 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212899625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163541344 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127015054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200459357 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072899997 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07464448 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115959628 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155267137 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109821526 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084448804 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142847259 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205255385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15721243 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162667058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137463692 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149889352 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212429975 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072441523 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143723126 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177698824 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153121211 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155358715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114796487 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100518203 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199606342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130397744 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243882565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14373764 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152542318 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181436397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134758387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106465331 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104978798 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192236014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131943051 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17999442 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126888922 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114916477 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137607242 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082313341 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130113569 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153531101 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146112178 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187997079 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144378922 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161184051 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102659676 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142032962 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153249157 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149141352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065974111 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148195771 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219479013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121206311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145431858 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184955976 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106067496 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151381709 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236814501 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17422141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11129142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135362972 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149837528 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157432553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147026089 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168998847 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136327927 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163577341 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138347532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111914312 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088924971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124787687 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13429349 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122646619 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139026546 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145538295 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095802753 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186290976 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139346773 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138349165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14597623 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099897582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118683624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098313354 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233841992 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150256246 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233024978 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127759915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205005968 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198856668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102179356 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080064587 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106914777 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16929986 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110999156 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161541325 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097449805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131298932 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154123923 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197747461 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096193226 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095628078 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137634606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162344351 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138212054 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126401706 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106515305 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221235293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13070236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080365869 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153834642 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132525565 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130377992 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235416149 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063313095 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124377263 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077553027 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107910307 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158503628 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213511883 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084215067 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154055098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147731297 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148735608 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158584663 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127000263 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123758033 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115197614 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203399494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156917342 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116221282 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14058732 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15746021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215228663 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107297109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122581872 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228792565 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184632267 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220112396 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115011483 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143964711 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144565038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140439834 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170364854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11050394 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224879835 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083386519 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191322013 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130688563 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092946261 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182388608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098355881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11596518 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178626355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147729917 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109236792 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080642291 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165466371 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16691471 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10348882 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101385818 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168028808 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09975414 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166424889 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22662643 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082443938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133996751 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123657545 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082992882 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132375947 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130300157 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113815198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121247812 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225607567 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117362972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207611168 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171161268 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142195637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192442598 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101709497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663357935 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106110851 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185604715 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145262724 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261483239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100087833 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148671975 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138886607 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149626413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196494502 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132280834 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177757262 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186774922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149435048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080579959 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131039499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13783133 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116501335 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134577708 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14353041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142322486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10228351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173281423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155787118 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083052907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123555901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215245626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146284971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173216737 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169537417 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112251119 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146142186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195861011 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082326539 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150352306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212126698 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134731647 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125896656 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083200568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132455732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230620704 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07434268 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218069703 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153246138 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137891244 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141815565 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147142787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18824023 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133202509 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153907249 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096951035 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16459921 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118445467 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111405959 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103640296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107596154 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13788062 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127221024 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129026025 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14213442 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185022401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072580448 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121723877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130663783 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171061328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236242701 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116561116 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083976126 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145058201 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138540692 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142687978 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177518781 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083040663 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109533495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08359634 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139260009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138775389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142688165 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104781527 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138367873 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223904308 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11172053 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226722471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122115259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137458547 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070822362 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106515343 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122761995 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096643916 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130324648 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124315139 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229784033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099708569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117174692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119728684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075499802 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109360094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158918891 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137970926 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150290917 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123170732 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064495501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13440047 seconds)
  done (took 70.889906125 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132829904 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104964298 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.119414191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174759837 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147134008 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238513776 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182187267 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223605096 seconds)
  done (took 2.368111094 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071175079 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118321409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103300621 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115301088 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091382944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069853877 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293252477 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109758929 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066974283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114691183 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117577963 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092764685 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459477629 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067025245 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093786677 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085273136 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06827342 seconds)
  done (took 3.174701821 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.42815032 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630693422 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453044205 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073801813 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.877215286 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090545314 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.392555749 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162729845 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071963833 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428990114 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.745400985 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133091079 seconds)
  done (took 17.530751973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074806377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070403942 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110229417 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084438851 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098945108 seconds)
  done (took 1.488042385 seconds)
done (took 113.541421557 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079874336 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357812069 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053909413 seconds)
  done (took 1.487205835 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084359758 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085228599 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111296524 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084744505 seconds)
  done (took 1.416997224 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07544101 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076656743 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112056312 seconds)
  done (took 1.310852565 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281389966 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16583295 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089433426 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083842834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078769627 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104683503 seconds)
  done (took 1.318245849 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073074124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07595993 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099213484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077233424 seconds)
  done (took 1.368697201 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077222742 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053414615 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055756258 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082342562 seconds)
  done (took 1.319910533 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089970049 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105793671 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082082547 seconds)
  done (took 1.323110577 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108525786 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111996913 seconds)
  done (took 1.270109043 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082237719 seconds)
  done (took 1.125001326 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09214408 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139763388 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155241594 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136176151 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165297938 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137360854 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112801169 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087784671 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104411028 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115009003 seconds)
  done (took 2.295133437 seconds)
done (took 15.889304436 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078158705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.39097471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360962267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116582506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669995851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356413919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042502758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118428337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107259697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093718747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084236756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648941918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993227906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322872141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982377146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322933446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676101823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068635315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067814484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094475649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002271368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094163962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06902148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068435947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676798085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372151847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094363968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323395267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067824862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09649562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355664573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094763158 seconds)
  done (took 15.950634323 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071199875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143419186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07422318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08412947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097079927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07003712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098804384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070100709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147193623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0691968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110602558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068766833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07234192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096303508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087494097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095379983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069792086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068801301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095299284 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069734297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113321406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068999511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068943213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095643326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068942391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106335781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070601164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06888449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095014742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071179889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09771816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069857925 seconds)
  done (took 3.806413662 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115604962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1525085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074734245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129303137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113471098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097683264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168741354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09375178 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149676672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069678336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111922784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068820303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127397453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069628382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113500453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069649745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06925443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095910592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069220109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095240403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087913647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068395318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095421141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06903214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094979661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08297258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069200261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097620892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068887816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096471529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073223548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069147064 seconds)
  done (took 4.088839253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073188319 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075902633 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109619758 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084657423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097038025 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073696144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073064929 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096426432 seconds)
  done (took 1.745440491 seconds)
done (took 26.634362106 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079340094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070560206 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100307506 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081193853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099501473 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079397334 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068513785 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101471574 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076440794 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073544735 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102803981 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067824937 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098495625 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069078121 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074504131 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094260392 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080945986 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098751343 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080648896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.106328677 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070365236 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075651587 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100759579 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08046614 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105910089 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080313661 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080478398 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10000701 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069346731 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09650735 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077569654 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111211569 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069954759 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079850306 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095120639 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068658198 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068230733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095366416 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080676993 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10187797 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071616864 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101930834 seconds)
  done (took 4.636013052 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090023796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092281562 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113014478 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063302043 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095256634 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.062744249 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08936181 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087610652 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062772363 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115432309 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057247588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059029276 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.086370836 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055333885 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058978205 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057697345 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087831244 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057545158 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058137983 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085465858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061739107 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055169656 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060962433 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.086799472 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057791412 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062352238 seconds)
  done (took 2.983294987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076704274 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08249364 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114294581 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129220877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133304695 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07637747 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10648082 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087056052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111837236 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068745012 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071655029 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123966023 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08710202 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102080872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069061585 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109539653 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083308587 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069873485 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101356549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088433709 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111217718 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079403024 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088915091 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107210335 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067723047 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096991225 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072422639 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081154223 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100496507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077883937 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099083072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072565706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096740732 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080655501 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.107006436 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070672077 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088244786 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1052569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077068142 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.095181208 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072372706 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069318387 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115155392 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112401962 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094369631 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07597407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075502455 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104710211 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067873931 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112158653 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077795699 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067197692 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097899956 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067912508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094470033 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082834382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069814855 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097399796 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077681567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097874739 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080811135 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071848511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111170493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068179883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101660383 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068415999 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06946088 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093671518 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090063361 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095474692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107825708 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069390285 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096267805 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076909609 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101988418 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075302967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0688424 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110724425 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078036977 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098031844 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077794749 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098159498 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07154587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086498537 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097237975 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070624518 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0697346 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101678251 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071544607 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096239349 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082293707 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068357808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098329749 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085368404 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094595107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070392162 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073775309 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099945513 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068394973 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107593941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074208449 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068860676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104325437 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068723422 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097338122 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078285458 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073017977 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09392669 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073393071 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1010182 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069601644 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069883784 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098630384 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070446759 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104393568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074437817 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073336767 seconds)
  done (took 11.291250481 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190069136 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184399345 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071816683 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178331453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077377435 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107943193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178680938 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097965277 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096359119 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06969011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06963764 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133649249 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127078737 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110783611 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107643711 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068778639 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114464797 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107910992 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181455768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176077785 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115085114 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077191212 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071270961 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09765492 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071191809 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078842487 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113271118 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103462678 seconds)
  done (took 4.254232488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082124286 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.124523118 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075187396 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086331973 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118927168 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069083635 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100615569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070412165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107591326 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080739941 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096371955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074446945 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075687046 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104761955 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070132104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104221048 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077674247 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06993629 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098998744 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072920825 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.101571186 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080810301 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072557549 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.095424908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075045943 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094931089 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065293083 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113042725 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069618177 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114131493 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067808549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07472671 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105020242 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070085233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068493491 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.098354534 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071531424 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097615982 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070792273 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067214882 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094905226 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059272033 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067640913 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107841744 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075684105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087999429 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075748729 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074636722 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101835322 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067022418 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098965453 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07145502 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072291185 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102945268 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07439704 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074079468 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099303423 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067474656 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102226835 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07181012 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06590195 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095065803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074394209 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067546934 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104322813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073887558 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094207891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071747329 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072718175 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10162584 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071031136 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071279477 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093818472 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071063622 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100820621 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073307643 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072191479 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09456017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069504282 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068741214 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0835653 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068942476 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05522745 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099451806 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067667521 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066879083 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097447465 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077709745 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108403254 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070559575 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10116721 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069687185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06765816 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098933763 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063518167 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070754655 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110243827 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110373867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068998556 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06663015 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108471654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073957881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067791439 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084975355 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075402847 seconds)
  done (took 9.803037558 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.091699207 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093002044 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097566088 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082251619 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121956572 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091883122 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103219333 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075039055 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069704808 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112677767 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068614798 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103920729 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072865731 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077337238 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.120220303 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076893681 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098204239 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077614197 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076808087 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.131041954 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081948226 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110587194 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079491406 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097556707 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073958935 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080977177 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124343517 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078913205 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105682559 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083175212 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078896281 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123264728 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.083753838 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100790177 seconds)
  done (took 4.233647803 seconds)
done (took 38.255237208 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.150681641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.350569221 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.132583554 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.030170659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.162775037 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.175088592 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140867185 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.129939684 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.478565698 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.131065758 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.362623486 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.795201618 seconds)
done (took 59.121032731 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.209016443 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.2709393 seconds)
    (2/2) benchmarking "String"...
    done (took 1.40296191 seconds)
  done (took 3.752095663 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.527428677 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.096546215 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.415998605 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.130552483 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.146788068 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.57891388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.719548396 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.978794744 seconds)
  done (took 27.144414238 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.13257904 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.496329289 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.469543044 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.472975499 seconds)
  done (took 17.651502731 seconds)
done (took 58.362922059 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.120430123 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.144308159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.144624643 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.116572606 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.239587796 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.164981911 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.381381032 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.351340569 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.131714937 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.119228616 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.15130727 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.145768061 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.140398047 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.410113149 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.140991272 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.13548049 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.211575948 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.606093089 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.519051322 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.159446094 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.150267585 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.16799968 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.133194828 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.137128853 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.191850135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.136035636 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13269788 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.142848564 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.372723797 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.137302415 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224562304 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.595054252 seconds)
  done (took 189.13487362 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.13408234 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.2297688 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.297283138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.147861952 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.755568461 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.332535311 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.269448558 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.824385914 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.147159263 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.141060028 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447139881 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.133472833 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.510053832 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.192832492 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.142275401 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.230187288 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.45762249 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.476997845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.148847897 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.388421621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.156685118 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.577613224 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.50898604 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.377832773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.169847738 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.1393084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.142415849 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.17629497 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.324058801 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.389281539 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.146169198 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.163475362 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.700552061 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.99402403 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.1520527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.144348708 seconds)
  done (took 148.751049416 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.416623601 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.134296416 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.135102935 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13476593 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.163603605 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.135037389 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.666141984 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.666464713 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.634928057 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.391778669 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.136723294 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193609397 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.33828946 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.134162178 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22699451 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.14681657 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.135658873 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.150559595 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.160369111 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136685013 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.134849042 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.665223368 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.150454617 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.303916857 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143383785 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.13481029 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163515164 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.527993535 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.135032304 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164424591 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.451323782 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.178422206 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134786043 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.41284611 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.92437567 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.136019976 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243167824 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.137451412 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164862373 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.134530128 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.402115322 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.13706817 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.136598395 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.138556314 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.701247664 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.135856517 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.668296623 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.139500265 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.016166042 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.136506418 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136494752 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.34936541 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.56728872 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.136604635 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.136924068 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.139769964 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.137083688 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137361673 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.167588832 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.389754329 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.234688645 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.137942103 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.139432206 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.165951719 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.137695244 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.136876784 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136746562 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.269904319 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.195772933 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.243683259 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.66473319 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.670354863 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.139617189 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229045409 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253505074 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.136407153 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.135951845 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136181349 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136145414 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.135933852 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.242258936 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.135567836 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.519932788 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140534194 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.135427353 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19325762 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.227647657 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.135456167 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43393849 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.138804183 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.135105864 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.806683036 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226677498 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.134343131 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.134978862 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134371864 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.513875414 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659156581 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.298192418 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.136811007 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.355384984 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136559619 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.519879462 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.629194115 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.690744504 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.134308195 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237848742 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.136983488 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.135840804 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.133936733 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.162086679 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.135516611 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.192216021 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.134942427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.52871686 seconds)
  done (took 336.441974209 seconds)
done (took 676.822209527 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.766164015 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.752651433 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.85972129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.75156226 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.735506956 seconds)
  done (took 9.945876255 seconds)
done (took 11.025490848 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.315486367 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.314475072 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192319502 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.314345243 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162890994 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.329123967 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.290080742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.157602804 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.230904003 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.206847118 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.232785581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.181903261 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160306187 seconds)
  done (took 17.169949647 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456610866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.437018764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.20340514 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444405024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180895228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441089848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338276076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338095145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325217336 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.15053195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149600521 seconds)
  done (took 15.546676182 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.455399765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.448004965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205524896 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451169726 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180941451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444059194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.335949727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.339664095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327591779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.151311998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149400365 seconds)
  done (took 15.56979016 seconds)
done (took 49.367018297 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.144185667 seconds)
  done (took 2.226268048 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.177001278 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337633014 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161140095 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.150968613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.146466545 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.148045889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.149582195 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.146241488 seconds)
  done (took 10.501117275 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.143580339 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.144432573 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.142239839 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.144262219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.143210673 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.14197491 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.142210713 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.142600859 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.144263209 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.143357658 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.142692816 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.145418279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.145716757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.142630874 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.142365367 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.141723856 seconds)
  done (took 19.375201434 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.145202656 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.141654694 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.142205198 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.14441818 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.142476344 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.142947419 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.143975674 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.142645723 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.142407489 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.142674159 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.14332414 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.14298768 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.14502676 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.143600277 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.142569285 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.142896643 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.143086834 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.143445339 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.147550224 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.143215152 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.142900233 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.143062278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.142570099 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.143479774 seconds)
  done (took 28.525698667 seconds)
done (took 61.709159206 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.090852808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.675846236 seconds)
  done (took 8.850340856 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.145369213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.145967905 seconds)
  done (took 3.376195949 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.144343088 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.146033684 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.145671774 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.145006327 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.144863532 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.146003559 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.146436388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.146999927 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.145750835 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.144820045 seconds)
  done (took 12.53972326 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.1443832 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.146059464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.143270643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.14514505 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.146366655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.143464803 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.145210818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.145417249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.145555286 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.143090857 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.145081166 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.143277464 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.144060271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.143410998 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.145024141 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.142782041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.143980472 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.144517167 seconds)
  done (took 21.686016116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.144630348 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.145570807 seconds)
  done (took 3.372894344 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.141325892 seconds)
    (2/7) benchmarking "second"...
    done (took 1.142514352 seconds)
    (3/7) benchmarking "month"...
    done (took 1.142824515 seconds)
    (4/7) benchmarking "year"...
    done (took 1.142935274 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.143067785 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.142723375 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.142198844 seconds)
  done (took 9.08087869 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.145744785 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.322986556 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.399894244 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.716863809 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.147861767 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.149581713 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.018562146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.148164482 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.151831277 seconds)
  done (took 13.284877454 seconds)
done (took 73.273239413 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.128702912 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.140667228 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.965294918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.145239096 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.156086546 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.481512179 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.191902904 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.258906677 seconds)
done (took 36.550901914 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.138328741 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.842512796 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.845754857 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.141828277 seconds)
  done (took 10.914533147 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.12814759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.017634644 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.13688089 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.114493446 seconds)
  done (took 17.481621639 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.729699691 seconds)
    (2/2) benchmarking "read"...
    done (took 1.4718971 seconds)
  done (took 4.283703433 seconds)
done (took 39.902588402 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145544621 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.142985917 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.146873334 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.14290716 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.147118888 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.143122575 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.145666692 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.147423358 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.147025307 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.146891995 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.14786758 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.14592436 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14604086 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144314431 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142879464 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145606866 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145709961 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.142895384 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144260875 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.14352037 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143461326 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14654317 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.143378345 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.144289049 seconds)
  done (took 28.567002781 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.14682864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.145264486 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.147358926 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.146802262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.143449991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.146846187 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.146725759 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.143783197 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.146076706 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.147608845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144463199 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.144804367 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.146445452 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.144391353 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14553089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.143930658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.146729358 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143940584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146325364 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.144570631 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.147007145 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145187444 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.143543475 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147357527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.1442559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144050782 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.146904706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.144108 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146960383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.145025488 seconds)
  done (took 35.451286972 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.152053027 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.153733918 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.148322825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.14736522 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.146796138 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.147710488 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.147231633 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.14802145 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.14669825 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.146811602 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.148521459 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.147673714 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.147636394 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.148420563 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.14772304 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.147920321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.147753913 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.148662602 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.14848764 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14761853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.148514897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.148990136 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.148234532 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.148798397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.14830412 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148261317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.148937038 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.14944281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.148315329 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.149073202 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.149063559 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.149291843 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.148706214 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.148625868 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.149139501 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.149701693 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.154101577 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.15706738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.1490432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.148429181 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.149621468 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.148396253 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.149775221 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.150640853 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.149027559 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.149541029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.150952634 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.149411463 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.150365937 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.149664798 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.150031017 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.149747457 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.149260055 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.150548481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.150659789 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.151053215 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.149199923 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.149950412 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.15084673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.148569764 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.151328983 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.149795068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.150621561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.149967921 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.150108555 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150902809 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.151414792 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.149144118 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.151127373 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.15053235 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.149661584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.149940403 seconds)
  done (took 83.845046602 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.151453704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.149689832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.14719722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147068515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148231372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.15050399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.149502076 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150354886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149237511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.151279058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150227375 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.148402525 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148414613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.151003541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150946473 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.148428275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.150808682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.148101091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.151258418 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.15110945 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152125347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.14887204 seconds)
  done (took 26.383019979 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151491086 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152346093 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.149237322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151272767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.149698558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151365565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.151081128 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152418365 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152320554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149615019 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149220279 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152333847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.14958294 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149952763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149540879 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.149635072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152203901 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.149527606 seconds)
  done (took 21.802063747 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.14941903 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.149920378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.153980725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149896468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.151504029 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.152774281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15061778 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.153483364 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153605828 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.150288721 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.153616387 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153676399 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.153309612 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150197389 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153196433 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.15064994 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.152519262 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151764373 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15327413 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.150633505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151435684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153719482 seconds)
  done (took 26.433962118 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153152619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154820546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.150731258 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.150868075 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.151795959 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.153052595 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154057545 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.151281805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.153436303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.152986134 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150641488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.155019169 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.150934348 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.152061441 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.151568904 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151599198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154067167 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.152164673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153691214 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.151688159 seconds)
  done (took 24.141274776 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155345535 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.154919168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.155250063 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.154926649 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154655454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.154809564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1557815 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.154891784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15458857 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.15667919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.156702381 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.15599358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.156582741 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.156104239 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.156589419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.156418146 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.155833694 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155111188 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.155962793 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.156904895 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.15709747 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156488726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15640626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.15631666 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.155741642 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155825251 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.156104044 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15565464 seconds)
  done (took 33.45498622 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155311039 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.155818727 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.154031341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.153211489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153621249 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.152632733 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.153415341 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.153099883 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156646613 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.153364461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.156262942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.156092921 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.156065639 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.156707147 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.155640331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.15730849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156572462 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.15445037 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154391533 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153685061 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.156277959 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156014613 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.156208314 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154864115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154876929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.15622345 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154676028 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154870307 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155618326 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153644958 seconds)
  done (took 35.745685095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.174796703 seconds)
    (2/2) benchmarking "in"...
    done (took 1.175765725 seconds)
  done (took 3.444505507 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.154479155 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157084881 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.156781426 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156727014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154926778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.157156868 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1579297 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155611928 seconds)
  done (took 10.345325421 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157102137 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.158195154 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.157253256 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157865231 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.157337072 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.156591417 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164662403 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.172446572 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.158452581 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.15848587 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.163448123 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164291491 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.160027868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157211039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.156603562 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.159301804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.159135899 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.159355377 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.159476454 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.158307511 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.159579949 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160270178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159963745 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.156154966 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.159083504 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.169054859 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.163344482 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159494756 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.157998411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162429881 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.15847992 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.156399268 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.15974262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159904563 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.159122766 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.158929043 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173509687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.164834584 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.160233928 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159425334 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.15633665 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.16001064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.160369148 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161707072 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.159112275 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160029604 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.156704057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158830819 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.161512429 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.163790431 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157635791 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.15728984 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163634312 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.161233082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168242616 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.176091134 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162697612 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167864497 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170719016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.174131143 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.168167068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162756879 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.160891569 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169192743 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182713495 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167643891 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17442873 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.158532093 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.160463939 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.167247868 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174461742 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.170824968 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.162660297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161687768 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.161465345 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160662485 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162132374 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167372041 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.180465247 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.162963369 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162660584 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.170813498 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181623206 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.161007706 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161356554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.161647071 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.162994034 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162899926 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17337776 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.179217974 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.163626513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161424283 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.160893307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.16213751 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.161460635 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.161598314 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16232335 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.160684697 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.162330008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162719723 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165017146 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.171304689 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163278901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163177568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.167748868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.164428122 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161549879 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171739903 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.16341521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163108255 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.163607857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168427015 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.160731409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165426824 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.169568603 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163790373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.164559119 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.16413237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.163382638 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172200545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189692994 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166289367 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164256089 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.16745636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.175088257 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164490579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166526093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.164861938 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.162189728 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.160998282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.164906396 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164940574 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165730513 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163559598 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163929581 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.16198338 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.16537142 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.165046152 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.165773995 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.164520269 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.16515045 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.165220101 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165936889 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.166881384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.165126754 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.172183502 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.164399617 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.165464142 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.165781626 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.163285879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165141928 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.165348989 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.16582927 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.164992173 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164774185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.163761624 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.16483845 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165519979 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167060843 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166145792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.166200542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168589583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166236608 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.168709692 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.163630205 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.163075044 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167140309 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.167263373 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.164168491 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165221616 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165420338 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.167413943 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.173291518 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.16641995 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.165970139 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.16834664 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166816016 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.167266486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165696243 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.169598114 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.172585516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.167713804 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.173571185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.168832026 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166752167 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.167454054 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.166822174 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.164605285 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166498524 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.168723865 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174165968 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.1789013 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174134381 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.167949215 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171152823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.168176667 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.171864328 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171397456 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167446004 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.167948005 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168487542 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166156601 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168816597 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.167732275 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.168058324 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165512818 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.167867026 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168013303 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.168188973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168888711 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.168121269 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168961257 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.166451337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168842057 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168800142 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.167283257 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.165453303 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.16748717 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.167878673 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.167618634 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.168110005 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175320459 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.167741906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170006534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169312506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.167906617 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.16674605 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.170567743 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169781452 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.167963331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174062178 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.183589009 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.169155288 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175710093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.182412891 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.167821865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.171129933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.169890472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167225854 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.172131017 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.177604665 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.170110587 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170911487 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.169318383 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168755837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.17002557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177262478 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168125211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.169332666 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.170386432 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.169791882 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.166705396 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.170812538 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171091966 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.170593521 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173001563 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17154242 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.172229464 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171277078 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.170945596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.170450611 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.171773376 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173795032 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.17799084 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.17594012 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170581391 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.171899642 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172582596 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175164881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.171432771 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.170590744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.171622021 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183553419 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.178650451 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177267696 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.173200534 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.171166768 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176422705 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.173241275 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.173982564 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172215526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171223549 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.171030544 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.170706127 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.169150524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172101936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.171453877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173165841 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.172897154 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.175395649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.172255524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.170649437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.17155154 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.171743953 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.172421018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.171131362 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173775623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.172912994 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173773261 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.170866629 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.171219201 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.178498401 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186925648 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.172557185 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.171402642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.172085602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.17217038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.173629501 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.17243796 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.175428587 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.180190421 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.174518253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.18187972 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.174523346 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182243417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.173577049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.174883177 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.181196027 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.17045893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.171538008 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.174054761 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.173369226 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179645079 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.189186919 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.173958652 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.176880375 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175520865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174114617 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.174539496 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.173705362 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174548316 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.174883076 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182623891 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.190404381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.177312756 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176414532 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.172780758 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.174645993 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.174968813 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.172923836 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178381239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.173823731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.174241336 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.174118875 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.174852938 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.172933269 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174938293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.174586472 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.17248782 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.175108483 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18154142 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.191360469 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177823323 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.175578395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.184050529 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176390713 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181760231 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.191175031 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.175202251 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.176080316 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.175582999 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.17518993 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.174102207 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.175567921 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.176540011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.177013778 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.179453716 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.175723253 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.176819466 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.175785941 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.175227222 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.174468342 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185634741 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198617663 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17612617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180323978 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175234053 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.177788453 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180650227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.175905027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174936945 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.179065675 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186342089 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.183620477 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.175553034 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.176416654 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175227602 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176694191 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.177224806 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.176612681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.175769645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.177102699 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.176617273 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.17793136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17946795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.177777645 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.178058405 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177602122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.177969748 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.186050464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.178292237 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.178330361 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178177215 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.177334426 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17766953 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.178303354 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.177646162 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177054257 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177516799 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.17869066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183291945 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.18319448 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.179908057 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.176708486 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.179425614 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.177454023 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.178328569 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17852623 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.178897135 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178085515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.179022965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.179086165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17884732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.175908259 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.176924342 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.179034847 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178793799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180259134 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184587422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177815093 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.176717754 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180137967 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179680987 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.177322083 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.180005379 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.188232236 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18240165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.188964354 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.187427567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.182991094 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.179328813 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181860437 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.185915335 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.177927771 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17893023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.180577569 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.179898675 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.179125291 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.181400011 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181167884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.18584073 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.179448773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.179607963 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18813708 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.196475547 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18074492 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.180902131 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.182997514 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.179112349 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.177579451 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.179990381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.179251507 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187336577 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.197144216 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180625844 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182711368 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.180052648 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.179940855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184397557 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18035124 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.180847824 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.17898681 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.181563751 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181515097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181607252 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.178324591 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.17977833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.181054856 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.183126328 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.18638516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.178847977 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183729833 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.180212774 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.181974892 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182099109 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181189276 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.179404327 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.17857614 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.181795384 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181337572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.181583796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.183437351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.181120461 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.182083519 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.18358431 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182234706 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184206624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.191762389 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.189775388 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.179834337 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.182909384 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.183136826 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.185591929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183687872 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.183440072 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.181966258 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.183981135 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.183581957 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182171365 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.184037837 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.186375189 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19821287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.199215884 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183518758 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183454492 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186889254 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.183782271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.182094913 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.183684181 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.18560038 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.186546567 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191513709 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.185111371 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190485706 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199511188 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.185286445 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.188021681 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.187631085 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.191069077 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185767262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185805072 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.184248297 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.188445061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.200426503 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184603961 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192737375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213002654 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.200757801 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.18427507 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.184230792 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183346975 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.185260957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.1857512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.185391536 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.185671538 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185221844 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.184656934 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.185250532 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188869091 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.185773172 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.185787074 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.184346053 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.184201273 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.184122458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.181940488 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.186368671 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.185505539 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.186710949 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.185682508 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.184797891 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.185018736 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197073177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.19625785 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.186290745 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.186498478 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.182568254 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.187868757 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.186838771 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195021199 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.193609914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.185456879 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.188546993 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.186827072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186247678 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.183889097 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.185981569 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.184954967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.183962708 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.184027917 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.199276834 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195264595 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.190944627 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186362534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18703863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.187489042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186656653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187832319 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187438461 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.187004475 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.187646857 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190341715 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.185896952 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.187313297 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.190145752 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.194801564 seconds)
  done (took 701.067797216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185334444 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185309919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.184138679 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184734127 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185475279 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185558979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185645394 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185263394 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.185022081 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.185467174 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.186465311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185571572 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.186707623 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.18674152 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184884116 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.185700286 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185612139 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186057329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184593287 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185930786 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184820407 seconds)
  done (took 26.018891899 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.187996601 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.185663197 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.186614553 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.189072369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186751738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18889551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.186679525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189353674 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187458346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186801302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188883836 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188797907 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.185771096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.186135186 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186146293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190427096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.189972993 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186827555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.189785883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18652266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188716269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.186961823 seconds)
  done (took 27.254316471 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.189189412 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.188782065 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.188246437 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.187987064 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.189661147 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.187375054 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.188403695 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.189197493 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.189006224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.19022471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.18846795 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.190293793 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.195939929 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.193781505 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.191491438 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.189802041 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.333208255 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.190036465 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.191034606 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.190346514 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.189036249 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195046292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.188909937 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.187158139 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.189538356 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.190464495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.191045594 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.190705604 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.190172348 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.191258494 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.194813188 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.191836088 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.190533506 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.192716949 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.190875236 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.191790344 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.194501032 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.191186611 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.188669579 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.192293012 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.200227373 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.211350364 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.191439126 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.197441555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.192291665 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.19182968 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.194522436 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.197526008 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.189438651 seconds)
  done (took 59.658326831 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.192099357 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.192689733 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.18960286 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190846309 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.193024762 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.192664645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.192355197 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.191272959 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.189146071 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.18940064 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.191973057 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.190814496 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189824192 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.192855173 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.192192988 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.190397189 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190031201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190417315 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.189626511 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190610288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.191025443 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.19298926 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.192683589 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.190657495 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193560668 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190489932 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190875765 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.192464066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.190979262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.189941519 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.191976269 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19426188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.193522839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.191373159 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190344931 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.193342184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.193672069 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.190986971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.192962146 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.189898241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.192894707 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194089958 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.193008659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.194217265 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190250898 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.192240354 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.192633119 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.192197464 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.191689968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.19343464 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.193877059 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.191224031 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.193978398 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.191224091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194920683 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.194080921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.190833358 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.191727519 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.193829382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.192608039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.192408704 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195837909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.192992872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.194601043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.194905026 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.19201699 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.19301145 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.196004123 seconds)
  done (took 82.197578863 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195281501 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.195731405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194547703 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195706031 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196918731 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.195649386 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.19520063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.195022539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.195562874 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196082494 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196362016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.195119518 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.197244637 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195444035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.194673699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.195205331 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.195844676 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19650202 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196466792 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195997821 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.196317312 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.196323711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.19686355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195948988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19708404 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.195005975 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196456637 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195834116 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194745378 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195381085 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195981637 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.196139775 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196116357 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.197137022 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.197899108 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.196993378 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.196940873 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19628137 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.1974732 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196458505 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197431348 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197511823 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196234287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.198581107 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196356474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19770263 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196396453 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.197745001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198014113 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197466234 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.197351197 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197514787 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198116651 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197606419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198206809 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.198752857 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198725172 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198011745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197775861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.198683937 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197973507 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.198714519 seconds)
  done (took 75.326729656 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198724564 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197889482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.196070245 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.195125725 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197662297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195762641 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19803451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.19878623 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.19786573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.198772013 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198720782 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19632002 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196356058 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197753205 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197246107 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196660404 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196183393 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19776336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19794204 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.19580266 seconds)
  done (took 25.079630311 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.197648632 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.200300832 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.198351589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197877948 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.199043763 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.197646531 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.19980658 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199834219 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196809099 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200652157 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201037469 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20027481 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197358517 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.19810308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200122201 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197815753 seconds)
  done (took 20.317855713 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.197602234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.199611299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.200615185 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.200761749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.198284666 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.198166096 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.201110278 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.198973707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.197351998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.200314732 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.200792705 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.19983791 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.200567443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.201854087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.19817878 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.200204526 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.198343839 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.198802191 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.200559201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.201324954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.198387631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.198213568 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.201512791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.202274955 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.198530614 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.199978015 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.199168128 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.197552446 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.197694514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.201521503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.199823933 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.202112852 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.198572139 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.198484655 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.201732614 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.198953353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.202804717 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.202304545 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.201311403 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.202417822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.201727944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.200508955 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.201854323 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201946917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.199477295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.201679207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.198699781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199579256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.200230541 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.199506101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.202819277 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2019895 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.202127877 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.203259724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.203008912 seconds)
  done (took 67.153298757 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202615915 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202881425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199030848 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203580543 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203561298 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199020548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203669411 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.19978012 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200143585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203837208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201175892 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.203921573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200398951 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202305127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201539076 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20303336 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.201471093 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.201763459 seconds)
  done (took 22.772132032 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200882218 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202338036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.202999276 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202317704 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.201154754 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.203708464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201746551 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.203868482 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203960193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202695284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201555715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.204870313 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203932978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.204297571 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201661357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202203791 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.20348215 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203387446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.201519988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202313583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204864995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205598798 seconds)
  done (took 27.605018964 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.201608018 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.202386042 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.219220316 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.244067935 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.233352998 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.202514601 seconds)
  done (took 8.442887626 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2027518 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205524361 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202027551 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205111691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204900934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201442769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202902883 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202015259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205369024 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203304852 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202138272 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206439099 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204317686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202778554 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205229527 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205099536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202893899 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203076378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204330082 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204633236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203308007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20554267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203340053 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202283802 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203082306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202860349 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204858212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203079181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203119805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205989942 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206273468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204974091 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206194735 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20444882 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207178781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205897753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204328076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206471916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207057482 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20352026 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207036516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207669695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207513691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204623868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206408609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204472646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203433674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204387414 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204026953 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208092817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2069172 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203736517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207193086 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208399893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208523925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204420713 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206356415 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207347895 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20615621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205896505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207594948 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205206828 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206432213 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208389163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206372432 seconds)
  done (took 80.675205255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206085039 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.20629553 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204503702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207545965 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204625439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20608042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205348341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204346436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203209516 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206847529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206676757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205577534 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20503421 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205911474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205587886 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205334689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205775398 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205665095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205092197 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207829523 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206047816 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205900123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206052596 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206222261 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207268596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20799697 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206006861 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205931032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206625037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20600439 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207221668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206974444 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205928351 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206574512 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206932397 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206388734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206022241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205413477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207794856 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209741926 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207103294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208994563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211474555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205963665 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205828422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205665234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205353948 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206439733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206676893 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206363862 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206204966 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211039115 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205634175 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206761347 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206573006 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205822431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20754056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205828308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205289619 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212912758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206581857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205864242 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209132224 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205635742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206781332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20676185 seconds)
  done (took 80.77580524 seconds)
done (took 1635.043525324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.287557407 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.257109975 seconds)
  done (took 13.689168264 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.369348145 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.32275038 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.206540389 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.234886479 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.206949699 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.22728844 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.223572314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.207990405 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.207539764 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207564011 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.206702216 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.395533707 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.261384816 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.20779351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.206258659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.299537568 seconds)
  done (took 41.147181266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.233433799 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.212805741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.316053017 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.228975971 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.232881777 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.380347394 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.263207438 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.212911045 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.369155693 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251647974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.671228296 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.235955366 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213061158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.263237722 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.230337777 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.38014064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.440688773 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.650421751 seconds)
  done (took 27.932449629 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.622034431 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.219035736 seconds)
  done (took 8.986425153 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.219552188 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.210423407 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.230633033 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.205606284 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.211299234 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.232694361 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.253523761 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.269700823 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.245555355 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.245205109 seconds)
  done (took 63.479837852 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.228642837 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.213488416 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.212079631 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.209572219 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.21134396 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.203288217 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.211271804 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.205634137 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.51763347 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.327563908 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.228187698 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.219365956 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.212258065 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.213112851 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.210561638 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.245276264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.352010969 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.211054646 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208483774 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.218096565 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.212522873 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.292613501 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.250109731 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.213457169 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.327643997 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.533182661 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.216996961 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.219115039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.333767744 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.210236233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.212215005 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.212544702 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.213316842 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.75486823 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.753094897 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.231801395 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.234408634 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.220486002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.211036492 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.334189468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.213167561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.220275393 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.206246356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.719273681 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.372593825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.32645951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.40994153 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.217141786 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.212869743 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.27339001 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.216286893 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.214463999 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.240865632 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.939389427 seconds)
  done (took 103.9757185 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.247644811 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.694830343 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.375383047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.225224677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049107118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.840724726 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.211466404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.47281026 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.219297422 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.482053089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.695644958 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.216059131 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.26240954 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.778443246 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.213752124 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208181707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.120449135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21234563 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.212781479 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620276664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222975845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.210214479 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.308934361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.245482305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.654321101 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.543311223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.615982061 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211801599 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.208989262 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.658743849 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.220076041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.239607231 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208044891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474322586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.550345875 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.528642147 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.213126541 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.215317369 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212283282 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.239488564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.652266624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.540766915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205320033 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.216225802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657715514 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.205860837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.210605373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.211896631 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.409188685 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.108789951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.205951652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.512268992 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.203820443 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.456017967 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293292153 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257928041 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.680758228 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208169641 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.381324141 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.209329397 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.204341891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205269939 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207629972 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.208317771 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.53938889 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.589263444 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.207560931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.539174316 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.650315587 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.208468499 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.709493759 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.095018398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.222613974 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.243258042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.204614992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870984674 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685011133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.24564161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205813022 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.526958266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.208573235 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.478562849 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.221733563 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206471097 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629754184 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.227338728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.243812082 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.216715691 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.209106252 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.981465495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210306042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.463102995 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.228331535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.205312726 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.207294841 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.236794708 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206289367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.205985352 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.208227501 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.709919995 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.211719903 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.326343451 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227040352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208905186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.209007051 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.208955724 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.205779265 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428911011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.752170417 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.213392476 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.206696489 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.207935824 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.216182155 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.309456307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.207605038 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.498924928 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.21001842 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206657103 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.211320248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869383113 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.237879369 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20745025 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.210353673 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033640147 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.418403743 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.225385921 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.20884427 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.207232172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.225027817 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.539220615 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210684744 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.212149273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.213973514 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89113077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.230844609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.209179288 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.768009118 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.211152577 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.170588129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.22986662 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209286228 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.510500825 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.476986185 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.528796602 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.208786499 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.211911099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893323741 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.230851907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.349195942 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226485326 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241808177 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.405917727 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.338360106 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.210714134 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.759956695 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.211040166 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42550364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212419382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.521686453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.684779302 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.212133205 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.210670762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897155914 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86426813 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.858665116 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.210518823 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.48201129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.181039952 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.66286671 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.210658187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.211058647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780593081 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.210968802 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.21749301 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.211298877 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.211309103 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.283257822 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384560138 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.999698233 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.213116988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.658756422 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275297473 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210497393 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231599589 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.210437092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.56109987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.304241615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.212688934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.237265122 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.210972146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.210831257 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.66800756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.098857838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.215694066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.363828593 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820633313 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.214010397 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.212920324 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.96785289 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.52502084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747526067 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.220220064 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.505262784 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.215007269 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.25025067 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992355779 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.281616933 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711814537 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217202014 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.212981639 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.800211843 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.21528384 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.269931226 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.212129538 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.213303784 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.732581843 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.215815472 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.216371396 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.539989744 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.215016701 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466091244 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.215146133 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.2611015 seconds)
  done (took 1083.316404971 seconds)
done (took 1343.670153865 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.212645509 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.21350293 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.202710514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.221269674 seconds)
  done (took 26.00571158 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.228401535 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.222289697 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.223553077 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.222704758 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.225876966 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.222933167 seconds)
  done (took 8.498970266 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.26069482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.218480166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.22232081 seconds)
  done (took 18.859717135 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.426642869 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.419476505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.568890094 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.242625369 seconds)
  done (took 9.817283327 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.224471621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.224303294 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.224907259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.227165288 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.230434029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.231462699 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.228363528 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.228558695 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.231654824 seconds)
  done (took 12.202571207 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.942018789 seconds)
done (took 81.481379162 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.245009146 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.243353061 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.115985476 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.940235048 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.507077898 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.03685781 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.268084307 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.484163927 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.977820337 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.039097345 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.262822624 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.617659713 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.257208593 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.293280796 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.847743607 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.254176455 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.221402405 seconds)
    (18/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.923736631 seconds)
    (19/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.4719403 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.296276855 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.833599808 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.738009048 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.218815737 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.569241337 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.221140366 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321348023 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.78846333 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.2171569 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.035204007 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.019325953 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.405510898 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.284054818 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.347761323 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.294417608 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.582552002 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.576950797 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.61347557 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.052818507 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.802935243 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.567506806 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.249336858 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.221827735 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.336349029 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.244649389 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.601994739 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.48167016 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.504177419 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.746666218 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.223482788 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.601822865 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.339152726 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.653649898 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.424499938 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.279634136 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.218254658 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587484581 seconds)
    (57/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.30704204 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.060894625 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.359640556 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.963780021 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.214106252 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.476877579 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.918155594 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.237869648 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.847399438 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.12542239 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.541067788 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.225540166 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.829539883 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.795343894 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.633336082 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.252089937 seconds)
    (73/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.289485709 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.11596337 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.601186817 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.427413151 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.250648942 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.947965781 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.947485829 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.348587995 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.328615464 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.529858714 seconds)
    (83/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.233783889 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.77256542 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.249166354 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.624820867 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.244261333 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.795119368 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.324556008 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.581211791 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.480220477 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.297312153 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.626191735 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.258987563 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.698832678 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.249692117 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.233332459 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.512195525 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.335852917 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.270914667 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.75867126 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.311082715 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.22327444 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.279339576 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.329819024 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.226370051 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.440016556 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.578085079 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.429383683 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.862202382 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.254508696 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.950147364 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.24062524 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.227370566 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.240848528 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.572862248 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.357895799 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25031858 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.22388682 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.324513865 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.270617934 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.075173526 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.061961449 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.125888103 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.738540246 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.250998115 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.460832763 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.50790754 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.224038124 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.054873693 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949519082 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.380436268 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.324683324 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.488901469 seconds)
    (135/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.59264683 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.364630771 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.228716569 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.483159884 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.493880088 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.472438962 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.242736513 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.354945485 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.210718583 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.430225429 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.267024855 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.213769668 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.740176632 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.267598417 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.332733593 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.96687961 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979448612 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253407664 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.50365269 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.80066197 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.029929149 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.292325999 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.227899266 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.240170707 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.668229707 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.112828247 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.212328273 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091668851 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.254163677 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.210960925 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.809271894 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.230494245 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.54121574 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.019927694 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.23408255 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.22961956 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.213065348 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.968292687 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.412175689 seconds)
    (174/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.33194423 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.57368614 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.249699222 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.311227935 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.040748708 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.216598196 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.950943901 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.37244211 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.453611734 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.255510036 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.554693792 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.643440923 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.316000535 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.530351784 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.271198265 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.22822918 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.857470979 seconds)
    (191/309) benchmarking ("sort", Float32, false)...
    done (took 5.224508178 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.230886553 seconds)
    (193/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.363215151 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.576489855 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.469232535 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.287996077 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.252701329 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.548827448 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.542323649 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.624700783 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.319822425 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.041507023 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.631856949 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.783149234 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.836669936 seconds)
    (206/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.441210793 seconds)
    (207/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.415496357 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757273536 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.552967471 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.247290023 seconds)
    (211/309) benchmarking ("sort", Float64, false)...
    done (took 5.503881392 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.857887181 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.440009459 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.519118276 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.543706022 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.219748583 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274367927 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.217467195 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.249191351 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.961862358 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.745072008 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.427312477 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.35072036 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.330011699 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.250978358 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38801558 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.335738252 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.709642298 seconds)
    (229/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.951210906 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.053744401 seconds)
    (231/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.256576598 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.797509611 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.272868033 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.255545099 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.968075651 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.30453443 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.701954091 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.230672385 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.21877361 seconds)
    (240/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.770184673 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.247542609 seconds)
    (242/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.77983189 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.277913239 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.216726515 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.472974898 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.218331439 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.466047777 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.258122806 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.278976182 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.22818077 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.700720604 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.259339998 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.435232694 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.443317057 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.649125697 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.585727747 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.222316395 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259398098 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.25076759 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.620239329 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.240074441 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.314623578 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.326120558 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.893251237 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.326283767 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.216145986 seconds)
    (267/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.257426057 seconds)
    (268/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.216339523 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930766579 seconds)
    (270/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.341579617 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.315731875 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.255252181 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.562753864 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.282854331 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.57799371 seconds)
    (276/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.24823786 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.692055471 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.334488402 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.786211473 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.237378138 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.318110125 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.61246661 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.3579453 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.231687217 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.992766406 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.266787439 seconds)
    (287/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.234359205 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.723156029 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.312928132 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312533064 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.274031605 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.217700218 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.206762015 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.244066035 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.282748273 seconds)
    (296/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.829726024 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.24384026 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.323912651 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.134944488 seconds)
    (300/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.550265518 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.25823267 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.317580071 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.43723747 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.234552776 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.340149121 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.977950306 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.220153959 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.258354657 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.639571119 seconds)
  done (took 884.247062066 seconds)
done (took 885.406515316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.267019223 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26124733 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.244130933 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.266496197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.357885011 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.27734807 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.255252725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.246561773 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.292660251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.294304568 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.244865493 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.275916433 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.247008604 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.246079907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.244051822 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26051275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196859196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.247656865 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.262695472 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.255533599 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.263032226 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.24436821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.294172114 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.2760119 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.249260434 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.248247226 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.251090306 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.264522858 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.357151465 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.249466873 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.248590701 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.257643967 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.195397512 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.243525234 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.241302185 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.266182996 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.257850401 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.255508772 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.249877058 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.27921112 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.602873689 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.249579486 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.248509495 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.247828756 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.247462237 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.250649294 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.248626024 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.252298755 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.260534315 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261068227 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.561568116 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.261972058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.250140129 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.247262176 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.257714711 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.24727952 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.249978462 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264043465 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.265850439 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264244895 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.190732162 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.253204504 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.248592922 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.264578468 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.256896466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.603709955 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.243959375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.251466716 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.574889035 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.251811579 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.607527079 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.256659381 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.248444696 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.263135919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.280830725 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.200165511 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.242810505 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.247552369 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.25630503 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.24688838 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.257418551 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261633829 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.2516719 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.248465851 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.263655495 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.280826289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.256959207 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.251767536 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.257856289 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.268814693 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.257179466 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.260937231 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.252891083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.244618537 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.257917263 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.252282721 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.253500066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.252031589 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.252295928 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.259927942 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.574440399 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266412228 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.247137929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.245691398 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.247152616 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.264941851 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.579067843 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.251061256 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.272171641 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.297839648 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.251872948 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.195029167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.254224723 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266146705 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.257642031 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.253298622 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.245349386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.19488346 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.573455648 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.265971902 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.251701585 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.249802497 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26733134 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.251491195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.246098031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.207013794 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.25180456 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265687123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.371896866 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.261642157 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.284400318 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.249167139 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.253808277 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.286586336 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268126258 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.283643492 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.254406665 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267080903 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.26739427 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.247529773 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.26202185 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.26122808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.252598146 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.256617166 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.246686832 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.283586479 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264354466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264029754 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.272588764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.374904241 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.247948559 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.197744095 seconds)
done (took 210.963149125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.309916246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.247805131 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.332599011 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.248019782 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.347223522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.352285765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.244836174 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.245764815 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.246192346 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.624060808 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.245950261 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.244861453 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.242604045 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.245527324 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.332048504 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.247650551 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.245835475 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.589056171 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.248541871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.320039111 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.243773294 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.245699864 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.248036955 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.646129182 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.247891817 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.241519368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.324352709 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.248581723 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.608356008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.243209072 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.244086348 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.609194154 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.345965562 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266128839 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.259394113 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.256597214 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.35318382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.264998688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.337300267 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.330306936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.339959344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.288768142 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.242335925 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.246725003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.250379718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.249347589 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.245849519 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.275927863 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.244565033 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.247440509 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.588638503 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.258378816 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.247929143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.247567929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.246951609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.280085634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.247206605 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.25057189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.339325367 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.250324961 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.319832367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.646901714 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.628216159 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.249988987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.245116431 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.248599143 seconds)
  done (took 142.835940143 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.317792342 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.323696148 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.359160165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.251395522 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.302124681 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.363093894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.251763211 seconds)
  done (took 10.35304386 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.25644708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.251282982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.300137126 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.300104848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.250725063 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.397234769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.252464104 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.261695711 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.248630491 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.304609103 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.254052463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.251509827 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.259020588 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.245240137 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298077505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.261912504 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365819282 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.251693754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.252129666 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407208741 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249261102 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.260312687 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.304648276 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.263045281 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.254553084 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.25744645 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.820775581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.252646757 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250060568 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.253885264 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.25025759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.289880245 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.253846664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.251244897 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250142287 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368969894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.253486197 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251816915 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.253186259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.247928282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.252830647 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.252624323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.253240473 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.251096852 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.253310163 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.27493788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.252571796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.253894611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.25465754 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.253737779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.302819986 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.254621179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.250789703 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.251186572 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.308794004 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261145677 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254485161 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.250996431 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.254895153 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.251878604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411224827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.300721368 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.254344784 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.303528492 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.255413178 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.255491065 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.254269514 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.254902149 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308031591 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.254163964 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30211226 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.252847676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.407591992 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.277014362 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255899227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.256732647 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.25665979 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255287797 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.24927412 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.260672111 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.252348971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.256012728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.260734874 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.25202397 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253427565 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357505541 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362138346 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.253379368 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.268139179 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.261328152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.252935945 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.30753577 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.25521217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.253732837 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306569932 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369035298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.308509826 seconds)
  done (took 145.34786433 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.259508853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.263749935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.255915769 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.272038103 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.255350048 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.256883198 seconds)
  done (took 8.75268513 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.257925813 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.256870568 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.256686429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.256051506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.257096395 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.259055908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.25746185 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.257985801 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.261897391 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.256598594 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.259138877 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.25961784 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.259585141 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.256959728 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.25796231 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.257044598 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.257052213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254467067 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.256879473 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256355795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.362117336 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.256322624 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.257643988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.25812286 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.262592732 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.258259884 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.264435842 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.257232589 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.2568551 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.263690979 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.259333529 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.260546015 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.260404945 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.263209027 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.261419587 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.258731159 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.261772152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.261053711 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.255600756 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.259921141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.261987781 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.259032826 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.258779348 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.261005484 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.260018049 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263801352 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.26588067 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265997533 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.259884418 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.261682328 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.262485873 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.259505571 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.262001066 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.261115253 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.261006006 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264321188 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.265513785 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.260078749 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.258934626 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.260156452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.260443761 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.261263428 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.260751035 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.265214362 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.257492372 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.262281993 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.260915916 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.262476069 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259205437 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.259705239 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.262431179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257866618 seconds)
  done (took 93.008256845 seconds)
done (took 401.478284132 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.591692402 seconds)
  done (took 7.7848825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.511047061 seconds)
  done (took 7.707563561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.972603203 seconds)
  done (took 20.17322157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.330404712 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.314577827 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.271576972 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.255061114 seconds)
  done (took 26.366404033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.550812652 seconds)
  done (took 7.743552872 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.258009256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.253674739 seconds)
  done (took 13.706340303 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.657140692 seconds)
  done (took 7.850685983 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.826458345 seconds)
  done (took 8.026617125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.253719635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.265417782 seconds)
  done (took 13.96583584 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.239821667 seconds)
  done (took 7.434646449 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.060172249 seconds)
  done (took 8.25324864 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.25524368 seconds)
  done (took 7.45081336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.257422235 seconds)
  done (took 7.451608308 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.730707361 seconds)
  done (took 8.925267359 seconds)
done (took 154.034443263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.25373925 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.257420033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.257150247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.254837026 seconds)
  done (took 26.21702068 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.294391395 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.294677783 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.296962294 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.306231566 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.298572685 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.295254993 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.287510129 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.287578585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.305379544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.299351017 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.297893877 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.296522364 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.29591098 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.288200348 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.298099903 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.297668117 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.30565451 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.297795163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.287435553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.298338924 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.263593061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.307016597 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.29928305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.262859036 seconds)
  done (took 32.258686923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.455960867 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.332530488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.41463087 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.312110165 seconds)
  done (took 6.711141435 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.313016366 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.316165453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.327577546 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366801882 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.398707239 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.325923371 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.287145123 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.283540519 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.269483357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.316203863 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.392491367 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.331643332 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.426483241 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.263799643 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.447030617 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.263739554 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.262704636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.314469972 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.367619576 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.380967861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.263728932 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.315715155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.318915934 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.332218905 seconds)
  done (took 33.083393178 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.262633746 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.270606871 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.269698878 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.261507277 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.262294545 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.262077463 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.268865446 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.26534933 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.284601833 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.263572749 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.262289043 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.262807954 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.261875586 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.263931314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.262964774 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.276502795 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.276193353 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.262949748 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266770035 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.270430516 seconds)
  done (took 26.534888841 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.256847289 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.113884717 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.608029221 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.511952145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.257518823 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.258645327 seconds)
  done (took 27.205518786 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.329836431 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.454742488 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.265789441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.610781431 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.69146319 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.268024652 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.264535923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.489449654 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.780619572 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.783522502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.318158765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.328310765 seconds)
  done (took 18.786334563 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.257718366 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260744495 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.269314192 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276816082 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.316131646 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.270298799 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.270858171 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.258008411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.319078577 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.324235596 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.270614624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.318737271 seconds)
  done (took 36.614773241 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346295306 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304889143 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.206260055 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003490979 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977635873 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470173779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.023222797 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118813387 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.265165124 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533748215 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.235715793 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363743139 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516427921 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271038691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26290454 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237135978 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487853399 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731788398 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264300201 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107052696 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288435416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274729213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.198284407 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.288785707 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472830206 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.238580516 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.521804443 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.036596152 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536950364 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274796664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272124521 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262006197 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535160032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906122409 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357293074 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271306912 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952425275 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.89182279 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.245472958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.107609754 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989219451 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265173318 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27155778 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263084847 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196259894 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273557845 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688865784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.268963757 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.973361339 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263662871 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271691097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35771952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.266035227 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.252317412 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308167244 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268036204 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.261641552 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267716054 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837106682 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.603182874 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278915284 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.20028235 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636197529 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.19686252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855031015 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365322919 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.267059088 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265970036 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197378394 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.177490767 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281811334 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41040975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.289044372 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912459008 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949117869 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26830145 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197428408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786665992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265973247 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.213497612 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49104721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037604683 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19893648 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.209435126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197147611 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944991478 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273429762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.6286889 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.271025323 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680236944 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274715973 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279470428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288764098 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487612954 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.148425115 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263157842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.034125488 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407637422 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286864662 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68304059 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199153931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.268562068 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519832533 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.476042935 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264903711 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.250723046 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460645385 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278659345 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.28362573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27628579 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.27692295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.81978364 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279449592 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609136835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284717199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.040330599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989046483 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268890984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368743326 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.266088601 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511183914 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.020097051 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16225779 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333425479 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269149183 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265816271 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.230493978 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117579101 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.167470516 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.268792105 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279907646 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.278332925 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.267689605 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215581405 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.275780662 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269942036 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.045248631 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.488988204 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280858789 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543187905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201167826 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41494062 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275712346 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.490644934 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.450799958 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.268628337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526949895 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274619842 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269164349 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298485876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285692063 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364817535 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288263326 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.267172776 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524458115 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271265457 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.271445029 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.230457644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05018521 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270620783 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.272865801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.09898637 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826664455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246322517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276964133 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157403585 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.282573025 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335424199 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274818062 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279399905 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.027307603 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.102599125 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.271936987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.266556593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493581645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279018058 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.216506595 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349974331 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.457783837 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828118862 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283505192 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.203234624 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.98040426 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.960055241 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268541308 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457481776 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268802864 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278389765 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281209056 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.791563258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828052631 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272124357 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.127604421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.276093373 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280484655 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.275476975 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270174853 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.01067108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636675475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2729505 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.283623224 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41432443 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.283617806 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204041013 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.786826716 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274336339 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271217468 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.044462654 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303654392 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.131220523 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743232859 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530826799 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.960936439 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282262391 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.235219285 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.302294498 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.267893603 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.048066317 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287701346 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.280996462 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282194157 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.281904793 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.139808378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.710676904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840512805 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974566156 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779499141 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196210689 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.274824472 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1715965 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698011585 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205967954 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929518781 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456837291 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696825505 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217413751 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464175142 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.454820202 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016431592 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283555982 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499071634 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191735905 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.056460104 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298472827 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483700576 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306068059 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274153325 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202095747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.574414783 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496940749 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.046762923 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354500324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69446264 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062058055 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064121327 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.270891046 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589587835 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439684406 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903902328 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659708862 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27418301 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275541191 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739453629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28216437 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.798514158 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870724717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2876126 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.467402572 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208869666 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28464765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.283751966 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274622204 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.531104238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.286269902 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.530215335 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283099262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206588554 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283530805 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781390204 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.129449489 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.278929386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27505116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001924595 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279660402 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550941563 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.282975716 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.005894982 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280569543 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20932324 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208710568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.967044732 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277542596 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2486464 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74854091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.629389129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270058246 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302465202 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120455399 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53230353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.288570455 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837499588 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503098303 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.059765226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297333976 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374247706 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.097598433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.274659173 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.170338877 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5108071 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104501182 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499304177 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.232130786 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.184072968 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273724413 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48904762 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174806118 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282284936 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51623389 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.989425069 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.292377106 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971094477 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302290123 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282150793 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289298818 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.649158233 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284324808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347171246 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286492772 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.287146593 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287928858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441882393 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289493051 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279879406 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.289536049 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370397807 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657497506 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.0127202 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.051621232 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845989548 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99971026 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845202401 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291425287 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277723231 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276148457 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211021827 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425660261 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.802539197 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550416701 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407187144 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.716874344 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299814167 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.117909974 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294314396 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504482421 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552039706 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147672718 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27761712 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939300402 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.181587402 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288172553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.489567429 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752785473 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809939456 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390547762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277928162 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700511546 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552381988 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367891353 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279608001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868035305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.283304742 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.597566487 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.283550935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288066696 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428922327 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289011028 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929127081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.28892927 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.437918179 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.050988676 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.252053694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536078205 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.735691844 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.29040281 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84736885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961354303 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54331651 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350267152 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289926406 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.38441587 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425142925 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.288658939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178222243 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280304517 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121161065 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.989404691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.288847192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850172869 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54405322 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.276869336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.285729625 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304618348 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.289682346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502353649 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980547935 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505846222 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290010799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281033488 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271427991 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849416597 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293997019 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214490887 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284014746 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516591538 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.517737828 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306419259 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.733630942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.991368061 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829532328 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.253064451 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303389414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290053729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964967387 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85114618 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.023166942 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760684677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940694255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292939338 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557537442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.286481623 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286174642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558987156 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.284645639 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285836301 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294042893 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.849626088 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035229413 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.290335888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.185129249 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.2190643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.507315792 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922353033 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21913078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291579708 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.459437327 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283456574 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412845391 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294253841 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.287149715 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290823818 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.016419415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562747249 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.288066253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.270180404 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.18787464 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.291892781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290818323 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511834927 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288938616 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.958235092 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.634628783 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538787423 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.290374881 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.269741502 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.285952943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283911737 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000828385 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25250349 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.810427617 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831117099 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.29264095 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.295092941 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287453096 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.500057966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494980024 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291119262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297792663 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28327161 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300660878 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.190297617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049900705 seconds)
  done (took 1550.65824375 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.326134674 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.296224742 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.304489896 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.303342139 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.303536815 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362404732 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.332641227 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347404426 seconds)
  done (took 51.799043238 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.281847332 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.436191399 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.313137149 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.295444862 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.294311064 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.288504744 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.712893578 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.29183121 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.292338671 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.293412252 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.286874333 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.292390589 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.891273165 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294427869 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.289782345 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.275021682 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.29346514 seconds)
  done (took 64.35451601 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.2819857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.751015877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.375571851 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.285229999 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.229290361 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.287697594 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.025269324 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.33323965 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.28936076 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.44243486 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.938401998 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.317648868 seconds)
  done (took 83.782338771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293185101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.292795262 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.292776381 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.292920186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.292715887 seconds)
  done (took 7.687223611 seconds)
done (took 1966.887975709 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.533300728 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.957730241 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.920658881 seconds)
  done (took 5.103653956 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.435265156 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.483227205 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.603504092 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.607617658 seconds)
  done (took 7.356998831 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.575621128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.656533896 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.477510188 seconds)
  done (took 5.934048297 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.657804542 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.294274772 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.411033835 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.287360059 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287785895 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.288821763 seconds)
  done (took 20.090216982 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.291119021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.293747738 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.290781705 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.292883047 seconds)
  done (took 6.391661256 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.272887346 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.990134967 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.275383909 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.289245611 seconds)
  done (took 18.054435501 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.040908449 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.051743736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.034449729 seconds)
  done (took 7.353388955 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.286651784 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.132786659 seconds)
  done (took 9.645870148 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.588912464 seconds)
  done (took 2.815757176 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.423442109 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.561559879 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.319350633 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.234106852 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.311643399 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.033740183 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.891382656 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.478023324 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.21998531 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.404978807 seconds)
  done (took 27.106746806 seconds)
done (took 122.973846939 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.997497125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.532559622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.490239278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.963839158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.52099428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.489829615 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.717845353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.934149166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.598891257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.467214204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.970122474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.518450361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.442819091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.538495425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.444174891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.540967311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.520451116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.038270201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.685626089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.851169638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.714706742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.600002149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.800289972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.618493475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.520036565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440950753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.191275163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.290544638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.860585016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.206736638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441752716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.024984644 seconds)
  done (took 190.202614345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.288769641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.308518236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288869152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.29301121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298435599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.28981426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29245568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290582586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.295508309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.297395429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289765517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.29047793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.290473092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.302889207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289893944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.290199869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.315332481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290750336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.289674308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290624894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302864241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.291321113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.29088924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.291216067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291066612 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.30873005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.290591391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.303176894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28991465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.303736062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.29192443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291670536 seconds)
  done (took 202.66156823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289708236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.308474392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.305552213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316087634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.296077857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.309475079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.2955113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291611247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.290927787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.300865764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291163576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.305579516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.29279641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291870474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.291673968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.291542468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.302635135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300000001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.292239454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.292346912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.293290647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.290345789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.292499197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.309910993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.293761719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.292182906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.297375824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291776066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.305103827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.308132766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.296118421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.309132506 seconds)
  done (took 202.766787469 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.494166857 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.300712563 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301890641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.254963451 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.300730203 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.300858321 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.292882418 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.490482435 seconds)
  done (took 13.968743925 seconds)
done (took 610.825182389 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.591536569 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.301690827 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.500792755 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.324301776 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.062368686 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.323454852 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.321294391 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.48979341 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.221152906 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.492887589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.572688152 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.320182995 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684186128 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.319363277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.564985331 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.416751583 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.184692323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.293697961 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.625666992 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.818898445 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.571817408 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.736455316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.486351266 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.219798296 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.68506116 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.773420932 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.016267245 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.186737383 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.320739492 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.627818985 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.944220403 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.263086371 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.379134234 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.362472796 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.418826789 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.397695592 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.248280167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.358981028 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.49813822 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.511475465 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.827638005 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.018787267 seconds)
  done (took 89.517720218 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.290085339 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.28969013 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.289074788 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.290739726 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.291986372 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.290292983 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290164887 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.289154376 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.290697871 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.291375175 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290094178 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292446622 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.289837157 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.291794122 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.289833443 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.289989809 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.290101664 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.292798337 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.289962105 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.290776144 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.291344442 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.290586206 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.291167744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.290898659 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.291349489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.290888221 seconds)
  done (took 34.794060669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.303627721 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.555648684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.710186322 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309296114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.30324841 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.308948252 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.378835297 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.304507286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.30695492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.306496408 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.457089784 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.307987125 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.340791808 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.719420264 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.306391158 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.306605699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.305597756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304703299 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.563507798 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.31390282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.380256793 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.306004475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.379052125 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.314823077 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.3065111 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305607497 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.310448562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.826106369 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.306785285 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.457163481 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.05327327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.379474911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.785419969 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.726188096 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.065766617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309765528 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.307047975 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.462852227 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.30764384 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306051559 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.38078586 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307059538 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.724861985 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.935032196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.322511354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.306629261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.844858646 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.460843397 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.543604038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.31332518 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.745051245 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.309885956 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.309809705 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.308953183 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.543251778 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.312448038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307028251 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.83181382 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.312365936 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.382619003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.308138315 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.307972267 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.574520393 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.308691127 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.55993178 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.30894297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.319135865 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.308168748 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.733135695 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310579501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.962554744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.321831749 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.308862165 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.459595231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.560733882 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.87604127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311752259 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.575535764 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.793647271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.381226089 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.310884776 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.814988452 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.385655274 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.311770766 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.311019186 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.312336046 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.310267659 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.363482404 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.381764732 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.877744721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946609465 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.84347311 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.385020654 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.321872922 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.310424233 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.837732921 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.311162808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310509017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.720463097 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.947883815 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.324943815 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.317279205 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.940993556 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.327474353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.384406417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.314895904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.734027567 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.311055269 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.3637844 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311195576 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.317734051 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.312943902 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.384631942 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.313933008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.312376867 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.923665881 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.482790908 seconds)
  done (took 172.336863215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.302637313 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.304131978 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.30362253 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.304011328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.303335128 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.310080851 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.304055539 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.30454809 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.309138967 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.304464011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.304063638 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.306289965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.307214782 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.308973376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.329811577 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.311061352 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.914613905 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.305931989 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.305014915 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.304886715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.096168073 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.307466799 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.304642873 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.30529581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.306234504 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.306443411 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.318422734 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.307691491 seconds)
  done (took 151.243164082 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312590969 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.861031998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.314650754 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.438329478 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332623557 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.309373216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.437224697 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.3682875 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.314099038 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.310385766 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.309215883 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.602261119 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.313710156 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.819578984 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.498531484 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.442105936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.821495844 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.315892705 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.311262445 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.311265946 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.441955195 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.322360539 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.612272007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.875694809 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.316224918 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.877074574 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.304325728 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314371493 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.312358066 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.875381787 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.314284893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.613790722 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.387886693 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.370142131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.878008546 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.825144395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.820654311 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.456701342 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.314491719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.311963044 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.312604746 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.302412466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.878423386 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.316071677 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.314515815 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.871191816 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.331621887 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.314988238 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.32266554 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.313144594 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.369967463 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.371218793 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.619576816 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.886812922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.391217459 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.334677116 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.441898401 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.709459465 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.317514986 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.821774251 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.304670957 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.878864619 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.32026634 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.303359614 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.316420412 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.318996308 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.458500862 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.44322757 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.82073827 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.319090266 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.816855389 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.462006298 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.314513037 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.31507129 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.31616201 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.876650118 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.830527181 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.460919223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.444733135 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.50192567 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.307377301 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.314583866 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.303898716 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.389277498 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.315116565 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.877060928 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.832208049 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.319633954 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317338324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31738996 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.317342067 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.486016992 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.887901119 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.39233384 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.818558508 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.638333374 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.624354459 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.319529514 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.371457808 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.317375036 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.621732504 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.31980408 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.371614057 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.774172733 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.623676296 seconds)
  done (took 157.081035368 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.551735754 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.489017283 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.407468006 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.426259034 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.911657822 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.869177358 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.595822483 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.437544438 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.424202527 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.554599408 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.47385551 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.408311894 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.479869545 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.406581865 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.023461048 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.380420462 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.404858112 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.442659951 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.409403873 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.327338607 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.935595536 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.601508636 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.48214091 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.283743019 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.410064066 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.056223038 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.858665766 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.900814201 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.489126414 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.620977969 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.853085571 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.40298571 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.272047567 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.978084327 seconds)
  done (took 63.818994892 seconds)
done (took 670.023271845 seconds)
SAVING RESULT...
DONE!
