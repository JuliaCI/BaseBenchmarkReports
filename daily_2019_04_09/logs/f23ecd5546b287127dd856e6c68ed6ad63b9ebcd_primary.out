cset: moving following pidspec: 16183
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296255359 seconds)
loading group "string"... done (took 0.583761902 seconds)
loading group "linalg"... done (took 7.108998419 seconds)
loading group "parallel"... done (took 0.169543687 seconds)
loading group "find"... done (took 1.120159472 seconds)
loading group "tuple"... done (took 1.748619538 seconds)
loading group "dates"... done (took 1.201758873 seconds)
loading group "micro"... done (took 0.225111751 seconds)
loading group "io"... done (took 1.022296926 seconds)
loading group "scalar"... done (took 39.200154293 seconds)
loading group "sparse"... done (took 12.929208588 seconds)
loading group "broadcast"... done (took 1.037829257 seconds)
loading group "union"... done (took 13.694317482 seconds)
loading group "simd"... done (took 4.491349675 seconds)
loading group "random"... done (took 9.096775797 seconds)
loading group "problem"... done (took 1.944852723 seconds)
loading group "array"... done (took 21.618486477 seconds)
loading group "misc"... done (took 1.968826485 seconds)
loading group "sort"... done (took 3.266798203 seconds)
loading group "collection"... done (took 18.167830253 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537897999 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142523195 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117125429 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139820399 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188333592 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133358505 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147011041 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084946502 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.102792193 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16630987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14020949 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.473830623 seconds)
done (took 5.233394574 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205967995 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086452154 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097753168 seconds)
  done (took 0.988195466 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066630268 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125706022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081639257 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068374643 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067137919 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082010797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067655289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065794049 seconds)
  done (took 1.369671214 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074466261 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068641487 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086338019 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068898003 seconds)
  done (took 1.110705247 seconds)
done (took 4.561518361 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893866893 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239786401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189597944 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450823036 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147606585 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188180974 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666518585 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313694796 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209397069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101361594 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105156691 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377076374 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107510484 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671185573 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075494781 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106609597 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160437331 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417324104 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083073486 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083619107 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10487021 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142659523 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101834958 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077679468 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168705506 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070334229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148071679 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095770387 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068970733 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24186041 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190221219 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679309193 seconds)
  done (took 10.527531633 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099387239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118354953 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069475304 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140614371 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101858153 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087876816 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071079734 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084615196 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091419969 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158915696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115694189 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105523981 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083309846 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070740302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102408538 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212315439 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108445331 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084974756 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088742673 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076862163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123687999 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08338101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095887069 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078855263 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154253943 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195675959 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112113129 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113291628 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069551587 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082001813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133179955 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143370793 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066542117 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083517457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1407019 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112020388 seconds)
  done (took 4.683637138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022518202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16194195 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091859745 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152561061 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086491536 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109449209 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084370307 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100905511 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248012593 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.071263488 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455046723 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130269387 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102397315 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067915329 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086053779 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068547673 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.514838956 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145486748 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102464749 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103070531 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090419619 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071365659 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357940766 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068741311 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066414986 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085568934 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060402524 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145086816 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129728356 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068504069 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217345812 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08930403 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088821755 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102205676 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202692218 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094623989 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122714531 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082968144 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06819524 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169268048 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07346934 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084449721 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088221735 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120519025 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120723696 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06939133 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083954138 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064268235 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080944787 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06789587 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181209473 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100153382 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.907758064 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167654032 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081971653 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066638093 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288142785 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10243672 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068119242 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065350488 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295488877 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152849948 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064108504 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084932463 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067960426 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065970572 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08678117 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367452633 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068351661 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.039772126 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085282963 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076937307 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084965855 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06883841 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072358197 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090326025 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085599383 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083511984 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070290594 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066843919 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084526902 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068561619 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10232807 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20388056 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067259769 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0843053 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065988679 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085563306 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114037203 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085983405 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067001286 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115406593 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070187843 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067571773 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119960434 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067106521 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103274104 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086255417 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114734688 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083420773 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169079941 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068767254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112671903 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072770964 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115678561 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095830638 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06878325 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153931293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06506533 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083188997 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067493835 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065396206 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085786876 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068079458 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098715515 seconds)
  done (took 21.444370468 seconds)
done (took 38.49031106 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292153308 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094048976 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093946955 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075559541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094004053 seconds)
  done (took 1.537733655 seconds)
done (took 2.397478965 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120247477 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119538358 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064177613 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114557817 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063892176 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11927926 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115867247 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08163394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12023625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065317018 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114219826 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065762933 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064184681 seconds)
  done (took 2.116831758 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084181858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086335219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087602783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08221971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0807567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083407209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080688283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107096257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080621774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090626363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065611071 seconds)
  done (took 1.785511541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083424566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084304356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087593669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08192716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08073933 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083332051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080358717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104847109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081669675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091222524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065191621 seconds)
  done (took 1.781255416 seconds)
done (took 6.534386862 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07983379 seconds)
  done (took 0.929740828 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.704162599 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.729426113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085295564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133792587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223132945 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154651369 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.445446215 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110591813 seconds)
  done (took 10.618078227 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089557806 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089023912 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084775339 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087940145 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073185536 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090163407 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070689551 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071496577 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087871968 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072856488 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088265924 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07285562 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085842582 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072460048 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069810959 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090428334 seconds)
  done (took 2.218397421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093678674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093614468 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092736272 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077096903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091465374 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074769551 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094139314 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07599586 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089619992 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074558463 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093517733 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075841935 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089900656 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067564537 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093090126 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077798574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089872727 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076754215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094554324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078197962 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093471623 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066535204 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089869603 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076866456 seconds)
  done (took 2.987561928 seconds)
done (took 17.611321782 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132910179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077525331 seconds)
  done (took 1.071271949 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082981963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099522432 seconds)
  done (took 1.050085538 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084063889 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083523317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09054696 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097054762 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066650448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085195345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103933538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067801981 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066144505 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085965473 seconds)
  done (took 1.699367695 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070815943 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094850982 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073103522 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099075805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075536396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083085928 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075143187 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086612238 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079998181 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08125257 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072949063 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101578963 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072992466 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104653505 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07384916 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087872868 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088365139 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069850116 seconds)
  done (took 2.362080822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068642557 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068129112 seconds)
  done (took 1.007590759 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06917565 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064153401 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085308458 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067301639 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08199846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064441392 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081280937 seconds)
  done (took 1.384166442 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404352968 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109470197 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242871257 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091253079 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106044443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263517463 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.087001384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072395294 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090825938 seconds)
  done (took 2.376176553 seconds)
done (took 11.81885371 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081364778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087859829 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112553788 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.423179135 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111004439 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06775099 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144972022 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.206739246 seconds)
done (took 2.108603664 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126011348 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623104519 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404413091 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214216961 seconds)
  done (took 2.115508394 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382483517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093965624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078246563 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071490827 seconds)
  done (took 1.503346434 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068031227 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070658058 seconds)
  done (took 1.018326019 seconds)
done (took 5.63958984 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068537404 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104607519 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067851939 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065058507 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086308737 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065597881 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0638207 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08689455 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065606196 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066476859 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084629812 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069947014 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083361094 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066166819 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065263463 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083745064 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06544676 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064572793 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082481693 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067828637 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064198781 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084922524 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06546453 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064115959 seconds)
  done (took 2.666174319 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087193177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085175924 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073759191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089298436 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072980132 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089638633 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073909743 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067394443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090457094 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06944755 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089556196 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071759346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087373446 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071597067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087313132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075213116 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08883695 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068954184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069485962 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089784278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07173027 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085860511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071710411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090194422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071511055 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088961442 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070189811 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084667309 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073347468 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088082996 seconds)
  done (took 3.276837675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073499673 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064280301 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083571885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072517081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064081135 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084787999 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065537028 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082497897 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067398472 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064780566 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083968435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064929665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064730696 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084412085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065871244 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085271061 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08230676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064540233 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083019644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066219589 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067452333 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083437236 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064594421 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082183232 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065399132 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064114121 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083132384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066108493 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064790605 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083646135 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069034091 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067447616 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083629011 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071428645 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085661272 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065636436 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068800091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081996367 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066177393 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06435386 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082735776 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065509917 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064605866 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090183129 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065436337 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084343811 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06592435 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065549461 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083866899 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068676891 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082035483 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066707928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06704704 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084392809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069609639 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064198612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083942233 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06493078 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083508143 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066164384 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065119227 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082439115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068778339 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065397774 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098445821 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071906824 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082360392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068417385 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066834933 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085919969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067887197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079557082 seconds)
  done (took 6.172478569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120004749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092385252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085887659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067822413 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081571564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067663094 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068788834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084045733 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067965583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089628036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066446649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066367338 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085287736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078438661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08333985 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068483477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088309545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06511548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065409357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087662645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066540543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086484559 seconds)
  done (took 2.618836006 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187429788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089492452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110554104 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09488876 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068476741 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094479049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07093292 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090490562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071255359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090465678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069482047 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089979282 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069280582 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087355445 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069994986 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088704069 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072598084 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087365573 seconds)
  done (took 2.48987413 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079599971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067312527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110083274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067464501 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087512418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069779056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091641864 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076147822 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088481993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068315103 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094340543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070148008 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08703234 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069414916 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07010243 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086482857 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070013091 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085918969 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077064635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09105873 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072184142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094879527 seconds)
  done (took 2.662424237 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083099729 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068589206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104239054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086958634 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065534929 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065626407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092228341 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068335812 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091172334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069927834 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067340106 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084628393 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072311919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086471713 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072535769 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086134144 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069592626 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067430942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088625465 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063727742 seconds)
  done (took 2.444099056 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088730499 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086603395 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070226927 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094576796 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069339455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086370035 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078289555 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086582618 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069465437 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111676316 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07017191 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087533194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077384444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092165791 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069419936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095038914 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07689578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095796289 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068079084 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087880152 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21966495 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070079875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094288021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06963354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068510038 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08853125 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068870371 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092492247 seconds)
  done (took 3.328075702 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069235012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067214977 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083518048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066788426 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065459338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084409942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066176763 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064916972 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087134489 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065611553 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066727241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085856751 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067600362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085445299 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068790239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067927559 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085847576 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066496687 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065139851 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08361496 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068223873 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067309398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086720436 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065094308 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081959519 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069174101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065468355 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082515491 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068789111 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06482812 seconds)
  done (took 3.077200288 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079094606 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092999031 seconds)
  done (took 1.068842434 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066886935 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081120209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084518178 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072148193 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090040813 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069175546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093590269 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07241643 seconds)
  done (took 1.523973679 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084704439 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078906061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088542141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079051869 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097669184 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084012452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157543103 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088588939 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074682733 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083868264 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082593032 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066760186 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093427583 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068071632 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0913828 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075028451 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065545696 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091928968 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070182869 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085435075 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069475955 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094101971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071575234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064021129 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088401588 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076511563 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097386794 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069909184 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090058331 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075529617 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071832996 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081490589 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067257167 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086417692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066564746 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094354535 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08379623 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087713766 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077667734 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06891756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097086767 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063772037 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091135261 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073765113 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095488139 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069201276 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068340802 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082625174 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065459837 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088608618 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063803921 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067562701 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081756463 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075163141 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089135097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078770477 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068518407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088983747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070522725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089357372 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074556382 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087109248 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071193771 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068110792 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09567597 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07198935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095203228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064288055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06144353 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085323469 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077058143 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108603695 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073115003 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086886861 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069063672 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065327214 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090467323 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06898454 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091432073 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073436302 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085985376 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075560442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093148426 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068772226 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069323925 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094368591 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065738249 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088792048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066221318 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101684719 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067347094 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065590833 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085275042 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077237348 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089689578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068092363 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064599413 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094046659 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061710803 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087363668 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069480182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067551013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096927694 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090328921 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074858218 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09329665 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076954988 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06794488 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089877705 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064860542 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086524165 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067991689 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074459793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080647021 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070623756 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086250285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069420832 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075556296 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085370539 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067962959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093148843 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073685129 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06538038 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084376111 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070455357 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08589601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072293702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093408273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067611386 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062378186 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081745336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070559354 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085786901 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072339873 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071621511 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09003311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062265509 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084488217 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072958695 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095147554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068439292 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068382781 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092361055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068845744 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085352393 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074295193 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08707655 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068125142 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072990132 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087033206 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064386694 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088658599 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071166507 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066956185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090227835 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071268413 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08842825 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069385737 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0665604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092560817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068887837 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086303246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068291056 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066387113 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09686172 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068539849 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082298062 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065562019 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092636763 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066059313 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067327527 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085975673 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070333839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086135752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067243533 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067080354 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088873766 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078418072 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091191622 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068859879 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091853787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079424263 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085718858 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071835891 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066825352 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087691119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068776236 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09483722 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073564972 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091131748 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070839936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064138285 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09224893 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075598071 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085674944 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066933568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066679284 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090154089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073207961 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089785419 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068998254 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065565133 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088169685 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0704277 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090042065 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068104814 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084197515 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074041383 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066179167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094155586 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068522589 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096229177 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071579797 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081836242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071504459 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065817443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092446263 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062964843 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084117073 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0675976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068918842 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085722626 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070668971 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080139459 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075377155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073646934 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087074048 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067085437 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086390164 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075792697 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068467324 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090804067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071154492 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093346815 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077733624 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085850098 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071486436 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077614996 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088358274 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063487183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092384653 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067231409 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066843469 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087673784 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066241531 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08931213 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076401921 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093873079 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063089539 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069483097 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086508158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067013588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082895058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073366815 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070140888 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088002288 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074869534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088133427 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069740654 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089653271 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069648936 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068670303 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08853052 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070913784 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086798516 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070999358 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0670163 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090029405 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066852422 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084328106 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070174736 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067300323 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087397701 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073564747 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085837716 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069127998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069043757 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088196012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06829331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086630397 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068195638 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0701539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087903259 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068462401 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087598509 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064308402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074819076 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08677097 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075569005 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08623047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066227789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072323926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089848245 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072383001 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087735036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06919695 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087697204 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068095122 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070077284 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094108742 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065788536 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097005618 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076113734 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086438918 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071722067 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067678522 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088762533 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066749088 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085789792 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070285294 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067827323 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086967998 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073421977 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08895509 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069537246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069053106 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088031659 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0685034 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087238502 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063969641 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066766338 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086400493 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0690618 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095959475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069517243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067074939 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086603479 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069075361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086175144 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066085482 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092416241 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077667619 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067860423 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095040637 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066839207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089162677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078424482 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081481661 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067342053 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065382193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085121641 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075335715 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086595437 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078380098 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067851765 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086485913 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065688534 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087065187 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06775014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061928486 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08547054 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07184986 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065905981 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087222467 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067940499 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090442712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068911025 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096087634 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06814673 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067698998 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087929093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064885265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084838685 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068148676 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070035986 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088322885 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06630366 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064790696 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087414633 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068483235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088479368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068680756 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068287222 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094077178 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067745257 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09087285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071233354 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084632273 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072349032 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067825278 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08747299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067300437 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08975659 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071795843 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068538137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09589976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066867366 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088063675 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068477903 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06556212 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08772513 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067240032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087672535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068327237 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068495352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096066213 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065858104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089673083 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067871591 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086162461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07611629 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069137586 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090328653 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075284883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087755607 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070029812 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093752143 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072778974 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069941632 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089093387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069211592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092613106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067817634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092149441 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069734118 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069030884 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088434071 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066493341 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067246792 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088173244 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066633621 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093321346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06866552 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085190036 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06798537 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06555497 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087667435 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071392502 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094042446 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070738542 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069908383 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083613355 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065584621 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08743365 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06680271 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068260658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090278741 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073826076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089073134 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068745729 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066569068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096450334 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072578688 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091060358 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066197006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070861507 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089055278 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070074845 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088620426 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068310244 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087530309 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073238635 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068973826 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087512313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075059597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089486227 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070007285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06890744 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08881428 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06868398 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082977832 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070406466 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069353485 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092143712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070235688 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086823258 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078275209 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06464795 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088914643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070545354 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086684561 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072041352 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082216346 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070370122 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069191753 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088857835 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064060526 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085215366 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066706595 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069885433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086806177 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063776745 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096461129 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077597447 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070315074 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08668983 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066218068 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082741907 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06419725 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066892072 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088515886 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069568138 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097121309 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067382384 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06680777 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083528556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06840578 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089872748 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071546383 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064361565 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083201222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066728893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089437509 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073730338 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06624449 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088018801 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071084615 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088513933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067110944 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070056275 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084402042 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070636339 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100077267 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068306642 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08844131 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075166207 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092806062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070205006 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062796166 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088502515 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07100715 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08689994 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070347378 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068152081 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102251976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070231363 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087273094 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068051555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088971131 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068386572 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075308934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088930655 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068364475 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091166461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069791918 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095195055 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072219268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07422143 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090316186 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070435588 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086964964 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069507201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065157234 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086876693 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069248962 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088363953 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07269206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094373924 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067180517 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097030206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077613248 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069303888 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085713347 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067356619 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085914643 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064965041 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06919012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086423781 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066694122 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066826888 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087395338 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068585415 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092851846 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070436083 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068198522 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087944663 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062410518 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089269703 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071025722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067384397 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085629621 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067938583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08754737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072366877 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071215446 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086576841 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068866306 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088179505 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069060038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06354838 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093900843 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067665709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089405035 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068502777 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067893047 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089070496 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071476719 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092418301 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070199995 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088711787 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077067993 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069709126 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085700768 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066057779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092435527 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067362558 seconds)
  done (took 47.315111308 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108443674 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085974944 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063438306 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08324611 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075619157 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084923391 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064011397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064381673 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085080933 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066773829 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083406132 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063600925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091550468 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087954983 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095676941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0677068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084911079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064407369 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083101821 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065598544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091423166 seconds)
  done (took 2.604805971 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077369691 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092179933 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074975325 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098008849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068915414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092575983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074453547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092411121 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096843566 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069985923 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096965368 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073298844 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088449081 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069628141 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088223463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073364604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097803285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069478815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091861098 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074945199 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092772835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074577066 seconds)
  done (took 2.769233402 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069995763 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066903754 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08821635 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063504365 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066502262 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083113318 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070964835 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.093112029 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071245422 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065697763 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086688559 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066320826 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08788891 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064036231 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067477034 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085091399 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134092659 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071667578 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066068816 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089943082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062701845 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089645219 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064128992 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063179684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087040774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07098458 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08790289 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066341642 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066918507 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086704223 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06809476 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064725579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088749242 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066886815 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085637726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067431898 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066603692 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087726413 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063036596 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084167571 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068675983 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063286839 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087844785 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069273817 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065169871 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086367164 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068245115 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086329719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064306766 seconds)
  done (took 4.652364817 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087043364 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131270751 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090272201 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089874149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104129492 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095636736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071421924 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114103952 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065467493 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087740539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082353947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105805638 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087465381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072926675 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092608795 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067904178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067840213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087190643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071293366 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08744226 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07081884 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094042681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101278063 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081664259 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091018793 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066618966 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086092093 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07290856 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100195611 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072612957 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092641321 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072789444 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102719026 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071824711 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087511275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069464237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103834421 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067075711 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091605921 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06513211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090188186 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071352478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093837928 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082419338 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088138236 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072589334 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088087611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064148439 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101099633 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068787865 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095915995 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101634159 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071975846 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086519276 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072432734 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102545453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067790801 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085403088 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071562524 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099503856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065877387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090018315 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082040284 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089532241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075228168 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102226513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072322793 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091800789 seconds)
  done (took 6.835649101 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07712288 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093752058 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082321536 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102943802 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093109142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074949543 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09414295 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075063755 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0939717 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078932945 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094325286 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113737266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069174917 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097260035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074357703 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095227022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074169195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09538728 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07326199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095054928 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092978488 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082289948 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095406927 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100843236 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105332799 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089260558 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073669238 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094797272 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080720769 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094827547 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105034013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074124811 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094154877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081815735 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106648968 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094025221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067447827 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093065348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075021031 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094296859 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069446892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102363074 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073334509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089930315 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073663892 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094303604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101822914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086453974 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09789928 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0988512 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075802528 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101697015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07332658 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094933556 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10148081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107277283 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103006748 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10183627 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074121957 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102184279 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101887096 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087641248 seconds)
  done (took 6.509487993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088162545 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097140885 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097863094 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064381127 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065293266 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093195029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065886362 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084996988 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077219733 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096026193 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078589824 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091382023 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073850103 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100172822 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091113535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076225964 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091675889 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071735467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096604428 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071510444 seconds)
  done (took 2.63051495 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077100426 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104902302 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070366565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072786468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09247659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073111581 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090763928 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070185019 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089305195 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070988892 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09817797 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078478073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089106633 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073446068 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097880075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073551879 seconds)
  done (took 2.280742036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08000587 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09839943 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081629436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089631971 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066758314 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08488807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068612012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063742179 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085309562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081451106 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08894573 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070099584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08873129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066910495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06352965 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091637488 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064021989 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086543703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068554768 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102077173 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079126482 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087411331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069445635 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068833961 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089944702 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072214247 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089701764 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06579261 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087181424 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068063531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088059385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076189731 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08357752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068162211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066098735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085873288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067769958 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087818686 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071453301 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067095394 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087217892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067172272 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088533924 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068795977 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082832147 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069326277 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063522905 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094350594 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06596734 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088374362 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067938137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08932402 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07032259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077708821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092325408 seconds)
  done (took 5.265102519 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082282657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069897139 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085053072 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065862724 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090789482 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069871857 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070895085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090853176 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069164416 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086186133 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069690469 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090246542 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070793228 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070576344 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08999297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071078092 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084086275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070354166 seconds)
  done (took 2.36047438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075308671 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06691684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095767183 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068530631 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088496212 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071030041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063145654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087555439 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066714038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087447235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068570448 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069365647 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086814647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070731181 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086936895 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068766926 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069239353 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087062947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06798772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083396878 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071291949 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065947324 seconds)
  done (took 2.632612818 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074665244 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093454826 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165008618 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109176483 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083071041 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.1017811 seconds)
  done (took 1.592591905 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092375069 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101950195 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068676215 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107808158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076552692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089481464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070880919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089853884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07937042 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103385301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06856367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098791767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097989178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077373889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096827748 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075127717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090155 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069839181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08972118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106095509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070842761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098173437 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070410643 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089451398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070599888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097933235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077376964 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104276059 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089192723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078650401 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09538861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069522704 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098664026 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102611605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072241675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097593653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070221391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107681897 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074732345 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098487085 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069932035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096839261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09827604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074388665 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098486449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070257378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095165341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069096278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091380719 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11392954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075513431 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098811013 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094824822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079607882 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09805297 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114848098 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082406742 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098916974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095301526 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084082387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098808967 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073950723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100111364 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10367092 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075034398 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09804195 seconds)
  done (took 6.801762469 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086431429 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108147651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069353998 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103893985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097718088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070792001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089791504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070486663 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088950824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070127408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129933737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069928558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09853476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098200908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070204094 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089587011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070013645 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098058566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069342134 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114103311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089225024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078236493 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098718415 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096449275 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083638724 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096143451 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069388569 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091132076 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069543929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090242038 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074191081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090868549 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097660194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06970023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098667283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070615859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08965043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075180463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090628943 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074618787 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099407623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107296485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07053246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090229232 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082244872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090889607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068888738 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09073481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069403201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090596153 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082006764 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103566344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103062158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098249797 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071555847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089448034 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071026859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089341769 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070923574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095059939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077707401 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090511709 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115287003 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069912812 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090049866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078277376 seconds)
  done (took 6.684702208 seconds)
done (took 133.143802015 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218611714 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190138056 seconds)
  done (took 1.376750995 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070963395 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09588697 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0999809 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128792515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089327292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10080253 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12075904 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080557821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067176077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089238492 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067873636 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089505204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133106144 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068000078 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088722653 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070678252 seconds)
  done (took 2.435962952 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10459099 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197544608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11189731 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065870307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101666134 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078820859 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087716854 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078368444 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093508134 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06775801 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077999796 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098291377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066322109 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097972937 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072909411 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100832865 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066324847 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100165957 seconds)
  done (took 2.645350901 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105656184 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146632576 seconds)
  done (took 1.22622885 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201547818 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125720152 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205984143 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.417851946 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20939117 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283287538 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179873378 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179089972 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161091582 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176532594 seconds)
  done (took 3.110938041 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099729605 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17091996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313800545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138787113 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087618719 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118046568 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139476636 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110251968 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084092055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102910997 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081186486 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099894611 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118522224 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076742248 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09596258 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079251582 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121814631 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075214145 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098207103 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077242118 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120153553 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067961108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096096753 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076697514 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09922165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080570191 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067078437 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088334969 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076453433 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097726593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078705411 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115031526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099575465 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133315278 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083169209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153406835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079340963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09304781 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07793331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072686142 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099488262 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098492808 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085778499 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097765241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067744535 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077541201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088685097 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067661923 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101165861 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078709446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101461899 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079417911 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151675397 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079220584 seconds)
  done (took 6.395189873 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.750073852 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110124253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09674287 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805335149 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08822277 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10604301 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.702714832 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118558353 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213243919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762674335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09073932 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102151367 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183395453 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219749483 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939797031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285598565 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63972949 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103969023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109058365 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131981752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142683515 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177952921 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151333897 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438924767 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077436624 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096099378 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14051259 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077938794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164618307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087424807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096989394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158234884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23169007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153551933 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099327557 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072998186 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09563596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151305143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226940932 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194504928 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160328023 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070815808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094534902 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143382608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131740734 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070236752 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141732427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153142318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173046836 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076206031 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098654299 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144565097 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142333838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145607958 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105296732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.273277517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291115911 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072261362 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124135478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106345442 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220985512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105893046 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200775904 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142006717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169978783 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095766428 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775162671 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149837484 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095706295 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076890841 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123110354 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098600119 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142901279 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147493152 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.349528742 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168114199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075692428 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094246822 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211524678 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08543561 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095866174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143979383 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076483641 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125282617 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16954849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146603216 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149320875 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21501642 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144107983 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164984778 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076202572 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127411757 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076811687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.220749055 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173549498 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142963123 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.215932487 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143491877 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144562962 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150362605 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099607053 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152844123 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123076984 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082645917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14120898 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194897336 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125368592 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083289938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098568524 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142697269 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129849176 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087272988 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16420798 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152627549 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458608975 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14970408 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092657503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088875635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139761501 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164103035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07869426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243624225 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104742654 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172494843 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123728914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071161885 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124749556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142803829 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080991815 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125355666 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163843983 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079302448 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219368998 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196054474 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079675148 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216685429 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163457066 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078069168 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151111704 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123305078 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148886632 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102950246 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141605051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076781074 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813797666 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145432791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124760768 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096724008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156508849 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092165795 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083700589 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106968914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069966775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79542216 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086740089 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105122099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106224976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077445179 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125917228 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14023827 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097116117 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141020308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179509112 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100914772 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122218887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08459656 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163332694 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079297537 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107074151 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086408982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108448587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12621382 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075401493 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10778853 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151357659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142946125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194699832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.544035679 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072676225 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108171315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203117668 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073236488 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268464747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141493412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200486952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146588225 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081558982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290936891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147318801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181873514 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108761315 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153682405 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070713496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139217068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144259794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096401182 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076246243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1420843 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1696133 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146423706 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.965150179 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072006825 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207829245 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068517104 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174799951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078217816 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10060403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244539114 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096602887 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150405294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145168922 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097456518 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085723052 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674739632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109086463 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141898157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099789564 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172789158 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166929435 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140936163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142419241 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077547057 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162105517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19377602 seconds)
  done (took 41.294681605 seconds)
done (took 59.460984023 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259849845 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178282494 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243919071 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145485831 seconds)
  done (took 1.900222012 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145751351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104494304 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119428417 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087293007 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103903913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088982741 seconds)
  done (took 1.649931915 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408524861 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263083986 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229578972 seconds)
  done (took 1.901742345 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283913302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213955457 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452206691 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29733885 seconds)
  done (took 2.354365693 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175266535 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115445483 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067785083 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109238993 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159654049 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254885756 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128485558 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186387132 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080795968 seconds)
  done (took 2.326939448 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196235508 seconds)
done (took 11.333353702 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.210649998 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104229798 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.238939513 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.174063953 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234006862 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101273216 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102002223 seconds)
    (8/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.179133542 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.192034908 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113342885 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128303503 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076827761 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.221589317 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095987133 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081424697 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.2013128 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07867217 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216225573 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09748437 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.284015167 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114533407 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.249096943 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.26862432 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.265682964 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100803126 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.211828607 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104451319 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.235300846 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.160287333 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.254772741 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077433235 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119371356 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153493033 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.248372525 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076754052 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07346971 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.263988104 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.097944109 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.18161008 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075990329 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137475554 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066564048 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.24950224 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082813774 seconds)
    (45/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090754731 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071729014 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096015605 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105643785 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103687256 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.223999898 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08647945 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075391706 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115314431 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125739352 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.126009635 seconds)
    (56/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07787402 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.237342872 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118635026 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.283301689 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070458076 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171603361 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081052097 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.162776522 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090658896 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091045168 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073086787 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139439963 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123578413 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101443271 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.24569658 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079231947 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129035399 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068676693 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167748532 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179266344 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067796518 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098256896 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078596449 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070341129 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098067751 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070398517 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133957448 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092614071 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10019703 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09130993 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.06667498 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115252608 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053514744 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.257143787 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.251477593 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053287914 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116783265 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080653419 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052478432 seconds)
    (95/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.08402481 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071417576 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175072482 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057466651 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115224852 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112057122 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151927088 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080925523 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137464961 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081193807 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076616109 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259574526 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077120104 seconds)
    (108/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06456115 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053192367 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.250007996 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075221732 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089874371 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075658821 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.23942084 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086511909 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119448254 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076406951 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098461814 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.216530627 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123458277 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.243172146 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083229783 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091976882 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067736295 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066959331 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0756564 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146063503 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098129774 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09081275 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.251966406 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071792345 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098109838 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09048412 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128263255 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053214701 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.168648731 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098654907 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053865178 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.241359387 seconds)
    (140/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055124452 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067122283 seconds)
    (142/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088085619 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075944452 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069479073 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074969457 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07777738 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066953594 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076636845 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07344686 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075675794 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097554758 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171252925 seconds)
    (153/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095399251 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074248635 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076531136 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110346707 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097499792 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064126627 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066870769 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.239787473 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067251403 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092961903 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077105846 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.256410463 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076381525 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099885581 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147056278 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095378203 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055916988 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082008627 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09528632 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078160182 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093726866 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057183543 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076027106 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100693982 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056351659 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056258002 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054205601 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095964024 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053364322 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064804499 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099462041 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069618764 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11166816 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071045619 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.277443755 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080059493 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053658953 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088059699 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077874273 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072506568 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072008519 seconds)
    (194/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093469305 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082984705 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096637415 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074872863 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078755887 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100513594 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05432966 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121865964 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.128629758 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09067701 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.099681477 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076029557 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067555293 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201424786 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077105709 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11329739 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067800006 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143638107 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170075869 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144710652 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070198936 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100043439 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092575973 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097688386 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069221809 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089361838 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079543639 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092491334 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200171508 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101482534 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079066715 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07253237 seconds)
    (226/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07777823 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054762837 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054562417 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077377062 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055474235 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074139944 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119848737 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138975974 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093358773 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080956212 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125617056 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144500533 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092689716 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098444266 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052486317 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093035747 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054424167 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076665129 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101706848 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191731353 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106976337 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053565336 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092244075 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 0.125928179 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141994208 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051886787 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11585538 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191451769 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154252016 seconds)
    (255/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064057797 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071481179 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091748099 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055045275 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054506626 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073455177 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090718379 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067869128 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089593434 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055048642 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086586123 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094378622 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073712737 seconds)
    (268/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05298998 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077766351 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09062254 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101612504 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211841656 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063297489 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054659034 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091788339 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053732365 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066888803 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.087417766 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067360755 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055406678 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076779177 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06899169 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06755696 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09946439 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066712681 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065743343 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 0.163929111 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099568364 seconds)
    (289/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107852079 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11727993 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073290557 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137904868 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06515594 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053175811 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079884628 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056937108 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055152218 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099769538 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057564858 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092056191 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202408735 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200549127 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056058589 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066660419 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097516298 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151862296 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.10320871 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070055232 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077848033 seconds)
  done (took 35.484115741 seconds)
done (took 36.496460955 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083735583 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117620034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080026364 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120540502 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084878683 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106072826 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077878996 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080918293 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.109681096 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084265293 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108688773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057804653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103138638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079090343 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103673026 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095865101 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107013338 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076739288 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076519564 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.093625372 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076676743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093264476 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072316177 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058121614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105731076 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077162108 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075804041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104258979 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068712365 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094171186 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073386924 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076261251 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094392682 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08279872 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099808235 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077839757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078849767 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.106007172 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071553924 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092903462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078271248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06929261 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.100998196 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077406172 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074524736 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100341017 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077125443 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108318926 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096060818 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097226179 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077902581 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103475176 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081365693 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075451681 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.098728556 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077509324 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098296064 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098218889 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101519529 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073408657 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076484566 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103253486 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07555726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076151918 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10336273 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079012571 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105526193 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075105768 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102832895 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075723667 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069137219 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102883726 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073804731 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068117886 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.104929699 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080095172 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092005843 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076459664 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075665241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100492717 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069181525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071471181 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096653335 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075241658 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095671155 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059513292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074046249 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099206939 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06945825 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077278252 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.100332749 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075893396 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070621699 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106277794 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068966204 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099507255 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070547168 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069174616 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095991494 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073850186 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068018307 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097260314 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078342793 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094425769 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076935605 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082642925 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094974308 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075243639 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06749149 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095803934 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084392816 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104232664 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0690902 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096319069 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070076637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07643238 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093493085 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070181538 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068852352 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09385082 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075805563 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068725495 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097265892 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076741607 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107272129 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070228235 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072617253 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097171904 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070092527 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074264351 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094163274 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069683527 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070539004 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.092276729 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07155776 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093151562 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07700446 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069236012 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101368866 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070859623 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074896561 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096272586 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073909539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098405954 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069407718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062263415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096726912 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072366455 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071252016 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09359187 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071489276 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068816767 seconds)
done (took 13.925700318 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071022657 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17434484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130999155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101239698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116449592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069552703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105947205 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106971256 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.097262022 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132571685 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092707734 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112990326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119013164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093652954 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070029741 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073159192 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096579068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090921948 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.132164123 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113232924 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120275853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094967731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124833182 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095594242 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117908581 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09824595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.095255426 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073479648 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071615413 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131982715 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11408319 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073366296 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069052084 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131099317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123185305 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089528213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093877426 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08875616 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093166036 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070275599 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118996653 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105299053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110984211 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084727987 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.10229939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07253287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.0949651 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090530902 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119548613 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084680666 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11807085 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14006508 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072673888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.113354619 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068818532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118030903 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109283045 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073883381 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069585268 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.096691326 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06998723 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072006163 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.118543091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120675093 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074340049 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111067971 seconds)
  done (took 7.661637857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089782443 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121813001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088742705 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112372422 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069824569 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069794572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095304152 seconds)
  done (took 1.719280096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072126774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092455898 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119366531 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092349621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.116155752 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090282887 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105895756 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070141518 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113502773 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071624254 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090947091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134932386 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0711236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104361895 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094065033 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096113186 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094057538 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095865421 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074350312 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118791032 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074231805 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090304374 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.099075079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070125716 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110599999 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070813178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144855516 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075471135 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07068776 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.100562867 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068081683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146169807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10963561 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08275676 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069550066 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111293075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085196246 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093852942 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088216232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099519556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086179186 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07094461 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.097786885 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069068716 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075079451 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106845789 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071957959 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096752348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074814985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090114119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097335345 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08557417 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095693562 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075171041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071442875 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102792653 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080562868 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096645539 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091798315 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072594197 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114222341 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087337517 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.111613508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087053038 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09929576 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085866647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10972296 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074854787 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07169307 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099948633 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087857008 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093671998 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072949011 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080892069 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098314252 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093742553 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120013285 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072667444 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105393407 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072574076 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070787063 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095927513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094328185 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099485463 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072325875 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074434143 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098844893 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070114962 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069194889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099925613 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069871339 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071980034 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.100367826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07117127 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098448872 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088631611 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07059523 seconds)
  done (took 9.819509849 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073678799 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071268387 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098344668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071650164 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071060287 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097467416 seconds)
  done (took 1.572191748 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103248529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099039387 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085255736 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100712736 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111472244 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111868322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086757424 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112244826 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088753742 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109884269 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087334387 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112410521 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092309748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104121993 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085959301 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101913504 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087805984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106074339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084564244 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102253242 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093340915 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102411888 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079215967 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085907171 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102346157 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076990041 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107902518 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083379052 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109368909 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086564251 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103499408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074796488 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100530853 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086271801 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112216545 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075919539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101662687 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077356616 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106141 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075894122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111177901 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079010198 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082207665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102213305 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109479001 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077372115 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075496954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106948376 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085237573 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102391273 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075548602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.102094001 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075365851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099782661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077307805 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110391613 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076464176 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110120392 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078393365 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07563419 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.100496211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074667861 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113200207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074514439 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110915013 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075555743 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101674087 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078364546 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102405592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077784792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074608637 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100122628 seconds)
  done (took 7.797567876 seconds)
done (took 29.640772599 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662130685 seconds)
  done (took 1.738723451 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.799434422 seconds)
  done (took 1.881725686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.442685345 seconds)
  done (took 16.533983412 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.626980983 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.779693273 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813180384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134568189 seconds)
  done (took 3.437219538 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.907888461 seconds)
  done (took 2.015665774 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237677891 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.248293364 seconds)
  done (took 1.573877511 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772469466 seconds)
  done (took 1.868384486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.332573631 seconds)
  done (took 2.421366057 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324620426 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18159759 seconds)
  done (took 1.603974648 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537254637 seconds)
  done (took 1.63530271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.832364403 seconds)
  done (took 7.936373903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230035539 seconds)
  done (took 1.342481627 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274542487 seconds)
  done (took 1.375770301 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.362992764 seconds)
  done (took 4.464565638 seconds)
done (took 50.918746023 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081801478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082628273 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108226886 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080274556 seconds)
  done (took 1.450796878 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080190857 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074166095 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106826088 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075422483 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107305035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077015975 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104146188 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082433906 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075397766 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104491587 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076296934 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10155986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07995937 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103099749 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075987811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078690271 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106765241 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077017462 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105689845 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077317315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074110006 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105135348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079098114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102099586 seconds)
  done (took 3.239944691 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080506767 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073488615 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104150313 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076158644 seconds)
  done (took 1.441139631 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081874376 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119914681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094458482 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080389411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124185437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116609878 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074744541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07291954 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102845576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080894434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096214303 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103264827 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117682398 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079932358 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108027474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071034456 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072024161 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117822991 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080169564 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.108101391 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074715436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083300871 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098963248 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09347043 seconds)
  done (took 3.367674419 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079929326 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106874398 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.110302854 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092230892 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123448607 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069058137 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106922668 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094393827 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156931878 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068407707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.10132736 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069296469 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101293551 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071008444 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081438513 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140183076 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115913898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09952159 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099985378 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.096526417 seconds)
  done (took 3.101705405 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078158868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072439656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094906714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072555621 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079625949 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103774771 seconds)
  done (took 1.614077999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070891959 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069611237 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096610021 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070920828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074408377 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09725438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070246922 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06931857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097411094 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070564638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068875151 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095401805 seconds)
  done (took 2.063379369 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.452597347 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07283119 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096326355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071260548 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073926023 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096016453 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08471152 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070996296 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.123119682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069728924 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096426016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072860627 seconds)
  done (took 2.497362912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268177952 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081789676 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337387364 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17257782 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145732157 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161581759 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107450586 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14642821 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204548298 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143029076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205012976 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232220727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139841112 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172098692 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120596759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136140699 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191627518 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228522144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10828977 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233017302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213764434 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162164551 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186131295 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134036418 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139690595 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15557982 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07467476 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1120397 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238417614 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166367166 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208245432 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142190199 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10064809 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238918856 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232580381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203282482 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167535468 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090105693 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164261128 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173195508 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265894202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120320232 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199818759 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140442256 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111746432 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179094506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15205578 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152754116 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143132372 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119741737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180042019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248360706 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170172142 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118605732 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141114369 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148111094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147834375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10653223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249575464 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22597697 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162909053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101863636 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101840298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220606863 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16639105 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147121121 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158518212 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125061169 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17272773 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22047812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152294359 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178331228 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190775676 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093412428 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153356564 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203169744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163043364 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206219783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184668796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078938192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158161485 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136226383 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085275894 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175711789 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079133205 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240451585 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131207594 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14498716 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143523842 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140900494 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115102974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230042404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210100293 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107965954 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097099998 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135156906 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155918698 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184026369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119436688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140640252 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15291081 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083199741 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171165183 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107280867 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158026575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081588315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18444363 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167658926 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080146097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163275023 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135479458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133791034 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169676023 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22816848 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09494134 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115279208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205834532 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186532623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13719298 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184132286 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195576554 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.134490014 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136668355 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21195118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24975792 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095186164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230783237 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140999164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088630727 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120375826 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161479382 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147369846 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155651948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086085956 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18462182 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206725704 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106619034 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100302879 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198444681 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086912888 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112974973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14555897 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133062057 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100630919 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133453002 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139276438 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175043649 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158638756 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140038016 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157656238 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131110532 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233404402 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120252232 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134641459 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110244975 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101125782 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170105021 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195973105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113013729 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232594478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160750875 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135769133 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153496619 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087525699 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17569262 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11090842 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074126953 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207602869 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143184535 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11538022 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218399113 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135287614 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161214518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158069946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169494366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164677748 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193641743 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112399717 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120315737 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145997703 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161246284 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103884959 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099025943 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114599324 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136081909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127668892 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090477773 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175414838 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188708698 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10265918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146708032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130570204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18518296 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108561624 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16423893 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.15235644 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126586584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19183365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220957215 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171176214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132723823 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181493701 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102589618 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078201233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123993019 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16244759 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114171386 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088946999 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151423706 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21318956 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163283868 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172146333 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144490694 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156685591 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19317687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103657765 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120058696 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214745559 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158096795 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162682493 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092625865 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129968064 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180496581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140527647 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249833283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150294193 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158583402 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218476183 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136901761 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085246608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140690668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172537517 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13852139 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216126791 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129724786 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090706774 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138971946 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109365202 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131941133 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157558141 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148319151 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163910864 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145755884 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193743259 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080866074 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146130382 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153215707 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151554368 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092277597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149505416 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220036237 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099041043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150557132 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21838282 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081391015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157473468 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24395161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207941743 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090220997 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144074888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156042078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160081055 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14890023 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197584745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139906005 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16663133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1125623 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114441324 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114905311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100148968 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135877596 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125617452 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139806322 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146242987 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122470601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161446163 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141050664 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140046624 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14899006 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100660291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.124181451 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129454484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215692586 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154939181 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241364981 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.134548997 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210038512 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200556321 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10436586 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080771657 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109656025 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170857548 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11356562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163438173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123654613 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108102221 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157352344 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206380169 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099498308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099115204 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143359457 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168825191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144301731 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130718192 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111087045 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231518479 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136724618 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084327976 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155980635 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133905925 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133351193 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237122621 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063854554 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129317418 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079885504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110183718 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162628056 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213630117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088261119 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160715769 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150772621 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150523176 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160452654 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13078366 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098291769 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142240727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208090888 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159019566 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117176909 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115507441 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187984722 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188199068 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134799578 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124776471 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234105641 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188211419 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225388919 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117574856 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145681403 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148766797 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113016495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199980841 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112973765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200760103 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113163786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166935146 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134694147 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12204977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158856365 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12577427 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106639344 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208929541 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149263208 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110497361 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082444975 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146683291 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152559605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135830681 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103644987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170171853 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073637553 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194973734 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201573631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110811791 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136593634 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097293654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112744624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137447091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132422182 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114354739 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124289473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235284787 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119194372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182505492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198992998 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147454658 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173758695 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133825144 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670844605 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082200521 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222052503 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150559649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238112347 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126979978 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150981798 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139808097 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155195976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181285073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139064396 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209722398 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167705484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156186165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112844589 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136021193 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145073303 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096883206 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140758729 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150547611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152243408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138231755 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156336375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161447895 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.116423321 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098238074 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219451878 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147833783 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173332307 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200489527 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086610975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148953813 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199719029 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081537279 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17905811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194279617 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142536663 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131718713 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083042466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135360185 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235552513 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074579757 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226819629 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155280106 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140958048 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143856362 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148174748 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191357989 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137713635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156943724 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123452418 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141799967 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146211912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086970006 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107794337 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135212473 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14285941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101635964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131611466 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148712302 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187558607 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098872442 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09947314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132400932 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173968635 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239172428 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118462995 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084599022 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17601403 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144064989 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146734267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156922013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084307204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112477025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084020134 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.143772203 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146126581 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146801933 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105524638 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140836661 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235819092 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118177426 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229037072 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129776853 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136112026 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071656222 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10911986 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125150582 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100998526 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137887262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127943444 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234333699 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09969067 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120166779 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126542306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07824444 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116098088 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166731054 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145159371 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156949513 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131270216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068193272 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143814723 seconds)
  done (took 73.460818894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.138933763 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109171744 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122560345 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177381733 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151188552 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241409946 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185080416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227924079 seconds)
  done (took 2.54305246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071873265 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123130984 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106091557 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12284434 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.097633857 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072987781 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311934191 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.116559708 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071201781 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123481881 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124911198 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097126407 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486459308 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068870545 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099182309 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.09363946 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069867314 seconds)
  done (took 3.439213544 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434394656 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.653658974 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.460588729 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075526076 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.006914672 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112311296 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.559811099 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168438094 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097170832 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44757512 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725194706 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163499396 seconds)
  done (took 18.095356799 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078106052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071651092 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116010938 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08779535 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103702556 seconds)
  done (took 1.648600679 seconds)
done (took 119.062810545 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083636758 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.365389243 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056847111 seconds)
  done (took 1.648841034 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086733001 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087555319 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117888212 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08622592 seconds)
  done (took 1.581371218 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077576022 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079978761 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116944546 seconds)
  done (took 1.474741057 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.293551977 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174058385 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094257274 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086216819 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080481345 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110170595 seconds)
  done (took 1.479786484 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076902023 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077861173 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105855965 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079744499 seconds)
  done (took 1.535686411 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080055214 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055530473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057377367 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088224819 seconds)
  done (took 1.484133963 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093352174 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109998186 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084945813 seconds)
  done (took 1.488182906 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108791084 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114527291 seconds)
  done (took 1.425487938 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083595977 seconds)
  done (took 1.280107944 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093537346 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141860944 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159485972 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141268626 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.172387679 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137934866 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087077148 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116773598 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105758651 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089569896 seconds)
  done (took 2.447042813 seconds)
done (took 17.684630607 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080235308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392942667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363163536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118057036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672325076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357849435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002099546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119015515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124150841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097262481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084309341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678407994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973281877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350637318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95262304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324393222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679034612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069375948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070279726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099339719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968497771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100118575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071618117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071557498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684113724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374271262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10059017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326749104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070101528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103128169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358381542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099689287 seconds)
  done (took 16.129566282 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073784279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147605106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077873097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087456657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103480658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073131842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104008003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073366006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158878113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071374826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118637265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071939488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102194021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074410859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090605214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101035658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072767578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07068764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101765556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072436377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119539969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072138558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07091916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10184471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07097985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112320029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072478899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071046392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10074972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073907236 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103119238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073656924 seconds)
  done (took 4.093304519 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119189509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154839329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07674679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132305463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116804848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099834583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170647951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097147708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161646493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070646977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118499662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071775622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134259953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072739066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120287982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072356833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071457238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101508623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071688283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100502819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092160666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070579294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101319393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072535291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100436079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085550316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098972171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074437064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072220606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103097369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075608384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071204008 seconds)
  done (took 4.364744687 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07587485 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077546811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115402893 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087632003 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101935401 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076578479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075545823 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102593736 seconds)
  done (took 1.931065796 seconds)
done (took 27.723410764 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080862341 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071031358 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10223261 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082744741 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100402023 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082757874 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070808054 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107550488 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080352073 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075998747 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.109111029 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068865277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10011576 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069718981 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075166807 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097754324 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081081292 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102469963 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082945872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082585558 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.103617283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080349959 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106012281 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083000766 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110707641 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084333743 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086100867 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106667402 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071370311 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10016071 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079297267 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087513082 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102407935 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.0822991 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10107605 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072650343 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070611771 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101219275 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082507454 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106954485 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074885706 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105285532 seconds)
  done (took 4.927355984 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092450142 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092777759 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119105714 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.073753575 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.1052159 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066812583 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.12227656 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075380047 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.098750884 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094210915 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058398549 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.092172967 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076302709 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06504235 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.101374588 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060628309 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061844075 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.088984642 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06420497 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062728303 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088698214 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059004261 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063903129 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066256859 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.089734904 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066007413 seconds)
  done (took 3.317433887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078915502 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087205821 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121509629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133362093 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13974686 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081587328 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113028216 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091734555 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120281075 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070716156 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074050709 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131555029 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091638792 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10749826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071278281 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.121099956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087067319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072243482 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10784554 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094322006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117018151 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081623246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.125640802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086350625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070116984 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103451301 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074890641 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113111713 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077020647 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079567049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10605755 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074388931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101911965 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084039029 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074161402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.101124301 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092571464 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107729632 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081352104 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069552604 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101561921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070040228 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120822852 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116118194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099409015 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079504556 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078024217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.11020546 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.083300495 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119648597 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080997261 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069707945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105315304 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070469118 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100249115 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086393007 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072367012 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104169684 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079739485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103047387 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084837799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074271747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116569203 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070331686 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107614601 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071444234 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071489264 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.099625678 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096337993 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100490847 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116248931 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100298945 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073809498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080183961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.109075015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076984908 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098629008 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08831158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080545526 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104078745 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079549089 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102698033 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075096042 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091628629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.103829705 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073435735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071663882 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.107897563 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073876956 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100538175 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08565408 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070116064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104084782 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087373638 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099745599 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07312085 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076262343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.106085802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070559789 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112364821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075870656 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070586579 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.111102655 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069888735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.1031617 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081428835 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074493222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.100576708 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075758638 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.106285482 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072184012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07164775 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104314869 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072491565 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.109493409 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078755752 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074958318 seconds)
  done (took 11.933594457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195898799 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189529099 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072403523 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182065247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076808959 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109249607 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180759365 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097539461 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099710667 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070899497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069615636 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133169022 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125394958 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108836391 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109097851 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069078879 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114930017 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10557843 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184149171 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178064538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116607503 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078945834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070671556 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099037479 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071514281 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07790888 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115092049 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077754773 seconds)
  done (took 4.411664483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083368113 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138686339 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076066435 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091415753 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122587426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068655914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104083959 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070282203 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109804307 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081433709 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09674264 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075224458 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07511783 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107507598 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069103658 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106528558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079405736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070461871 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102191285 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074062803 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109446752 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082029841 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101360152 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068739756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075746136 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097134507 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066442968 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115119221 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068393387 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12031762 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067890284 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073812848 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.117204287 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069527741 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097064069 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073204395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071597454 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101314764 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070789701 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066866443 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096544265 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059079254 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06700495 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111494216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076059203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.09157412 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076210169 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105116692 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077476739 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06887427 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103437189 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075078094 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073972444 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115642711 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076883542 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105491263 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077527713 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069585699 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10911611 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075316002 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067487684 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098935597 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076833019 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09899343 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080859028 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0760149 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.099765022 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075449594 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076177071 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108587238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074824098 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102951028 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070734937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073480549 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.106618641 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076213446 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07529692 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100201095 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07072174 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070779308 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.088277555 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069532077 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05578239 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105573362 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070019339 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096422233 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07458995 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07473564 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11019103 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070089184 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103905132 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070127302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067980595 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101608146 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065054282 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098400423 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088636329 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112573307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070054731 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067112827 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115384034 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074011472 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095113076 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059534956 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076343265 seconds)
  done (took 10.227039446 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099582825 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092865535 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100433294 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085510784 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.130058664 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095348638 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108758738 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079073875 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072056171 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119075239 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071613483 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.11001011 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072279801 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079628701 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.132109884 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079106174 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099907232 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080012437 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072628669 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139104141 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083815834 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112738851 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084001984 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097210593 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0745838 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080689458 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127016107 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081349611 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108808148 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087996471 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082369479 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12626842 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087356863 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105361956 seconds)
  done (took 4.502625334 seconds)
done (took 40.529682657 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.299403132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.513478157 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.288442873 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.258607561 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.307252941 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.311124143 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299885522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.285260285 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.734224334 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.28928615 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.516403873 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.017073643 seconds)
done (took 60.356363871 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.356193991 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.423051132 seconds)
    (2/2) benchmarking "String"...
    done (took 1.555174968 seconds)
  done (took 4.209101627 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.645240421 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.288915037 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.575183745 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.284524369 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.305666391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.707392304 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.986175377 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.133694677 seconds)
  done (took 28.511049184 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.284049373 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.680659293 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.874545382 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.868351599 seconds)
  done (took 18.938965648 seconds)
done (took 61.893948551 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.287392413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.346966473 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.288392116 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.269920899 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.416192526 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.308124687 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.620944424 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.50961467 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.289523119 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.271404835 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.303635644 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.288368914 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.297899199 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.596905188 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.285495477 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.28561443 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.337367197 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.757446036 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.681378238 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.290352927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.323345086 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.35228959 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.286595668 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.300491201 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.351400131 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.287167458 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.295408381 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.290194871 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.628697801 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.289808391 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.38697781 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.843815346 seconds)
  done (took 194.600830456 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.287184013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.31783901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.466792243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.348747826 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.91095324 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.489663651 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.428250041 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.988132364 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.308099992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.320095151 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.432079013 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.289929285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494869582 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.258883108 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295897588 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.292233518 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.559190112 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.530348432 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.310299994 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.563263824 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.313681344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.287755915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.236164786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431481511 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.312019164 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.333493955 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.309685868 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.310186173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.477601409 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.482823331 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.30789913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.292720842 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.892758761 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.148758655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.298471825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.318364499 seconds)
  done (took 152.879167205 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.592276595 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.288085521 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.287193119 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287667707 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.318441965 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.288548567 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.836237486 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.841887948 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.795922758 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.362652671 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.350852736 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507774518 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.289088548 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381619634 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.302250577 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.28870778 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.303762688 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.313000656 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292931418 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.288696101 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830642785 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.303832707 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313015204 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294779583 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.290035606 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319963146 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.683985373 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.289599972 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.289291735 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320284054 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.60933934 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.337385572 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2897607 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586290627 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.853670253 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397524046 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.290890284 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320256291 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.290176927 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.559180822 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290348497 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.290688485 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.292526467 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865256956 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289384858 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839326786 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.29372588 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.290216169 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.289832639 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.290005261 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192865267 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290465501 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.641184565 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.732100418 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.290705383 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.290893553 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.292955712 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.291250016 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291325111 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322347856 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.616604267 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.390446525 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.292985605 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.291767737 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.295018048 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322590001 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.291176553 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.535288536 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.291795094 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.281123251 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.348606599 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.396742078 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831506128 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294191214 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384750033 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410788677 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.292719167 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.291403546 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291148182 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2920048 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.398597552 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.293442053 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.700888585 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298247462 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.29277965 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.3513673 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.386854351 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.292556936 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602097455 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.293635685 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.293086718 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.005777654 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386007099 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.292648585 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.292983256 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292821055 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.700606984 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847723331 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491726376 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.296203471 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.599254153 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.297164574 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.709937823 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.822993931 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880346409 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.293779272 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400248183 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297793548 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.294254863 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.292855231 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.32245045 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.293944465 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.353867028 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.292557065 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.690292956 seconds)
  done (took 355.096479609 seconds)
done (took 705.402172019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.951922693 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.939959899 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.060183976 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.936070414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.915961838 seconds)
  done (took 11.041880697 seconds)
done (took 12.279880322 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485083675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485154904 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.355197922 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487912139 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322984493 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50382991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465861946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.313790622 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.398897393 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.373161379 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398108611 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345734117 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321699927 seconds)
  done (took 19.496544103 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.61443343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.613902398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35824936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611416928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333803233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620044405 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492558761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.501940164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486493599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308497113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308330947 seconds)
  done (took 17.490458651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620162723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.641369555 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360245833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614281895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335463874 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626006053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492507317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.504878783 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487181926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308874508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308326741 seconds)
  done (took 17.539994784 seconds)
done (took 55.76548409 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.304155574 seconds)
  done (took 2.544299894 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.341263212 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.501085686 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.320729219 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.308888306 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.30576178 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.305084502 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.309066652 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.305876793 seconds)
  done (took 11.939177349 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.301892095 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.301747504 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303404305 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.300847736 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.303860313 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.305063943 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.301211355 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.304286981 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301987233 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.304378543 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.301682407 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.304273151 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.30161423 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.304406156 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301405895 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.304856922 seconds)
  done (took 22.088208516 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.304445705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.301167728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.302738763 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302700958 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302411917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.303421536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303870829 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302438134 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302315481 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.30280559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303614713 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.302223594 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.303156099 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.301912767 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303452667 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.303435895 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.302857526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.303484261 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307355422 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30290266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.303480017 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30308628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.303418711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.303959731 seconds)
  done (took 32.521734179 seconds)
done (took 70.334108498 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.346858417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.936496631 seconds)
  done (took 9.526825591 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.306389561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.305246387 seconds)
  done (took 3.856035512 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.305282918 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.305045048 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.306082332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.306151267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.30604082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.306012556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.305860769 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305153732 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.306992438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.306263321 seconds)
  done (took 14.302799503 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.306719915 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.306680522 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.304016186 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.306373008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.306564368 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304959427 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.306957102 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.306835871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.307715672 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.304368046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.306531489 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.304483275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.306662382 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.304538662 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.306777178 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.304362516 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.304046215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.305203727 seconds)
  done (took 24.748228281 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.307606532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.30639823 seconds)
  done (took 3.858973777 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.305271371 seconds)
    (2/7) benchmarking "second"...
    done (took 1.305080505 seconds)
    (3/7) benchmarking "month"...
    done (took 1.30459521 seconds)
    (4/7) benchmarking "year"...
    done (took 1.303938454 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.305928341 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.304843615 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305926369 seconds)
  done (took 10.381142999 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.308121586 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.479403216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.560956559 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867321811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.30903345 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.311426489 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.149576496 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.312962339 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.313923974 seconds)
  done (took 14.858337309 seconds)
done (took 82.775372466 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.31694444 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.302521005 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.173228723 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.319772019 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.317328357 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.60032347 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.319171001 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.426860026 seconds)
done (took 38.022424818 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.319047696 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.018228197 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.017343712 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.301136501 seconds)
  done (took 11.583000961 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.296165152 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.236623947 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.289636623 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321397471 seconds)
  done (took 18.391081265 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.921587678 seconds)
    (2/2) benchmarking "read"...
    done (took 1.636003854 seconds)
  done (took 4.804212246 seconds)
done (took 42.344028162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309811772 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.308764772 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.308778775 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.306968856 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.308392123 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.305959516 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.30702894 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.309617478 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.306444261 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.308922182 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.31018656 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.309324108 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309856888 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306893697 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30706323 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309494621 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.307443317 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.307848268 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307772382 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.310713815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308144949 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31111187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.30655514 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.306934646 seconds)
  done (took 32.647922982 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.310501657 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.307611048 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.310948065 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.3103664 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.308291395 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.310583025 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.311178903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.308692669 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.310536267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.310794179 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308923063 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.309155024 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.309994853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.308285192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311212678 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.308129011 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.310480285 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308625642 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311316513 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.308889884 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.311559574 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309477905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.308598053 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311803269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.308984729 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309279808 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.310763662 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.309895408 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31157702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.309648111 seconds)
  done (took 40.545596234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317796972 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.318691914 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.312129859 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.312864346 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.31177791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.311715436 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312389801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.312441607 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.311627736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.312397628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.312173798 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.312837487 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.311688315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.312640837 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.312396014 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.312249358 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.3128494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.31299638 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.31251481 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.311722807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.312806146 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313082937 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.312741381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313598673 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312868224 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.31283731 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.312275165 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.312444115 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313486057 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.313549018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.313275732 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.313555869 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313795506 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.312930046 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314275079 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.313205573 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.317691427 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.320273346 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.313987443 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.313975255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.314574327 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.314195358 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.314828809 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.313861806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.3149009 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.314462336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.313660984 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.314235802 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.314990788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.314503279 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.314031739 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.314066263 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.315064687 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.314998802 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.315005159 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.31376496 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.313993926 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314911827 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314651963 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.314946036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.31557578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.314596297 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.314889254 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.314330989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.316377501 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.314913841 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.315266167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.314886709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.314812381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.314844347 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.316607361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.315207226 seconds)
  done (took 95.857903048 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.315871562 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314396004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312872886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313771019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312037319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316702115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.313006974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317827004 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3140335 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315235446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31472138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.314114393 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313242107 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316477636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31559244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313587016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316723184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313412724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.315708335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316636312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31566376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.313522294 seconds)
  done (took 30.178150254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317169783 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316278004 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.313506283 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316304577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313742958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316431372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317356869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316263817 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31747639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315570098 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314498925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318164205 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314474139 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314462826 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31472909 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314599794 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317435742 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314097403 seconds)
  done (took 24.936354168 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.315495436 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.315732926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.316997048 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315551671 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.314930854 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317347745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314513718 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317414971 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.31850541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.315070563 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.317407334 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317158649 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.318608312 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315475243 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31818909 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315738274 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.318331693 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315484692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31799614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316325828 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.315476887 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317922489 seconds)
  done (took 30.220906591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318658856 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317777648 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.316763269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315636929 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316277871 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.317168975 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.317499842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.315728259 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.318667337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.319691939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315983189 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.318814307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.316497942 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317204278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316181034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31545952 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31924118 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317035631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318613582 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316179724 seconds)
  done (took 27.601578521 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32090935 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321860175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321102029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321309843 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321257868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320846516 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320781245 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320750719 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321567869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322221628 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321761784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321284793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322513373 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321993464 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3217651 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321235813 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3221696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321861956 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321944087 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32227926 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.322330468 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321974976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321941902 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.321877278 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321823249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321447843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3218578 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32288465 seconds)
  done (took 38.265507245 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321666166 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319940137 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.31885126 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.318538999 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.318662041 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.318210303 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.319039848 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.31907614 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.320859649 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318552142 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.321809107 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.321428988 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319980371 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.322042026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320998094 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.321841898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322663571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.319139564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319517085 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318701575 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.320919552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321873836 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.322074527 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319592554 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31989689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.32243974 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319748863 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319714633 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322349939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.32015782 seconds)
  done (took 40.869609277 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.341615764 seconds)
    (2/2) benchmarking "in"...
    done (took 1.340738756 seconds)
  done (took 3.941467992 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320568698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322891258 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.322651033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.320611504 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320006189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.323083378 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322792525 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320913798 seconds)
  done (took 11.833585319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.323366477 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.322753815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.323140505 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.322623608 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.324044102 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.32445368 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331433876 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.340780731 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.326371365 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.324733977 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.329516005 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.332412791 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.327906275 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324300484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.324822593 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325737627 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.324215338 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.324881226 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.325207554 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.32440637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325826143 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327254165 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326832682 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.321783017 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.326316501 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.337789752 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.331375625 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.324204976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324910007 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.33044058 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.325071068 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.322815765 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.326153015 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.326431827 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.32439676 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.325521308 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336808109 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343492525 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.333573412 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325971999 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325123123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.324218266 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.327818788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.328429146 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327332301 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.326074029 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.324911419 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.323177908 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.325337114 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.328433254 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.331237757 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325182528 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.323692451 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332581378 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.329736908 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334212358 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.343996289 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.329888384 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.334797235 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.339141528 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.339928638 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.333668192 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328183777 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.327059908 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33626102 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.35040664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335294166 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341948517 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.323734902 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.326893973 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.336702846 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34120235 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.337170897 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.327074791 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.328020155 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327115403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328179605 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327669106 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33615637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.349778474 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.328571598 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327814315 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337900276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34997997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.328287614 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.327681393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.329564511 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.329186286 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.328949529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340319946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.345959394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.328100459 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.328716934 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.329260872 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.331182479 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.329208892 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.32775978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330687423 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.326374266 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.328653677 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329483261 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33257528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.340243191 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328916398 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329851315 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.338483705 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.328786892 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329337749 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.340633016 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.329892762 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329885457 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.330890013 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.338318963 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.327336898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33326331 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337990311 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.330980782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.332266408 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.329803442 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329860193 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340113917 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.35781295 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.329665481 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.330362707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.335610779 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.341845349 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33050499 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.334213064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.330964071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.327639402 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.328002149 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.332355441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.331075859 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331585878 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330471939 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33248076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.327818641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.330520999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.331478484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.331942051 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.333437515 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.331856053 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.333332718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.335021581 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.332805243 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.333452259 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.340573953 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.332872836 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.332919527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.333892796 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.328712369 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331414625 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.333853256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.331737367 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.332722302 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.331938046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.331998263 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.331868759 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332195874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.332527888 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332783679 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.332525229 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336097872 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.332065211 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337580861 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.330995544 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.329835618 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.33256297 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.332393223 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.333373692 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.332898094 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.33138764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335314787 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.341884134 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333414605 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.333013805 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337027722 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332558578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333954328 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333926237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336071686 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.342722457 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.333906877 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.342520535 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.333658757 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.334777501 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.334140877 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.335249199 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.333293431 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334036218 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.336985098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.341017645 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348802985 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344157482 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.335594754 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.337542661 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.335371737 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.338938619 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.341308857 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.333943068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.333912254 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335067034 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334081046 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.334911521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.337675749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.33425096 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334313248 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.334757341 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.334640382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.335598877 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334319088 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.33615681 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.337896008 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.332222232 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335905138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335373324 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.335412147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.332654679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.333970641 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.334004616 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.335408473 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.335971622 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345889366 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.332637969 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336576445 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336185233 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.336024143 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.335242003 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.336665137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339478121 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.336952557 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.344776124 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.354382437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340205886 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343856406 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354482567 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.33657277 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.339846233 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.335827794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.333998431 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.339446897 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.343562446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.336292657 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.336668095 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.33663779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336490718 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337299923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.346135522 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.334970989 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.335945562 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.336115609 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.340084938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.333838287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.33820779 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.33831792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.339316054 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339989358 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338628995 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.338127231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340425597 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.338386845 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.338699526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338066605 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340690315 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.34546613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.344610165 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.33916853 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.341599479 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.339295252 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.342731692 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.339386357 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.338322314 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.337610099 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352222937 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.347823033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346328102 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34208878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.337935628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345308225 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.340440993 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343420716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33956224 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339737848 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.338694113 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.337641124 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.336141013 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33983871 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.338535329 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339777166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.340288841 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.342233042 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.33918768 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.337988013 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.338198038 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.33920232 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.338702115 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339621816 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.338788578 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.343744777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341140255 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.339060301 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.339169504 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348247318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357755126 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.341561355 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.338550818 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.339440952 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.339700127 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.341963224 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.339754031 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.343526734 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.347689252 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.34344926 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.350372139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.341272402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352497887 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.340511242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.343667744 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.34841335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.337472442 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.339118585 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.341209964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.34002817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.350143175 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358645767 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342857463 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.344637733 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341639975 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.34048864 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.340175333 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.340625201 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341458215 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.341492778 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351489459 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.359877986 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.345327308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342784938 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.338917186 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.34162371 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.341011478 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.340464724 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347893506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.342177578 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.342456306 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.340775346 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.342067164 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.341574983 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.34133014 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.340867019 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.339446848 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.341483754 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350231733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.360649137 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347710939 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.341621653 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.353966331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342589377 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351160583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.36028015 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.343800313 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.342320009 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.342134457 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345423384 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.343124451 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.344873953 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.34290741 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344005722 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.346444695 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.342859494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.346391189 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.343507503 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343414231 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.343433188 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352266047 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367450183 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.344881573 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346861078 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.34038585 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.345243559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.34726563 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.344412456 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342787775 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346131855 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35353163 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350875471 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.345232788 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343983721 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.344756274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345208208 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.344726853 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.344246629 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.344014485 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.34382787 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.346218837 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.344543666 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35038997 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.344005199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.344988041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346310066 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.345518296 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.357041169 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.344948881 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.346325134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345368447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.344710806 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.345634098 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.345259935 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34511855 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347334436 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344004654 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.346433728 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352016204 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.351786126 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.349781723 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.345742236 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.345436281 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.347851244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.3467499 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346118718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.346739978 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346158732 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.347379403 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.345820452 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.347783155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.344376684 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.346976198 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.345362329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346205083 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350727404 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.352663407 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3474231 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.343688001 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34586787 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346232845 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.344539178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.347497913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.358888343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34898309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.357376092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.35482105 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351763906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.34808952 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349287949 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.355230449 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.344971451 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.348973897 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.346210358 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.350202942 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347230283 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350453222 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347633642 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.356375649 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.347465055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346864007 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357236097 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.365930772 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347892012 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349228091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351467796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.348251898 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.343697692 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.347722848 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346949228 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.357080585 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.367984357 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348184944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350627968 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.346212132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349384408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352728197 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348107281 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348786581 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.344567505 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348610661 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348468641 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347861216 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345422465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.348547213 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.349654177 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.351459245 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.355452683 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.345954657 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352091363 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.349567673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.351238233 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349449856 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348434585 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346403542 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.346727554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.349100796 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350377405 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.349889902 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.351916863 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.350123236 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350092234 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.350227033 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.350664758 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352901484 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.358892244 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.356500759 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.346405205 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.349459275 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.351232876 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.3545818 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350331989 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.349876515 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350981943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.352318842 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349407594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350199011 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.349867361 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.352948366 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368390011 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.367370385 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351101536 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.351198845 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356898506 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.350296353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.346754008 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.350917102 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.354841551 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.353389092 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.3582839 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.351394166 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359130963 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368775404 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.352651917 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.354761392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.353694291 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359506159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.355290545 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35140399 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.351322723 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.356478428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.369292842 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351289355 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362132137 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382697864 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.369952468 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.353120122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.352195854 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351117098 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.351840445 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.35490449 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.351908018 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.352734187 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351758238 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.352025311 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352999744 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358593958 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.354399502 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.353558905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352246845 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.352338865 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.355323003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.349849181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.352641533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.35211915 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.353266345 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.35294652 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.353366858 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.353633513 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367477406 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.365730459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.352966147 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353073361 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.350646809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.357976782 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.356729783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363810886 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.36023306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.354882507 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.353545822 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356348178 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354190865 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.351413845 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.354829274 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.354453328 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35355409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.350287531 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.368248307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.362656359 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.360501757 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.353972311 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35436483 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.354420321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355987754 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353728801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35444742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.357643386 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.354137216 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358150731 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.354572301 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.354903774 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.357075368 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.36211994 seconds)
  done (took 801.115697275 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.352355079 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351651688 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351535771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352022074 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35185882 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352019697 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351138407 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352733935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.352372682 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.352662899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.352838068 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352077766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352584128 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.352608766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352217738 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352113606 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35241027 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352926968 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351423738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352586821 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353379189 seconds)
  done (took 29.689330702 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.355572095 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.352754546 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352580958 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.355361513 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35310677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355353005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.353303581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356508164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356035299 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353163267 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.356323804 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356033405 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.354329671 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.353548074 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35348244 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356057899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.356927064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354304388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.356664618 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353746689 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356646967 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.353398919 seconds)
  done (took 31.097648431 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.35797361 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.357232278 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.356526583 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.353486886 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.357537722 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.354459344 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.357551329 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.357224089 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.356004758 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.35890915 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.356962136 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.358108225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.364517901 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.362023848 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.360067387 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.356979107 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.500642189 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.357741897 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.358665788 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.358672313 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.354314955 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364315761 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.355705215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.354176772 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.356824962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.358147177 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358957247 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.358306305 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.358414478 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.359144675 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.36272826 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.359175803 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.357951111 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.359892877 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.358388533 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.359755289 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.361835465 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.358882294 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.356350475 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.358594508 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.369188442 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.378854441 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.358615978 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.367150022 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.359627511 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.359500142 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362985827 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.36697254 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.356409348 seconds)
  done (took 68.04741813 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359829131 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.359323836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.356689241 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.358938289 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.358763165 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.358693635 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.359392952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.358585411 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.356523516 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356560653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.359607954 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.357280126 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357544751 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.359192824 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.359960384 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.357383155 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.356666747 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357568964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.35767472 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.357608774 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.356632049 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.359269893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.360005411 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.357202614 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359894429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357474887 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357814285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.361311824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.35778236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.3571355 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.359834384 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360553756 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.360776322 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.357314214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.358078187 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360831179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.361235516 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.35851177 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.360283452 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.358097423 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.360841833 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.361481033 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.360439497 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.360461119 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.357928637 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.359302089 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.358554909 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.358801953 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.358754331 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.361217911 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.362381386 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.358802324 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361357994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.358838011 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.36427694 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.362305495 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.360254509 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.360102981 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.362405518 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.360520746 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.359881358 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362101487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.36019074 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.36261428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.361184856 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.35985263 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359428619 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.361608181 seconds)
  done (took 93.73712327 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362526197 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.363798177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363922415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362777419 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363507466 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.362979465 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363307769 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.364256243 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363914495 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362821317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363338209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362824674 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.363516472 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363178025 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363759046 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363835165 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362698405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363625509 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.364411018 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363861752 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.363816665 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.364143119 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364136479 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.363460955 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364913971 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364610654 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.364756658 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.363957384 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364377483 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364586793 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365865057 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.364128663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.364777433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364739995 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.365298525 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.365306677 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.364503194 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36458824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.365399519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.364427703 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364938699 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363861365 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363950557 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.365259262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365401957 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.365013941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364622404 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.365929443 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.365943405 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365369204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.365665114 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364624327 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365188164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366183999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.366038842 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.365903942 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36611253 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365869377 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366452408 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.36587728 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365454835 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.366044648 seconds)
  done (took 85.90158971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365405504 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.365463955 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.362375382 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.362909972 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36548959 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.362668038 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.365432213 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.364932801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365594159 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.366213174 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366402856 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363899401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36210791 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365888958 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.365265414 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36273489 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363895639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.362881595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366259219 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364098522 seconds)
  done (took 28.591754982 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.365197608 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366311197 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.364430308 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364316944 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.36727147 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.364711962 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.367389861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366834787 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363743535 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367518698 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366771052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367318649 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364804901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.365267172 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.368057026 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.36556944 seconds)
  done (took 23.158590102 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.365226689 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.367363917 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.368284597 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.368750955 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.364763114 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.365760315 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.367598899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.365808212 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.366125254 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.368748736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.367106794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.368220619 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.368644502 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.36813299 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.365671522 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.367423367 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.365078117 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.365884791 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.368195813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.369089956 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.366950846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.365180792 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.368272608 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.36792117 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.366059161 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.365509445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.365813041 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365413858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.365904135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.368993776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.366418982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.365805538 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.367219835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.366374397 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.369550623 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.366071162 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.36899841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.369013103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.368614934 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.369131618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.369768946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.366845069 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.369834391 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.368956506 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.366806966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.369513824 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.367973596 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.367497472 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.367505353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.367394399 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.369339544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.370137462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.369730683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.37011283 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.369665179 seconds)
  done (took 76.521986359 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370580542 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36998087 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.367600851 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.370285395 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.370081964 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.368183124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.371215712 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368014961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367451239 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.37078952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368040137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.370715564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368397301 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.370519511 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369360285 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371630092 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.368087623 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.368702352 seconds)
  done (took 25.956034648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369614635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370185358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.37123192 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.369285076 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.369139115 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.370891062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369151125 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.372985826 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37099422 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369798454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370205453 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.372149628 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371567829 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.371603984 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370061916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369205178 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.37198948 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372631522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370347735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.370019549 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372337134 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371737932 seconds)
  done (took 31.465300563 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.371520948 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.371802347 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.389294791 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.41619843 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.400943317 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.372862887 seconds)
  done (took 9.631035007 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372575796 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372430265 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.370115127 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373151012 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372699583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37033285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37017062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370611261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372083353 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370864684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37006534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373084294 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372869138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370789001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373315345 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372576683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37027042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371480354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371636328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374157607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371519211 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372798059 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370466908 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371061468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370830405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370733492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373507363 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37191312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371815634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373706973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3739679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37183192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373423576 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372353033 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374117924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375484211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37181007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374404071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37416046 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372657226 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.375401951 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375901842 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375352778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372158719 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374170639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371983359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372289895 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37251916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372116836 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375758386 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376303657 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37195733 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374353971 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375400535 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375580266 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376056778 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372642084 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371910209 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375832251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373507483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37346914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37488373 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37291569 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374136533 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375503946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372613088 seconds)
  done (took 91.923426548 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373965075 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373416768 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372622799 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375593158 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373230709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37370313 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373338144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373798283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373719179 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37358642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376016298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374123134 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373369087 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373968426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372864963 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37412457 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37314621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374511394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374511567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377883258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37412198 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37473354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374916881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374584851 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375284445 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376531136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374004596 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374440927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374761551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374367635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3744471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374221947 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375078694 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.375820783 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374701689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375186152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375687653 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374924927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375507379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378161106 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374485543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378535923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376065775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375379549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37678615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375082427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375450218 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376129192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375784246 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375062578 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375763266 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376225817 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375994847 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375213199 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376352498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375738554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37584525 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375958858 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37601478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379375331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376505279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377283793 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379771878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375783922 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376367433 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376924693 seconds)
  done (took 92.081048882 seconds)
done (took 1867.06375113 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.387359704 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.444270507 seconds)
  done (took 14.145655664 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.541347889 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.493140754 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.377529061 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.430656161 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.377811952 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.382989327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.394353402 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.378333019 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.377523626 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.377937578 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37866336 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.571692322 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.379713123 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.378460788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.377480488 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.469754642 seconds)
  done (took 44.005294299 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.405417148 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383350788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.499839292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.397853377 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.405162834 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.573326252 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.436844341 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.383072126 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.557253828 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.419718568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.971258476 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.404867333 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.381476052 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.512229884 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.402003646 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.573405681 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.633813913 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.973935291 seconds)
  done (took 31.630585301 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843601908 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.376473586 seconds)
  done (took 9.536982787 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.380383444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.415637941 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.403094116 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.415266876 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.388380166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.385455646 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.380260646 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.437836691 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.404937403 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.45467843 seconds)
  done (took 65.382854534 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.397165212 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.376538054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.377422721 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.374764535 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.368415838 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.367873266 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.374232534 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.368633609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.025411625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.500806454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.39067331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.382176118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.375828293 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.37738283 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.373979821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.411898008 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.502727142 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.372903579 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.372598672 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.381118509 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.37432274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.510320598 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.417014837 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.372437241 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.501858541 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.04336877 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.378713397 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.38186951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.492210733 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.374121346 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.375595087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.375601495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.37848887 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.946440892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.883834483 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.38370181 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.400174497 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.384147458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.373400129 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.573219173 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.377739447 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.381310705 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.369482629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.879229309 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.538592023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.492124019 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.626673504 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.376702514 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.378146278 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.436970535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376556318 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.380651907 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.407077313 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151606356 seconds)
  done (took 113.879914942 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.396281112 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.859443243 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540279656 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.390643412 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.201246358 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.09545386 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.370851023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656073731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401335511 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.370968664 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.649168529 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876335725 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3752602 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.438501561 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628599888 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.407245674 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37097808 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.188471023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.369220193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.373481368 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793383834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.38695778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.368486352 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.395231086 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.406049229 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824055729 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.795268933 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.874280105 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.370229504 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.366387003 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829313134 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.374295444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377422266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.366576893 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.638020284 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715013828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695643901 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.369313475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411991758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.370437833 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.367531778 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820711184 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703472857 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.36887857 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.366421256 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823504454 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.367292254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.365441838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.370689602 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566254383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.389146689 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.36642666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.761750105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.367556754 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.709554882 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38314027 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37535773 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845529485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366583075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.488273355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.393326224 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.36752497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.374100762 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.36745919 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.366852534 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704013216 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.427983526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.372702497 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703415926 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815671497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.366504738 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883082863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.209507547 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.373867196 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.411570373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.379135374 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.982468802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844292983 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.400794216 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3659315 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688582437 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.369191899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641682013 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.381198148 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.367737385 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796680228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.389772732 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.396430597 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.367004082 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.373772582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.043768039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.365907283 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.629366745 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.385368 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.367871386 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.367435996 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.3942356 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.366790614 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.36850998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.371776353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886360587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.367346552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.656481762 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.387563841 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.36801235 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.368059912 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.366960627 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.366700095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582853634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.7993536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.369430259 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366756016 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.368411615 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.368918633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.639175744 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.370814231 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.665693926 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.369503456 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.369209364 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.369059626 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.135943413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370486718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.369814253 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.387150975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214295027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.579092404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.386432457 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.369187185 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369582953 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.383910497 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.682455449 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369615373 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.388944778 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.372623975 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065489142 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.397315309 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.409006062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.045138266 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.376095056 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280535705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.392780698 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370387808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677187271 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.63941608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.960850115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.371378874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.3722064 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044538011 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.426997238 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518116628 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389121887 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.377217686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569477388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.976109777 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.369952997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.947433508 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.372703634 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583052991 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.370913658 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.690273257 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849932339 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.371688632 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.374608879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066775954 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041897111 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984395114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.370923645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.64409184 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.363594087 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.82572838 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.370469598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.369743658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.870889299 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.370760332 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.380547994 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.37121699 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.372035798 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.43880543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547318807 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.624462927 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.378297124 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82436844 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.447218993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.373295581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.374754791 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.372592242 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.725807206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402621691 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.37128641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.419489717 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.371628963 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.378799368 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835134429 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.252168443 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.372371511 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527358825 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994359538 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.372138155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373971865 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.949885664 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.826171412 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869505779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.404186654 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.670351927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.373149775 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.410954674 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124798781 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.409708511 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87943084 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.374838783 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.375635541 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963332669 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.373454795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.423901599 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.372251223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.37353878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898759254 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.372676971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.375154144 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.685796206 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373425658 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.622128683 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.373364004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.377489147 seconds)
  done (took 1119.537738245 seconds)
done (took 1399.434992512 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.374223087 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.375710901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.363805288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.380472215 seconds)
  done (took 26.809734476 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.386257559 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.383711627 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.384754062 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.383491445 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.385255206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.383839613 seconds)
  done (took 9.627282106 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.437947087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.379740816 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.378294798 seconds)
  done (took 19.51503629 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.5958529 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.633191274 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.749637425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.522831518 seconds)
  done (took 10.821752495 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.385907325 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.38538823 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.386091769 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.387229086 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.387695606 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.387636301 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.386796645 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.386993263 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.387933534 seconds)
  done (took 13.800367375 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.234473195 seconds)
done (took 87.124624897 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.564830012 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.620144629 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.993560436 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.998855347 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.943355263 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.500129852 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.096174059 seconds)
    (8/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.981020225 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.382009421 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.427979679 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.01060129 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.460340739 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.365484239 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.634375095 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422959364 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.955549887 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.41964262 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.248243606 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.405419101 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.403214378 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.384750975 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.615950723 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.865525508 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.645896819 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.750432426 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.381320652 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.492876586 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.209488378 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.468775623 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.364508257 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.465160084 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.733966313 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.380126763 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.219755261 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.424062082 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.48312928 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.692678881 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.374408434 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.908024176 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.117554886 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.232631042 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.017538731 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.75090942 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.72180846 seconds)
    (45/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.588649043 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.517781422 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110070528 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.604778125 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.537481129 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.128173516 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.188495026 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.495473892 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.649840472 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.518017435 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.023747965 seconds)
    (56/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.394138202 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.497971631 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.3247044 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.668279079 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.45588948 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.3811809 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.489781227 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.606354421 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.478507602 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.50160314 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.150630284 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.467498441 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.413592328 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.991475893 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.744265233 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.394810118 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.373449626 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.538635446 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.488528048 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.403918968 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.48468832 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.408349215 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.408520034 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.968072717 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.399755656 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.382489104 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.378050648 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.138485429 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.526045943 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.377976307 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.602344116 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.724823732 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.988093271 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.951711053 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.785286366 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.034879926 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.725757613 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.610817147 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.969767565 seconds)
    (95/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.737868877 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.489695676 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.364971617 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.391048213 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.773631669 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.688805599 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.407342107 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.42471016 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.729934974 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.390775632 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.40640013 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.381847029 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.261827622 seconds)
    (108/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.68007536 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.767421602 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.581206769 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.406995981 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.938293577 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.380653925 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.976030153 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.762296027 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.22393326 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.441344637 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.579058503 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.949861853 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.218852711 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.367705459 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.392811887 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.383020493 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220059209 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.275129945 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.579872332 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.397890569 seconds)
    (128/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.384712734 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.418011795 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.609151037 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.401068787 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.749173526 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.362592734 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.45850582 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.72482565 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.902081238 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.404734146 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.237858543 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.134109906 seconds)
    (140/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.40483393 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164756296 seconds)
    (142/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.676439514 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.640702061 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.468142931 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.954894791 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.384958715 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236028995 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.646046313 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.142996131 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.483550897 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.655731575 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.484073812 seconds)
    (153/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.410450583 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.487554753 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.802969843 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.156150097 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.485191183 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.163214507 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.792376424 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.724499798 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.018286966 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.12222039 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.410014162 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.225765723 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.394369021 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.408984202 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.383160805 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.384542099 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.06251088 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.100682863 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.970921115 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.406007173 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.389384074 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.371312093 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.412355924 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.469925528 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.745528055 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.371346376 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.683840084 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.415338819 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.22353157 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.798291927 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.462488108 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.466030437 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.844661921 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.38814433 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.575807269 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.663804006 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.521395078 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.401905945 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.966677583 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.471065836 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.827364128 seconds)
    (194/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.466763402 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.797027257 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.474522285 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.411293671 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.625912548 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.430427811 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.991277525 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.193291807 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.384022922 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.295145233 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.375902084 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.705296397 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.443468772 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.385781159 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.411015103 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.781893649 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.773392124 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.483044001 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.384749078 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.386094537 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.451439658 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.931984992 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.230513976 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.620445467 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.385265162 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.866738423 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.3735003 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.874857338 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.386971088 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.398896793 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.799115441 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.422976083 seconds)
    (226/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.94916277 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.371900291 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.389055989 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.834305516 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.710077654 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.414118328 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.51352465 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.391730524 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.441385718 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.41185828 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.436935357 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.387182712 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.79409007 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.451562659 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.983468147 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.31350086 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208536964 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.399665155 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.399241512 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.453434014 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.754600187 seconds)
    (247/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.424009628 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.399969162 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 5.68506491 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.402854239 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.789989195 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.404314139 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.387370509 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.509355889 seconds)
    (255/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.841708145 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.471699178 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485814954 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.575581807 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.948332388 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.416846317 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.738778378 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.40392382 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.597170536 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.72448812 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.870354824 seconds)
    (266/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.457171942 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.415054193 seconds)
    (268/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.760880016 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.375094339 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.469375052 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.782231816 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 6.390502818 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.863897921 seconds)
    (274/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.407945746 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211764148 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.873515898 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.796347676 seconds)
    (278/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.679317411 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.857249301 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.374952224 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.573370717 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.389914753 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.390556243 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.508667541 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.472305113 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.505926636 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 4.403043726 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.561682995 seconds)
    (289/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.774331459 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.434360415 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.413821623 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.463908672 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.66880444 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.158264566 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.825776509 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.176090692 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.246033428 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.431623657 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.601112043 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.879167448 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.392331779 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.390093509 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.868893663 seconds)
    (304/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.374364078 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.510120813 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.392581862 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.414845189 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.39498353 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.418302083 seconds)
  done (took 940.138843416 seconds)
done (took 941.459897054 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.425478447 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419372719 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.402691806 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.423639583 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.514301117 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.43180645 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.41346291 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.404269518 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.451166373 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.452502149 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.401468386 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.430624829 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.404776607 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.403351231 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.402299535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417826417 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.415145927 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.405872996 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.42067929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.41294074 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.419497572 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.402499013 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.452564287 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.431546095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.406959568 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.407181005 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.406457865 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.423372797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.515117718 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.407437154 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.406701356 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.414966072 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.394226734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.401868969 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.398185726 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.42372654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.416551028 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.413843674 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.407960112 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.436473887 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.79058907 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.405310912 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.406922359 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.405179571 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.405731561 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.410226124 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.405974334 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410946615 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419025904 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419455338 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.831100805 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.423537325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.40836667 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.406305219 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.417057541 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.405117647 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.408893673 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421438534 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.425134519 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420687859 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.389199463 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.411606218 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.407543774 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.42249033 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.412752367 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.882246163 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.405738904 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.410408257 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.828357631 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.413904858 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.821714868 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.414978822 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.407052265 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.421611361 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.438037641 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.3999382 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.401342065 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.405339268 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.414132175 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.405242378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.416528746 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.421040588 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.41146397 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.406877796 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420529084 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.436125108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.41667903 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.408265786 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.415468739 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.427025225 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.414520319 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.4183317 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.409369311 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.403187698 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.41711187 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.411541179 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.410746934 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.410801777 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.413076874 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.419031321 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.798191516 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424351587 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.404228487 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.403720999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.40714268 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.421247616 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.801282722 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.410973436 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.43049782 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.455170291 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.410335383 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.394729579 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.412057548 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424406456 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.417583945 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412196952 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.404599577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.395770812 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.794830813 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.423513366 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.410621342 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.406982991 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424554463 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.410297189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.40566502 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.405413274 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.410742142 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422335757 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.530166397 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.420071196 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.440831771 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.408770816 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.413299118 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.438248492 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424810621 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.441062183 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.411917126 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424306352 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.426278201 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.407363232 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.421959811 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.421311822 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.410971085 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.416127856 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.403236724 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.438176155 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422436893 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422188499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.431982008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.531242253 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.4083916 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.397079867 seconds)
done (took 236.106488129 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.469313003 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.406252057 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.51094431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.407653911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.506318781 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.505621482 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.404632474 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.405078281 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.404957718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.781618013 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.405079669 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.405258031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.399750976 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.405325247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.488436758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.407714731 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.404854723 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.745114864 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.408588364 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478004625 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.406490191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.406513684 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.407444957 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.7868646 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.402033879 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.400998731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.478414984 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.407408914 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.753112112 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.4010087 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.404804218 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.75287882 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.497909641 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.424969971 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.418846569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.415410078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.506873762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.424750154 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.488632031 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.489068198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.512598814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.447729934 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.403832768 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.403936351 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.409868063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.40915617 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.405867129 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.435573294 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.410404353 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.406634401 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.747133641 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.419163087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.417566557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.407565256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.407795174 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.430567201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.408935965 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.410670465 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.498556113 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410997252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.471017945 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.789710156 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.783723251 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410051973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.410778944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.407609434 seconds)
  done (took 153.445898057 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.47686727 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.483294762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.521273457 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410970063 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.459702668 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.527020417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.412051708 seconds)
  done (took 11.634943045 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.415738799 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410924259 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46014779 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.461008219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.411711748 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.55854586 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411339505 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.421472739 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.408106457 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.463523699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.41218481 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41165226 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.418020697 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.412531353 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.45926219 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.422652401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.526252965 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.412165644 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412631025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.565212998 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.408542963 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.418164527 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.463438797 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.423303051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.413247537 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.416485973 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985082921 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413474767 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409561457 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.412175232 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409386693 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450400307 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412595781 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.412298279 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409495454 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528385474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.412237038 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411270614 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.412737459 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.408574851 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.413427254 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.412147824 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.413876783 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.410269956 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.413216357 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.436701397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.413784522 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.41349156 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.412709694 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413134229 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.463419511 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414102262 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.411283215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.410319239 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.468969265 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.42022515 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.413703665 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.411216435 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414363279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.410768213 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.566940209 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.461146109 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.413889981 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.460241074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413463439 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414281758 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.414212298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.414257567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468466488 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.413674539 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.462817112 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.411646308 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.568763486 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.436479464 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415071083 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.416569334 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.416962609 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414961224 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.410747005 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.420188558 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.411610356 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.414922505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.421025104 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.411242519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.412295926 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516703623 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.524269736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.412475391 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.427393166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.422980951 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.411707171 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.467626789 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.41594103 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.412367311 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467207203 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.530813899 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.468817366 seconds)
  done (took 161.008599912 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.419847718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.423335831 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.417176738 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.432562472 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.417081261 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.415395565 seconds)
  done (took 9.875547161 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.418765239 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.418079974 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.416258549 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.416249928 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.416363877 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.416490027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.416893884 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417918877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421628241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.416143657 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.416959608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.417115654 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.41751374 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.416739977 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.417363117 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.415839459 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.417180599 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413923598 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.415551294 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41791975 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.512196999 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.417315792 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.41804158 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.418575438 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.421003226 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.417621513 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.425060631 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.417376849 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.41759212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.423827448 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.420681963 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418222832 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.418865202 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.424003958 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.422438973 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.419440344 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421539399 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.418680311 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.415096719 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.417610385 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.419159827 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417913899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.417842546 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.418798326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.419824696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.422953848 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.421860774 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.426441347 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.418147541 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.419234774 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.419521023 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.418188129 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.418796908 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.419404069 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.423957771 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424281087 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.424192743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.420387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.419445648 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.42093264 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.419748695 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.419030717 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422223603 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.423685162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.42634627 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.420386001 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.420484335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.423486296 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419999923 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.419597578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.420567904 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.417437075 seconds)
  done (took 104.642796387 seconds)
done (took 441.949593917 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.72050648 seconds)
  done (took 8.074079609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.608903108 seconds)
  done (took 7.96348107 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.016154784 seconds)
  done (took 21.378401336 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.41218646 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.517245173 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.428302755 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.429064096 seconds)
  done (took 27.140453716 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.878780539 seconds)
  done (took 8.232670812 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.425973049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.413425597 seconds)
  done (took 14.194395391 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.581958458 seconds)
  done (took 7.935374822 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.990399185 seconds)
  done (took 8.353243986 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.43006024 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.429728235 seconds)
  done (took 14.485493509 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.398330824 seconds)
  done (took 7.752368569 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.350417221 seconds)
  done (took 8.704345833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.423424453 seconds)
  done (took 7.776876126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.468022225 seconds)
  done (took 7.820675512 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.196881682 seconds)
  done (took 9.549072126 seconds)
done (took 160.714553293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.415623787 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.42049145 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.417378311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.415808159 seconds)
  done (took 27.024943795 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.456676876 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.457870309 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.457644553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.467156109 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.459610088 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.457306757 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.448918699 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.448935176 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.467881561 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.458770158 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.458387173 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.459243933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.456670613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.448847572 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459284695 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.458165664 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.466891136 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.45903086 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.448760126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.459905477 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.423723777 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.466714172 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.459868427 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.423065773 seconds)
  done (took 36.287750331 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.625613375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.495048284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.576895959 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.475917914 seconds)
  done (took 7.5308735 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.475853375 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.476647751 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.489312237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.528404839 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.553734296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.487819032 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.448930158 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.445238487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.431911713 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47738718 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.552796305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.493208894 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.561340826 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.424861663 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.606265515 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.42363802 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.424217028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.476422987 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.528488087 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.545154796 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.425063044 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.476505798 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480691171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.493584657 seconds)
  done (took 37.086815802 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.423849774 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.43275568 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.431079751 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.424753878 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.424906806 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.424977195 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.430192657 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.426235819 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.446723941 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.426207323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.424409898 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.425596242 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.424749025 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.425275868 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.425287036 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.438047373 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.439183251 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.424798948 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.428846075 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.431724087 seconds)
  done (took 29.938442766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.419805248 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.360880049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.77164287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.675419419 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.419957218 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.419220658 seconds)
  done (took 29.427024527 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.498479835 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.621904597 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.42620477 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.781586844 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.857645034 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.427885997 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.427478225 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.65875475 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965535864 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976715359 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.487072678 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.494412439 seconds)
  done (took 20.985859771 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.428545035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.423906472 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.432454653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.440074948 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.482132986 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.431003957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.432773307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.419780811 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.485926702 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.486467778 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.431333397 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.483094736 seconds)
  done (took 38.739456266 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509214535 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466153823 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.332588328 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263600982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.799059728 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634342946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.207209232 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876458312 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.425769676 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696083977 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435245528 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516340164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676527954 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421321961 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425597747 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.446366253 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647594986 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93634763 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425469802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.469305412 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451007549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436793007 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.659957493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.455218578 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635166145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.555984407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.685159358 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423153759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70817433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439370614 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434784461 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4237959 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697765933 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082377637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517195656 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433994003 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203348911 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.137242981 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.416769256 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.55462324 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437214581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42848707 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434708469 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424498441 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359414771 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437549027 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895430328 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.429112934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.134581589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425618471 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43563548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519385188 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.427606623 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.240600093 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515826429 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425292103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.422417847 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431566333 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999002194 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.019127094 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442799273 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.363698059 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.886057294 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561489386 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091552034 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.531077374 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.428630046 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428353853 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359597501 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.532660793 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447698169 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573404069 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.445400696 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075092619 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22523806 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437330385 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361013006 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001948039 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441890657 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.363294235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653894852 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427156009 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361797364 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.382458924 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.360646147 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13882405 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436748994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.8135697 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433223747 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880741025 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.437154384 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443444627 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450287965 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650726339 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.312963799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426995126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.432157047 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560578045 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449266768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886183837 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360729311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.431801061 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681286614 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.637655402 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435755614 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.890276754 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644807036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427194079 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.447143378 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43608213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.440066753 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043994053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441894779 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025835298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447942017 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427256078 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177741507 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434171603 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.533128325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431029319 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678619437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204583386 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428532008 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510865269 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429374967 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428421176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.564170896 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996826436 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428179479 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.429772769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429921929 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.440926846 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.428417038 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376923289 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.425725024 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458618754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.434429651 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651294809 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442766559 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707274327 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363223225 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577383389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.484301701 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.652322001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.636542587 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.428809436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686984696 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444028369 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443298913 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44366952 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448308734 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528241209 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451701922 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.428930782 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.687396695 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.433123757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.433768935 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.575297389 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435893929 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432155389 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.43528368 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.344057243 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044449594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410626731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.43953716 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320370141 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.444288724 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493989587 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43492589 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439329465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.256293092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319935929 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.43506038 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.430154663 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656661415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440789496 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.547294272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512077365 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.642877085 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045232797 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447242114 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.364552185 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.142243397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.127564157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430887295 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36630517 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431281602 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439224247 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441210121 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.0200247 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050632626 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436215789 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.473716674 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.441955391 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443150141 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.435997131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432919993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.244295155 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025750131 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44740257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.447100979 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576202127 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.444897871 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365739447 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.435272209 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437521567 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432646471 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433166251 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465547355 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.486798054 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922523019 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690374154 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.199875587 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443772305 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.673612684 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46873664 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.432391393 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445357912 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440449193 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.440200909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443966593 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.443550996 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.54408921 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.108135487 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004052484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22638374 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002035737 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436492529 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.437424116 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438350204 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896542161 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367796342 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991229756 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626258843 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899939231 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378632828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6509766 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.631780531 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208458511 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447155161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662691001 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433252068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.452005048 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450462504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646294988 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469242542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.434617957 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368032152 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.719099374 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706777529 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433299902 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518201709 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897783186 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436403858 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441068821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.433926767 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.753109044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610340302 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147411068 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607229498 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442875388 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441929256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924192351 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435066256 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661029656 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103972327 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448081125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.654341759 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372466359 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446609207 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446122571 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.436983828 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.76144154 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.439462901 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.692698887 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445752512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369977963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442170051 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009580439 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.294037692 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44138565 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43625456 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185439715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444822396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726089297 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.449146673 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.241762435 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447574756 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.370379008 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370420384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.129638318 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.44117995 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413065928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950262088 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.878798632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507251812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458375286 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286429576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692030513 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.450727973 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056145684 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666735958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.312586663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459813781 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.537323156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442372458 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.427032384 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437108641 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672604495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350666179 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660385178 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.348980321 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.343295686 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437070105 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648445788 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439128879 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4516383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68705655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.147759326 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.458591314 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161168423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464480753 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451718354 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357878377 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.900364434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444848329 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518171521 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447894742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.449504223 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448919446 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614811517 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451387816 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444395127 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.452155378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532601806 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.055063155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.250839098 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.446152834 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061524107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185396478 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065222766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455568279 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439588377 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443272023 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373834343 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58792074 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.665352067 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712360109 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567776546 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.010176107 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461819446 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440206654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450486511 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655283201 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715150867 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334932159 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453101215 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456072413 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.439642736 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452095892 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.651729878 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956503462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021109798 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562594407 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447759049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904939793 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714619172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440861766 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440837448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031677214 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.446435643 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.777194191 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.445951058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440172754 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591078952 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450137549 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106922788 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.450490509 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.596539945 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.215100362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614041553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698873215 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.934819385 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.454530976 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068002547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195217889 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711516168 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509825617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453462364 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.554865036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589007357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.441024397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445234943 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441368616 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288884969 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.151763085 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.451338638 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076033268 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711263923 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.440497551 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.449407335 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466169852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.452355055 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665424731 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16508513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668291319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452140768 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446244877 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257583823 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071291047 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458439146 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376313919 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.447126698 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687478839 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678306488 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463797321 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.895612513 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.154482952 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023916146 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.417038959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465483165 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447416578 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203542426 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073739149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.26063956 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962897279 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011614801 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457167051 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720700861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.447675837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450010498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723112105 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.447134926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444773893 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460099003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.067897634 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229255658 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.453227035 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.553673837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.384603629 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.784877057 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162710502 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380628258 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447502034 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.633800787 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44389565 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576223411 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456384281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.44851784 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458409257 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181542633 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717647507 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.450548271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.44191374 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.434039404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459768331 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456044292 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720367732 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452590739 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.113198956 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.795417361 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.69996544 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445235552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.434012665 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.44978582 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446119608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.433007808 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.644344207 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.037551149 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024302955 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.450233013 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.460406638 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450112634 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.662290167 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659334346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44731868 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463248764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45797469 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465561812 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.350690658 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.948889973 seconds)
  done (took 1648.281025721 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448070253 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.471206098 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.462417411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.484326208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481038725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472125865 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.522421154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.487491548 seconds)
  done (took 53.214324455 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.459133748 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.704428635 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.476076634 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.460279964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.460665151 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.448562664 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.898425713 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.452056241 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.455946094 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.456980723 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.446515556 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.454549189 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.098540355 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.460366381 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.447189928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.437384263 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.457107526 seconds)
  done (took 67.468481222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.447198367 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.48746024 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.549117069 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.448468824 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.66310719 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.458156481 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.524076033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.470224803 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.464851277 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.459583581 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.113294485 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.461097915 seconds)
  done (took 80.933708802 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.455013623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.455533198 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455718967 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.456059787 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.455948432 seconds)
  done (took 8.665864675 seconds)
done (took 2086.94334995 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.709842321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173102564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09310474 seconds)
  done (took 5.654169174 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.591888764 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.64135549 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.763099383 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.780300461 seconds)
  done (took 8.161102993 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.721609214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.81420008 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.630078055 seconds)
  done (took 6.548974891 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.874293836 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.448179215 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.567035581 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.442617118 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.446677717 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.449091328 seconds)
  done (took 20.72265401 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.44834348 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.451789768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.449471283 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.45167695 seconds)
  done (took 7.186014064 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.430693725 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.1905589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.429403738 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.451148437 seconds)
  done (took 18.886515453 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.197927304 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.20849533 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.193052257 seconds)
  done (took 7.984150354 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.452328818 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.287441127 seconds)
  done (took 10.125428621 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.769887393 seconds)
  done (took 3.154600661 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.581717671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.717610325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.562907312 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.445665687 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.588222159 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.344520327 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.116304215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.686439016 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.433857438 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.657166916 seconds)
  done (took 29.518879495 seconds)
done (took 131.93032341 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.264682747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445885673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.648398177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.23261652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.673899519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.649140411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.669045327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.196352577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.890536575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.734818582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.238394136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.674087866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.61466991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.457018239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.61459825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.692799914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.673228817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.314279707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.921068316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.121350801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.669846301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.874185418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.065819988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.893486672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.675382118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.60000632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.455741503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.694831742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.091288189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.474233351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.600831277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.293405785 seconds)
  done (took 195.503064237 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.451674185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.449228182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447769624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.448017851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463870717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449072605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.44881623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.449537336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452482696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.448250171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.463047741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.448476159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.450499572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.448155946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.448131437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448773141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.448142615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.466464657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.447767557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.45797268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.44995317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.454118197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4485011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.448921504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.450213456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449789822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449008237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.467327708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.463952228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.448798256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449671726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.449282845 seconds)
  done (took 207.854222415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.448385613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.449819359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.450647465 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457399925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.448635376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.450140413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451020692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450118266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449731819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449259731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.468749669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.449678277 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.46332912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.452103262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.458590392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.449301303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.459787304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44961497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451931161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.45323426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.451983074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.450701681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.450511823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.450295504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.461794028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452296486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.450526751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450460041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45051302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.451529893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45642331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.450592843 seconds)
  done (took 207.879075601 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646513069 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.457751183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.458995998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.392708614 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.458790112 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.458017595 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.455702 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.648050291 seconds)
  done (took 15.366833249 seconds)
done (took 627.989641018 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.801669188 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.509546246 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.6571621 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.478826815 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.308385383 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.480336225 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.479241749 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.649446532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.402231634 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.657296172 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.704760415 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.476751632 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.845125528 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.476804062 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.729940015 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577516753 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337985934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.458428423 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.802435972 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.093465123 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.735535711 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.951965035 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.649861365 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.396264604 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.855277295 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.949251796 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.16095744 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.325250949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481034654 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.796078383 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.161726538 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.400003647 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538794197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519396542 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573869512 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.555889241 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.388494665 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517691888 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.657245645 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.715701024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.067140741 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.218776295 seconds)
  done (took 96.936853415 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.448467471 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.451382702 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.448359399 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.452346795 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.449499616 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.451613415 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.449234821 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.45010782 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.449880772 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.448035363 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.448349668 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.450152043 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.45159492 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.45030985 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.45041376 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.449449444 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.452563254 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.4511678 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.451287281 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.450325521 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.450110753 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.448937472 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.449575393 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.45152207 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.449967879 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.450753418 seconds)
  done (took 39.1003141 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.462142643 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.701925145 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.881872669 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.471528777 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.461152617 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.466609994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.541648488 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.465479757 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.464595539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.464997915 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.614769501 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.465594295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495639124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890715985 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.467976087 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.463848353 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.463480621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46333556 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708971022 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471986181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.542899355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.465721092 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.542606951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.475075059 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464382342 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.46383457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.467296257 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.957690911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.466303838 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.616568602 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.264439365 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.542414769 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.91694837 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.898407524 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.265634126 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.468536024 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.464213326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620510827 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.466494592 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.46525963 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543135393 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.467202671 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.892563854 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.100694353 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.482530657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.465012214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.980679651 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623119263 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.724485186 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474372315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916942535 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.470615061 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.465586968 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.466055539 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.711980474 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.472133516 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.464506453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.000912496 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.473143397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543486047 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.469136075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.465260345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717376976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.46525797 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.707634828 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.467991929 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.473217879 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466317527 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.896678336 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.471190815 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.116518817 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.48499656 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.464655453 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.619948039 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709549669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010065438 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.467649046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720196258 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924820917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544596706 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.470199477 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.947728629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.545303358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.46924566 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.467197683 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.466761089 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.464729518 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507725044 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.539962381 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.041546274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115668662 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.021556618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.54993972 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.479179358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.466483714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.004138405 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470776249 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.467764291 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.889412536 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119744168 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.484340145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.475519656 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.104993426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.488469838 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.54568561 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.473852544 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.902896293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.470352192 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510923359 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.466573449 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4736443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469995938 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.545848381 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.470896112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.467464537 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.094443275 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.645513246 seconds)
  done (took 191.121358271 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.460261959 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.459695027 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.461623858 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.460865002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.460765817 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.465701723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.46075165 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.460901326 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.466671513 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.460412348 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.460776947 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.461510756 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.462469861 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.464293804 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.469753207 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.46862452 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.075296421 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.463346866 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.462009654 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.460889655 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.258701438 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.464756455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.461813007 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.461387718 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.461170586 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.461781375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.468724716 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.463045838 seconds)
  done (took 155.768418174 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.469405933 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.052469321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.472424957 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.602101195 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.492603138 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.467633265 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.600832785 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.527470985 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473761995 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.466592907 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.467827055 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.782557708 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.473660557 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.998158599 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.662606727 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.60420988 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989354956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471535576 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.467634947 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.467763868 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.603832781 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.480017817 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.779655771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053799183 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.473474799 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046866998 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.462045817 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.469481909 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.468756046 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051405408 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.471256006 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.773329855 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547370529 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.532057432 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037268962 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.986648246 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.984105376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620894624 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.472074272 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.46867644 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.468772654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.459065191 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058014431 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475059521 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.470074058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.052785124 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.490491925 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.472425983 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.479770664 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.469976663 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.53124492 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535798645 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.792394082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.066114737 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.551865894 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.493191123 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.603608309 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.860916074 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.473092935 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.983209748 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.458986575 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.061581112 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.478105564 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.460264965 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.471101355 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476132828 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.622330405 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.607804003 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.987935922 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.473517033 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.985863632 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.623817231 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.473258105 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.471076434 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.473509934 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061948568 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.989605069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.625011679 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.610525603 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.670649952 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.464446554 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.472414231 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.461135474 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.550005232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.474888083 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063157239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.990627289 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.473300051 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.473663851 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.473497751 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.473299602 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.649450164 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067004853 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.552746348 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.982752049 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.805609239 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.78726436 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474454264 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.533592036 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.474973739 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.788679257 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.476757311 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531198404 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.929113338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.7924001 seconds)
  done (took 174.286384724 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.718439732 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.624672521 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.565541933 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.590897003 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.032282423 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.037620758 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.68144854 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.604434581 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.581449738 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.722666043 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.604840008 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.564490036 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.659452709 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548814756 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.172370365 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.541575512 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567456778 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607257228 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.584070008 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.506281738 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089731267 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.764470906 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.643992737 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.558607961 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.566885064 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224346007 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.015988837 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.97399022 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.643585102 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.713130353 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.005268498 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.579653057 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.415121674 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.141692043 seconds)
  done (took 69.259999995 seconds)
done (took 727.864167816 seconds)
SAVING RESULT...
DONE!
