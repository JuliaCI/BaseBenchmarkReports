cset: moving following pidspec: 23120
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325227583 seconds)
loading group "string"... done (took 0.564905797 seconds)
loading group "linalg"... done (took 7.699764598 seconds)
loading group "parallel"... done (took 0.172331789 seconds)
loading group "find"... done (took 1.289615805 seconds)
loading group "tuple"... done (took 1.973663443 seconds)
loading group "dates"... done (took 1.424489398 seconds)
loading group "micro"... done (took 0.247021727 seconds)
loading group "io"... done (took 0.982335817 seconds)
loading group "scalar"... done (took 42.055373224 seconds)
loading group "sparse"... done (took 13.998060696 seconds)
loading group "broadcast"... done (took 1.045692922 seconds)
loading group "union"... done (took 15.051099623 seconds)
loading group "simd"... done (took 5.166762563 seconds)
loading group "random"... done (took 10.386138181 seconds)
loading group "problem"... done (took 2.044212646 seconds)
loading group "array"... done (took 23.960395627 seconds)
loading group "misc"... done (took 2.113448235 seconds)
loading group "sort"... done (took 3.532420108 seconds)
loading group "collection"... done (took 20.609135335 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577967012 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143760061 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152918875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151858585 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191338964 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15947002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162002221 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10013635 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.982161758 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175869828 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153777852 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529002344 seconds)
done (took 5.226235952 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.257974406 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094897624 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104241175 seconds)
  done (took 0.883553468 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078139062 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148224819 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094530521 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078207804 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095606633 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078520509 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09461094 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077746356 seconds)
  done (took 1.366267593 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086707481 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097707361 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082383154 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096577942 seconds)
  done (took 1.057679991 seconds)
done (took 4.346610805 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738508941 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280309489 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.209403236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465124819 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197380829 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218153656 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681113673 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347585996 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254282918 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099883144 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143098344 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387492761 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137729422 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685618615 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092566987 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125894431 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179981544 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460615253 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082111599 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110320084 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116446251 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142422588 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132002898 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094438874 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.189028894 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08178476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194197077 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107186615 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080576725 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276706244 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200435245 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694646512 seconds)
  done (took 10.947290485 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111679586 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134348847 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097555825 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139488746 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137470615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102550799 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086292668 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098942414 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124480546 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181795598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118187659 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139473533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096922529 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084072413 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119004027 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249304755 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122399707 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102496879 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102064794 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090225617 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142201241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115774582 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111349241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095909622 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169658787 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22467107 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113123086 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128272835 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09955198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115340486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144955597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146171593 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097271617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083491854 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173764801 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125118948 seconds)
  done (took 5.233943044 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090909095 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190013344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121172228 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171147886 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08006993 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143424058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094678697 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112736532 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256066931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.102378245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487933044 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139654947 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099132 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097079605 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083740769 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097117759 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.558409228 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162429287 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135217646 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096732607 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104539811 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10036274 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369265503 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080537827 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095548102 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082074514 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081587111 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162863905 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082259511 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138552953 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123364476 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099960428 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116649452 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214921994 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129300993 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120888479 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098996124 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080004315 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194247772 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089035013 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098187302 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105769221 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138526871 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137929198 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099978845 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083115796 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220658512 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085101915 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116819817 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.936872938 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182433 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122256311 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100080944 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308218396 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098244696 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098615335 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08163529 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278845177 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191189543 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097956388 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078881983 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096407846 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07979223 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405316912 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081118713 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.755271789 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085200302 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108779575 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084003404 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100026265 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123966166 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087314395 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103959 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098079708 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097782665 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080760835 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096941223 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094990971 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083145305 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093754744 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090242664 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.229621643 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081372302 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09710329 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07838084 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115350424 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126125234 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085258757 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098096603 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116511548 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101402545 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099114906 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115506313 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099166433 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105938332 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083427169 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142536848 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099999931 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078001075 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185215589 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084136027 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094828148 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111216995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103924379 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131269712 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114442629 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097793903 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150982001 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096333593 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093839307 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080781363 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095591604 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081836729 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098182071 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094208434 seconds)
  done (took 22.820304935 seconds)
done (took 40.783448507 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329938466 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105811878 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103687978 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103263248 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100941284 seconds)
  done (took 1.505997076 seconds)
done (took 2.242203266 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287420973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17496277 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095750491 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166129526 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092847874 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17312524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161122878 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110861351 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201202782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095238983 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161067385 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093716435 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077425564 seconds)
  done (took 2.657799126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094453126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116150131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084775618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11232114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078593179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113314929 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094800409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119757369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111929758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086973858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095563787 seconds)
  done (took 1.846466541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097462971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115454505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084772621 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112522515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077854439 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112830576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094053862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119801404 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112658607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088128149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096492201 seconds)
  done (took 1.849001573 seconds)
done (took 7.081723241 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093722449 seconds)
  done (took 0.835517405 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930040875 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.848026693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112566536 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150432755 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316320099 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189880475 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470277128 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124987525 seconds)
  done (took 11.073316528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115756768 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102612303 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112437827 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087100429 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105270011 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086275425 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104097309 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098934227 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085106797 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102081346 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083691662 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100129407 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099724653 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087459984 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102666868 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083411031 seconds)
  done (took 2.358210157 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12032396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117604579 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108722106 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109158543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088371356 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105486988 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107353798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089293621 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103315842 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10380712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091198862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105669476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103974275 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081206106 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106617409 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107810071 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085794008 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107192788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107095935 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090857969 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107001437 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096348778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087948568 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106740657 seconds)
  done (took 3.287538719 seconds)
done (took 18.298315316 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16041692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10915071 seconds)
  done (took 1.011857487 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096397544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113194506 seconds)
  done (took 0.956591263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098127356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096706373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121782961 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109326317 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081053112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096218197 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121249378 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081368742 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097199849 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081070123 seconds)
  done (took 1.737101282 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083075039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109903539 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101057595 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095443991 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105949984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094500149 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089355703 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099085754 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109589758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077401318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103477873 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114258177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086505932 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116780673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104831177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083223894 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103552156 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099213732 seconds)
  done (took 2.526091251 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080845134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097620155 seconds)
  done (took 0.927009871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081914751 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094933291 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081696952 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097793016 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095289073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077648116 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095334132 seconds)
  done (took 1.37238709 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487426167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135873241 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260469759 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101813549 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103564643 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302107985 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098462311 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084978454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104056443 seconds)
  done (took 2.484948671 seconds)
done (took 11.76192357 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093951801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115636383 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113048615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467947857 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108370925 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09970614 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147200999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25378425 seconds)
done (took 2.150376996 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.150121186 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606441078 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427842275 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.233054852 seconds)
  done (took 2.02142509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.406041175 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.10076293 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086089814 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082865111 seconds)
  done (took 1.434075134 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081273617 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099807751 seconds)
  done (took 0.939996514 seconds)
done (took 5.303197845 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081866278 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096591767 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079189765 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132664719 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080276539 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097035984 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077589636 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098330533 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080498185 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099514243 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096630547 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081442473 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096518867 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082368058 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096254479 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080891253 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098885467 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080640127 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097021744 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080950417 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099156466 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080538363 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097025259 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079981458 seconds)
  done (took 2.961922533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100581177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099259358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103319048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086741655 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101905002 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086782755 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10387977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09736124 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086596912 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100146491 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084761715 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102888674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098921842 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085275106 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100576309 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102377481 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087076612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098356584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083237435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102739543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10283309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081552258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101170198 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085644374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10242812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101869283 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083458418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098865653 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103299175 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085642948 seconds)
  done (took 3.619299774 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086324583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093957638 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079053176 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101719352 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078658878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096825392 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078429751 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096286677 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079510209 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095450639 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079974023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096037836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07798057 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097803658 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079473183 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099255347 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107410164 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079217452 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095768283 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07993223 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098814897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078536597 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095689135 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079173957 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095504938 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078162092 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095405124 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078621404 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096594525 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079069157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098961671 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08205529 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096006711 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084840436 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099509665 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077834711 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099604866 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077230738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096439169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07720086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095868376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094076644 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079009936 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102124422 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079456506 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097444412 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079078241 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097222248 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080103242 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100118901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07844029 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095199619 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080304396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097497857 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082056302 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095583135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078869445 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096452648 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096726037 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080204659 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095314013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07998692 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098465346 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080051319 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112780878 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087507954 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097642759 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081724969 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097523617 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08203353 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099741197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092083817 seconds)
  done (took 7.196705038 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084713399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106920538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080816605 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098295165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076462041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097590986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100071249 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079438199 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097787591 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086105766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096812546 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080527606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098043835 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107695333 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079754743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097379194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086608785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094595529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079216136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100550814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078590487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101532805 seconds)
  done (took 2.780553648 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210581286 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105825639 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142721403 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106512322 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084718772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108209941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101818019 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087559587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.213274842 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08515563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101698723 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102721702 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083959216 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101892048 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100542204 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087618574 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105066984 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087571294 seconds)
  done (took 2.789589215 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094858298 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099024415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103363425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100038207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098900706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084039781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104348709 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107605234 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084755758 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0990895 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090908618 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102853044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100325081 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082515976 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101617889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081162466 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102329957 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081047451 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108956373 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104870085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086330165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109822173 seconds)
  done (took 2.90424346 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098961028 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101499206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119080802 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085551863 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095581814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081118097 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106599165 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081527869 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10814756 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101065488 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083330671 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097532906 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088802167 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099606988 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104112343 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082166403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102184426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083397387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104239521 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080204701 seconds)
  done (took 2.679531644 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10341241 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100648724 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099684033 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092895681 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100804128 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08218204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110281684 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100334603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08245142 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124977913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100290344 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082181659 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110028933 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106434228 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099071205 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092861638 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110797385 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109643925 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082831779 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101371085 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125887543 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082842039 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109399492 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100202551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083095483 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100893774 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099500199 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089748065 seconds)
  done (took 3.562672727 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082906302 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098731779 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082210822 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096601687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079408621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095966558 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079664829 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096370009 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08201354 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096274879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082478864 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099923666 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081453217 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099952602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082193298 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098804051 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082086616 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096767575 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079368826 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09583816 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082391172 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101453739 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083487919 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099646984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080651721 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102449351 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080502861 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099802106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083447245 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100077444 seconds)
  done (took 3.482344941 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092286722 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106762737 seconds)
  done (took 0.979320182 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079629153 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115166824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078604852 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104313198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086250918 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101497426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107609247 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086681417 seconds)
  done (took 1.537749857 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09725282 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112907772 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085844825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116368758 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112579812 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100170717 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174357571 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10214584 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087588544 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099224471 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112997357 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081736463 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105827928 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082654933 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10626377 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088912189 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098817686 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105193865 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088857827 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098949626 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084074921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109571232 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083809979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09724232 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10090384 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092267711 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112736736 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082878456 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104349148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106195111 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088983065 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094471546 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082710351 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101494241 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080415448 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109908921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116729628 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085428047 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109779849 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08345792 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112841115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095342598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08668157 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106668688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091814962 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101675556 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100635607 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077675042 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096869823 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085252002 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095167933 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08254753 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095616021 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089038669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10461301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110371898 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081086746 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101242448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085535079 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104349145 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08817542 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102976534 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101856874 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082389614 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106849263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087574392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110854846 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076817283 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095512577 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096927609 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093798467 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123509893 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088428487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102527234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100840713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080601513 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103706147 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083853985 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106598154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087651667 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102244465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107407325 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089938315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100529636 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084944544 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109599796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097679124 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084487117 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097920633 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117104782 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081838345 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097538269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080575459 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111230898 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086034085 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100447017 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07965484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107817632 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074605 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101618735 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101366966 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083383466 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111810409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105763789 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089460765 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110109402 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088798523 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101275151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103016426 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080143846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101603634 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085335446 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10782294 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076531503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103634895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082432116 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102246843 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109640708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081897598 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100073643 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090586777 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106787444 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080435597 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097849228 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103499959 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083817956 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104475104 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091278854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100742697 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077809678 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096600924 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08580475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101086816 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104042385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089476924 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104038384 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07669445 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.0997752 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105627524 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093399439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100990669 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083207016 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107771073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083046548 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101314549 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106604171 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085638668 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099617705 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088725517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101854941 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076904165 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106044682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103025324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081881965 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103855146 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086180557 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103536552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083551075 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099728079 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106736202 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084037738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099723481 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083111112 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099387501 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093311075 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104062925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076811554 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098960723 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107880037 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081332628 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100011518 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081234017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103218777 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083219245 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099835087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081085114 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103326733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113691025 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087458394 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102317169 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105613245 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094847125 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100304769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085341059 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10140765 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083919096 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104368651 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109873807 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088501714 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106822857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084408931 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097848232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106006343 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091042486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100244446 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081494052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100295335 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085957716 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107378433 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103702803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084710615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099010225 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083428959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10540149 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085076296 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.1022653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081050919 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107190323 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100717675 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089918181 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102969277 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110805785 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086905372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096977303 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086574798 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10016441 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088559123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09798006 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079926809 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101435379 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102093574 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083189221 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104015629 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077695457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108282596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090089147 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102351848 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080996347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101987835 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107253953 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084565781 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105091879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086326002 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108361222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111181252 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083519174 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104158564 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095390003 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10203792 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077002958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107433366 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080384009 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101024853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099564601 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081558381 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104581857 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093941373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11043809 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094768273 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086188427 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100015491 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082472414 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096240894 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088215182 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104645867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083672181 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10889566 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10135828 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087164089 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104473582 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083134196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103081427 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083864168 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105615499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102110535 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087043941 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099601046 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087357554 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099774835 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080959263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103991964 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083620582 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102154951 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10602567 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082784867 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100448207 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085991903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102392209 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083675841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102416379 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081070943 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105341914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100588844 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084101719 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103223031 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079258617 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108935355 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083001815 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109817485 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082513163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099768533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106555097 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086414112 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107603112 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083331824 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103357113 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083600321 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101957893 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104031002 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090592624 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098746208 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09399928 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112176026 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101530658 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087203994 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101547533 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085489396 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100931366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084149512 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103356545 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082719453 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10216859 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105790825 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086195117 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101499795 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085215581 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102400209 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083620219 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103840413 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077601814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102250628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082167858 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103151233 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112276746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084322589 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104857741 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081399968 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103664162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08235614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099315509 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110186756 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092385181 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103520438 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108425332 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082877939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103085591 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094398197 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09704952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080751113 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101070509 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08041102 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119258736 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102622514 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093698145 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101773896 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08252986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098944325 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08359473 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101412281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076858522 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100925107 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10574823 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086195734 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099874299 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084424652 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105234884 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084748384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113523571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100377852 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084160218 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102126057 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081324849 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10012711 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082513208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105404544 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084594717 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100341291 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079890346 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102733675 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101734481 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085016684 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101637923 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084804338 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10945455 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08346789 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106022966 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085849859 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097618615 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104485552 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08376815 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1022839 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082687743 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106596208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08663373 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103794157 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111047893 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083721475 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102522622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083547807 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100359879 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081814341 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102551888 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083679613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102374095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101861452 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093730969 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099534648 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085902102 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103113934 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082689775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110777346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102477039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087778589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11126697 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08660788 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104520065 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109249297 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08843647 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105585365 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084561731 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10524592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088948352 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101865604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108870496 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08444408 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102576661 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085047584 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099805411 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083579898 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102917037 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08221963 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110025966 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103257512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083600275 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100481715 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082312927 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103019681 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0875833 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110883327 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103994393 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087875234 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096220536 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081071508 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103522343 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081384718 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104691958 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086782613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109739757 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103862093 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084825425 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10084352 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093927214 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1092087 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086916516 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100820397 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105042445 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086091999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103659679 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085266008 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103124884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085626701 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107776948 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084791445 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102542357 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109967749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089005371 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103553317 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085054201 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10379951 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083231131 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098575735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083466893 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105771781 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107931213 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086282037 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102200155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094406571 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10425626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082661801 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107844485 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101470124 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089759991 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097571957 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085070579 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104378219 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084686247 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098792047 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082406819 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102688792 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103969149 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08455461 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097565355 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096221237 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114481436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104954609 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084003745 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100641355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080428472 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097435747 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083674012 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104838407 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085670268 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114374189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081913547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102622268 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097620817 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085032706 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105302785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087588236 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101098062 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079177925 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102457136 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086324523 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109591885 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100385148 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08460902 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105864223 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086332012 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101733075 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087284262 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10066242 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08706232 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117307522 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103669703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085255799 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110348139 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109905937 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085893433 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097789612 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085824378 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106187252 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084320712 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105062509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084480267 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12061387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105988482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082710662 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102878638 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085812737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10329065 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110778364 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085852364 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103093894 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088757533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105835592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112390122 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087360282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111891233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087017131 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106982174 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081553739 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103807915 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081044697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102256958 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104166991 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085104964 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108830371 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09106275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10358759 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114174459 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093514348 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109085844 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079461058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103019712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082116511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099859607 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104780583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082811119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100662275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082615172 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101673807 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085681712 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109506577 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084433046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10552841 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082816736 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098044479 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104424526 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087057689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104120385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081683165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10326671 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085349125 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108328852 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087196431 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105161348 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103888459 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086583891 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103214489 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080327023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109920683 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082657233 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106306684 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082497137 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105236219 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084413041 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107907479 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1089934 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085246796 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106085494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094800198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106930119 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099463264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082397175 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108565983 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083084061 seconds)
  done (took 58.028213048 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147594715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081278411 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098694104 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079729974 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113288961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098757401 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080409239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099481007 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081569529 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10213602 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079165824 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099612055 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108690719 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124210166 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093371862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105267482 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078591737 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101183714 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098117416 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081226124 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108955558 seconds)
  done (took 2.892970398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105677842 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11831387 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115056008 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11837441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089520622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115556536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11487263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114179502 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099405877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111792674 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119061118 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114206684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092441291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111643519 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110173397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092611408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118802532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10999212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116122013 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095544826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113764778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116060707 seconds)
  done (took 3.241674153 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085347984 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102225622 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085597212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098059595 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083890597 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098364691 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087948791 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101391183 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086258313 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102984817 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08111845 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103247812 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103838355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079766086 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102320144 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082839856 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151799406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108043661 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082928494 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106154711 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077851054 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106571706 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097890586 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07978379 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102632609 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089271443 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104712022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081694421 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104093089 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082563131 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104541872 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081075028 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106850851 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102969359 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08441856 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101449026 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084537481 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10287369 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080709483 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101320074 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084635267 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099205508 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084744869 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105519596 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081169904 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102293141 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083722931 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10475434 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077768306 seconds)
  done (took 5.465645916 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104360644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161334435 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086099386 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142796779 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122309093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112236488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088776245 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142922315 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103430773 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081209253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123560495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120425846 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103373838 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089106167 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107621585 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103058004 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087290239 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10244875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088391245 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104684781 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108806201 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090399567 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120255218 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118335586 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107447671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084228407 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104114598 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088441701 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119060065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11040009 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109070241 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090674504 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121726469 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106470785 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083572806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108274296 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120999637 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08473594 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108340308 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100922924 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088621309 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109651414 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090472399 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124297613 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105122729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108746734 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086429756 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102023096 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118378111 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088266564 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114068109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120213542 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088520634 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1059049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108794787 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100238955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104955964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101983926 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089136009 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118594988 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101074119 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088246791 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120666897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105049382 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091834894 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121012634 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111181192 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0876461 seconds)
  done (took 8.137090052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094173409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110920813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121282224 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120402178 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091039388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111313332 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110750361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090398803 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111761873 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116860581 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110658294 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134339529 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086471281 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115768993 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110947556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091356657 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112111808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110391349 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091920239 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112153771 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111663734 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118924418 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091465975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12107253 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142005705 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10593773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090768396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111406209 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121495984 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110413775 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12316394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091364422 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111175528 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120527631 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123134054 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090472814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10409011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109805176 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09216435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111910789 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104795382 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100247243 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111481129 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105978486 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091073294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111172112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121007504 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123856186 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113711694 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09782895 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111908756 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121183429 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109378757 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092069278 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121352681 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147194897 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121202137 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120788536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110322728 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101173031 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121301291 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128294526 seconds)
  done (took 7.686850409 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107537458 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115843109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117450292 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098986481 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083247444 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108859031 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082568339 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102550432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11334739 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094564687 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118344093 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108396565 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091340354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118137583 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109715369 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112647406 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088890771 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109777081 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114822269 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088239599 seconds)
  done (took 2.926913382 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094226933 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123283379 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084396009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113375986 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108080307 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090646544 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108530365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107205923 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087324581 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10754879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095261551 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117355109 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105463476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090389026 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116923827 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112386341 seconds)
  done (took 2.509533265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100185563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11780143 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120919603 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084314172 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105326972 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080237958 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107539423 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100756269 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081885292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121528343 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084554781 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110204425 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105081352 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083879125 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101802845 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087843918 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102383548 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082505227 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106262026 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120128299 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096296314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105668683 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084870819 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108314275 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105935638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090887209 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106452406 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102450255 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083911322 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10572748 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085978837 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114653424 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101456003 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084599172 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102796027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082817117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106130144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084529845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109540574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104557271 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084072904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105653506 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085352176 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107070864 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080203395 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107350207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080336435 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113249015 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103045746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085353396 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105849069 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086551045 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10708258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116096128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088908869 seconds)
  done (took 6.273729383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099145186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109720764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08133165 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103574548 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087971223 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108708212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109153297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089244701 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107407462 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08312023 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108476533 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089101514 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108447879 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108419434 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087537493 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108843109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080671361 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108896192 seconds)
  done (took 2.630367957 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092219708 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105083523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093260515 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106447142 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085578065 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109342008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080743854 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104636867 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103154053 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086786185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104895509 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088493763 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105502459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087326183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106536341 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084635933 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109397833 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102879178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086277022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101267581 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088613717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10498746 seconds)
  done (took 2.987909644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118739229 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126282926 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092800172 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232821169 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103796359 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133422689 seconds)
  done (took 1.658487654 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110805895 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121555229 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10616042 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107953078 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115679036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086014927 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10911919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108256061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117613125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102227191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109127141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118652667 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117642005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097350845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114607015 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115326877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107033978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088757535 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106934853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128511361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088926007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118021006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108321804 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086763127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109161291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11751688 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118050579 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101524377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108919994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119197358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113880331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088654508 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119407336 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122547819 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088187505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118698663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108588841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129157893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113910368 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097956491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109919247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114851543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098581928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114927252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119360418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108208606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094857 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109370006 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108153837 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136977847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094495746 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11867146 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115483692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118072635 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098460635 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13610114 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123510436 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117377464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115639225 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123318864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117596099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094600322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11695974 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1246271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114611158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097017008 seconds)
  done (took 8.1631023 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102455214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127083331 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108213943 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122227003 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097466069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109148241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107984559 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087619583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108852247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106017305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152281891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089634623 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118760462 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117941946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086683647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109856688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10929695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117617066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08842421 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135385987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109536093 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117680983 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096596317 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118750419 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123978484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116221911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106568924 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089858664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110269529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086751861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115115671 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109681716 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117184825 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087425859 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11823592 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108668202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088111235 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115541977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108397097 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11414001 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097879663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129170488 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109719974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107426994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102372831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110256024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110017457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086851603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109836298 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106586245 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102474403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123223677 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123023407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118940404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108050866 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088639592 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11052377 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107643158 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089568485 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116095427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118862182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088140313 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136229945 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109602562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108996651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117966988 seconds)
  done (took 8.061335082 seconds)
done (took 155.909697113 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230211893 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205089041 seconds)
  done (took 1.290428614 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088940996 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136809541 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096121638 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170996844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084764096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141357334 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139068494 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098770184 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108025661 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086549288 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107508879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086625868 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172891184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08457568 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108511491 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107793911 seconds)
  done (took 2.683823849 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118556114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.232676454 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125118767 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105308175 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090160233 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110573914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084458382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112849271 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089494588 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107439541 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087486476 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108363816 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084341459 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109452676 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110080388 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088974152 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105327403 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089686386 seconds)
  done (took 2.824232491 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113875192 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148326367 seconds)
  done (took 1.133136631 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242863179 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164938385 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232580132 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.485052981 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281273085 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365863925 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204865547 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213525242 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164764628 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210123713 seconds)
  done (took 3.42869145 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119051014 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18079308 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317286307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156530938 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107400536 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129952455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157872838 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131678902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123842737 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101919221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123301117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118600007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138940573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095290798 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116674759 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11757899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120919846 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115159401 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114190979 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096802672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139093159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085586734 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117018076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114176849 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096925544 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120746221 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105684554 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084797539 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117216818 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093075179 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115149988 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126195707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119450346 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155752337 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12317071 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15706981 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117812473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091551679 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11587262 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091219508 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119496009 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120420864 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124324131 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098070526 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106292089 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097083373 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10794038 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084949753 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11586966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119141247 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093651372 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115549623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155973088 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121026024 seconds)
  done (took 7.417869462 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787191538 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156867976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089444252 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884174001 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11160476 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12782226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776087134 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111506076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257492903 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750033009 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133373952 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096100319 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228209974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259235122 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925298667 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308989657 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640306588 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126125828 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151613307 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152870809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11636477 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115103326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131285518 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429537976 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117293525 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089580062 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117826573 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119285711 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160098903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12592343 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092718069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199967219 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247656165 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20395979 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094338642 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111582936 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08833067 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191657513 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241833856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216371394 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181444454 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108662681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088970759 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122981707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13222647 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086509085 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183591053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175339237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170981572 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11510007 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096696814 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121547176 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122240343 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164330492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122397633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318861886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320848884 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090382312 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122495376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125856131 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23927602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125214268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227069051 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138568176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190672892 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112551533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778446155 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170701555 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088753383 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118305681 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120357458 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093666363 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121937602 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168205663 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408395128 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124558284 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092497337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113182276 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225569466 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103563304 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113190877 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162427127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116280108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098331673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126053301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123166976 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169778823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231114493 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1243181 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12032647 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093529122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126108642 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117953245 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214999112 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219858355 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162041883 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212005953 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123485509 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163695602 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192729665 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096732326 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194065244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097029336 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124964689 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122676171 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216800665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145435213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100953512 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116521887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117511362 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147687046 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103953008 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120464803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16952461 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481871588 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168664844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108771615 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105338967 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121228537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160459763 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118297797 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260061137 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099347882 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192273905 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098226794 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.1100943 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120359077 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163542138 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12100154 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099216359 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123454056 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11826128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234829718 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217054158 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098954014 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244202634 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183822281 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118183481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171056495 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120447659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169039831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11863693 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099120786 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118427008 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771757192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101995529 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122205917 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115364232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18769183 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090544786 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124737183 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123969127 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088089928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792456305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127843799 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1004165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125125618 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11775126 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098350497 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119797547 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115374555 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161751887 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230288954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095952373 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12037019 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124974338 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16106939 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118150183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123527446 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1032908 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125664384 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121959454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092991977 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126067431 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169011385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185784356 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198092966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59852302 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111841524 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103090269 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229363311 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112594227 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288722363 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097969852 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226781453 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162677026 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122291758 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319163576 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165859471 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187321221 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128427643 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172677043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109182902 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095854659 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188081586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089624816 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119138393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162816508 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12511643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121789109 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.945339378 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114457005 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226752237 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10988936 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172988006 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117078831 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096758927 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291395762 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112987652 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12709262 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167130679 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091446735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12572845 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.876228109 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101805148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123257878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118398621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221828145 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164032903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119808405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096824324 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121287172 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162769548 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20642167 seconds)
  done (took 44.080137062 seconds)
done (took 63.71644354 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279344858 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220264465 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269571918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17214799 seconds)
  done (took 1.911316148 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172852363 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14956994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121053755 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108824276 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151743019 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084716135 seconds)
  done (took 1.683302571 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365034012 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279181741 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245237431 seconds)
  done (took 1.785079867 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319758992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252391481 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472260883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325032082 seconds)
  done (took 2.364262191 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211706344 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134465066 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111173901 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103934549 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198800867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247482262 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142897426 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200945844 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09806981 seconds)
  done (took 2.389662509 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197809286 seconds)
done (took 11.227425648 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.29873312 seconds)
    (2/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.227500285 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.225685321 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.195792887 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.162922158 seconds)
    (6/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123098776 seconds)
    (7/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092699276 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.19592116 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.150005396 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.231240039 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.135748533 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.175258596 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.233067603 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195750394 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125179053 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229513223 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097346481 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.204687315 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.125667159 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.129828864 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.144776331 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.199009643 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117264079 seconds)
    (24/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093090088 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218923907 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.107425597 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.200156344 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129136118 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110920094 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.177934537 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11537872 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143926695 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125019614 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131230941 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117903099 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176035947 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11378988 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116571384 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.129143662 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168158245 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117752872 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214559809 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093948887 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113824797 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184395927 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.172971867 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112512514 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179543341 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.160037805 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13731945 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129649707 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177381082 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123987029 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203419609 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196028803 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175762175 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178690259 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.186767069 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098109554 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166636332 seconds)
    (61/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067602969 seconds)
    (62/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.189130707 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.151109531 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086643078 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125459788 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.174460518 seconds)
    (67/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198593795 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117363715 seconds)
    (69/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06652348 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066826126 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120909938 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.110157145 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218621928 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067724059 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22441895 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.123301397 seconds)
    (77/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091596064 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088466317 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220414537 seconds)
    (80/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.111645691 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115428511 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142253107 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116633227 seconds)
    (84/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084564065 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095951512 seconds)
    (86/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106799025 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109654678 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213574401 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123839192 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118102685 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068009849 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124588573 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.115166815 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12019721 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067423666 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089027423 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104624969 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108394496 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.191184443 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109368489 seconds)
    (101/309) benchmarking ("sort", Int8, false)...
    done (took 0.188570867 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185094572 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174521695 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109938772 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14315767 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117174704 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097340385 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.203241114 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101477789 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.180078155 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09565418 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121446228 seconds)
    (113/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.112440619 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118841999 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093313869 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.313980487 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138741153 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126462756 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144252709 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107821709 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140565313 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153977969 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102751862 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.169145867 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115990786 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134424803 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113631824 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065132141 seconds)
    (129/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102564464 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085519409 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118988822 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144435795 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090990186 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093054276 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091606464 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096439374 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119450493 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.129962536 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083384638 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09326856 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119051426 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172375458 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08759288 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109338976 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093562836 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135785729 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170574388 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086878362 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115887731 seconds)
    (150/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.115016868 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136404645 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093929126 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089440399 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136453023 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112731814 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093941653 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.100495899 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096402129 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116329436 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086805116 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191752787 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076186437 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090282224 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085074289 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110949811 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086515604 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091091874 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223912389 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088683289 seconds)
    (170/309) benchmarking ("sort", Float32, false)...
    done (took 0.174292775 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108027736 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194899085 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.091925419 seconds)
    (174/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097824423 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119971696 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086226308 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111735476 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186683342 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112304673 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111282508 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076325208 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120454899 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066407419 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111282772 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089439258 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20189681 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126697038 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086931594 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11744393 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066406548 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109143691 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087153178 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118236702 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112691478 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116479718 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.083727288 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115831145 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084062722 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.1089888 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08593174 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118285379 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085237715 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110717135 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094573732 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13678534 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118205036 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094698346 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216225474 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0661548 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11241123 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179900749 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174553652 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088615196 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109012574 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127126173 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129005547 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077314628 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21405379 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081819808 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117871456 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093402209 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138674707 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066447187 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109987345 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175057752 seconds)
    (226/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067506934 seconds)
    (227/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066349721 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115533026 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066569346 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134908614 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189743385 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067383495 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189657648 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084814297 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.166886952 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110487971 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068317073 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.169438363 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1142767 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112030332 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11879451 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091349602 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067232735 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138176829 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13399031 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068165336 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110967071 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067531256 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067488469 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144765639 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085812615 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.093014146 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174941751 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09501877 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066216231 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11845971 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091175667 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113400261 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093003092 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110895616 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195605259 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095166064 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 0.173124451 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137011437 seconds)
    (265/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075675298 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116714409 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113342457 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093511128 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112004147 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111791331 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089377489 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102790417 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076810453 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196239127 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.1205104 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086336398 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112307863 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087308108 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153306047 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093261931 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093467303 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084932606 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092405994 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086003147 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13588456 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134471773 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069826884 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094574955 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118297839 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133809008 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07727861 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066659151 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092190362 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098186688 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116846596 seconds)
    (296/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088740654 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.100404009 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068417149 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068580641 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17947124 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090273218 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068616041 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06795598 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0916611 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094024093 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066822423 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117457669 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085959443 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092735639 seconds)
  done (took 39.70572923 seconds)
done (took 40.604880286 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100915652 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148606939 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095551562 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137247171 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124108032 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091954984 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119320832 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097750383 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124776805 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125430653 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098948834 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093971253 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097649033 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121073195 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098435268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140536326 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124149922 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094893437 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120503528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086014797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120394265 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085783645 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113453329 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069364733 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121841492 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094382634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118094715 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119777785 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087326931 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110143898 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09185929 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118004849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087533261 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124389893 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093805398 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119029241 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09695639 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121751898 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087618282 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111669161 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118605492 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087872751 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117204875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094996842 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117719466 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094383181 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11939815 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099434723 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140768134 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115967432 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096017577 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121639856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096315588 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118557783 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090723382 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120828554 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092414151 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143297634 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122792925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092442255 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121050261 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095185851 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117219977 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094716716 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120839621 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121223715 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099355516 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116421284 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097196821 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117390566 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087462345 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120854342 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089846632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111808199 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09586755 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122788249 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085313843 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118904667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117262706 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094071859 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110553502 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090076386 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113014038 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09364984 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113337708 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07114028 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089794467 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118679698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109741813 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097005976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117183562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094638859 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112963364 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098970819 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111465214 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092770058 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111529882 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088014027 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114126114 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090871982 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112550002 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08959335 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121306002 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088471284 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118616776 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123066936 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087955085 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118063278 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089019672 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110956815 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102500747 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121942978 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087311517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117876465 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086508671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120382837 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086686802 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112674112 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087278787 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111947214 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092406688 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112500756 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089437459 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119782102 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125841429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087892037 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114666298 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090695576 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112285617 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093895398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111405346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087758397 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113266447 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079134142 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113971252 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087914705 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11929406 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091568573 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119541997 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089274863 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121167721 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092108987 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117887539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093066728 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112104254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074717229 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116909713 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089631265 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113460922 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087496911 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113413739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087175177 seconds)
done (took 17.04432887 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089461396 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187232069 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151969138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143778723 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1079014 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11294127 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121542013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12012874 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11492409 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143958876 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11198552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133513673 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149641594 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087427433 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113167416 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091912762 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114082228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102833665 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.1482982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134054005 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165402064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08724243 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149370107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13690505 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121906123 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106052024 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112658654 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092340343 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115915741 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114567755 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133770678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090423682 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113878043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134854441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106307139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121486239 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087643331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120565905 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086991035 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113588784 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14286138 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110173134 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119035735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118207832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092545079 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115273899 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089870428 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121870083 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098413135 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11732514 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12700895 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158152751 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091680633 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122492805 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086878475 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124177351 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121403784 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090792387 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11228146 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091342701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112011673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092465949 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128509171 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142842803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093334734 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122940327 seconds)
  done (took 8.690711134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105842909 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139857899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12240972 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13202238 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111798293 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088061949 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113162319 seconds)
  done (took 1.776687552 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088984976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134469767 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111820781 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136902075 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132381977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110166577 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123530762 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088263977 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133033358 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088919803 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135646692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152900652 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090038126 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121780563 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138528804 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089593192 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137554458 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089230233 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117285086 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112115969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117967901 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135505084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090938174 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114622623 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103443618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114399103 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16292928 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095159937 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115027747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093341084 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112232412 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167095065 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106007465 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12617759 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088210072 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129380516 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129229012 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087838482 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130909311 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094361337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129464544 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089964309 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115553865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08764378 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120408664 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124824004 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090939639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114393893 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092538407 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134390827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089917294 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129918946 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089103906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119071613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090605112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121058765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12454106 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09095178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133507711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09091219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131634902 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106106924 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129280643 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131132533 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092452303 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127882683 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103312865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11828798 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090959812 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11848938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131821452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088302737 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115840957 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101281405 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116448685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112358359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138548814 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090535706 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12614038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11479209 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09016841 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114890252 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113477579 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118776099 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089357535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120134178 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092419086 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113552638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0881678 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11877011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087113509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115990905 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09255683 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11562931 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116979523 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108102358 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11526478 seconds)
  done (took 11.891504341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091287322 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114714937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092929541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114770398 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090491924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115749758 seconds)
  done (took 1.596461948 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115908653 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119136022 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103826842 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122372857 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156370025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10470019 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13141577 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12445757 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107937 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128444235 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130281367 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106051378 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137748595 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12117528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104750635 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120994393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130006201 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10153759 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127594047 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097234583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138939275 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121288996 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097283024 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133072844 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118681269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097084664 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126290376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102644521 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128571686 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12418119 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096602601 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118764378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095908534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124510514 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131460145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096625597 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121634614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119435981 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10127219 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119096819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105010646 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122628488 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12766221 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095502815 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124809229 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121517366 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095307019 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126325263 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104610734 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120443071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120034103 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095729513 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118681641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094283338 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123286367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124151754 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094447257 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13067357 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09594198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123108821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119060983 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093942268 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124779811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09361241 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131298144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120312735 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096510129 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123235668 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122093756 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097074472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12079244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094401483 seconds)
  done (took 9.285866205 seconds)
done (took 34.203054076 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69470089 seconds)
  done (took 1.669840044 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.720958491 seconds)
  done (took 1.698827689 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.884233418 seconds)
  done (took 17.859029674 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503850069 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589210559 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888234856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181198641 seconds)
  done (took 3.138133148 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.95139253 seconds)
  done (took 1.94494817 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297858198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258983781 seconds)
  done (took 1.537172704 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777953744 seconds)
  done (took 1.764797486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.359610417 seconds)
  done (took 2.341500573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333490605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186759439 seconds)
  done (took 1.508074281 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545879073 seconds)
  done (took 1.533884525 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.828340731 seconds)
  done (took 7.824531273 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26693305 seconds)
  done (took 1.267457159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301400018 seconds)
  done (took 1.293364723 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.508140612 seconds)
  done (took 4.500647979 seconds)
done (took 50.866532214 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099782511 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126948159 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102593599 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124381365 seconds)
  done (took 1.439097938 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101783762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12168763 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100734428 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121232512 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126334078 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095930536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122324599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10053536 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120793143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096291087 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121143861 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119096759 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099955367 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123596505 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093490674 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125017214 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099640579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121948675 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124954159 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097295992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118832174 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097460641 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125332195 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093972617 seconds)
  done (took 3.664061714 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100998869 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119123122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097147924 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118566581 seconds)
  done (took 1.437017729 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102023029 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142097915 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139138709 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101155605 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142710505 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136096721 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09311232 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116545451 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094935344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124963673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090458524 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150471429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13793771 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099128767 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127511138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088201109 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117682448 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137088452 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09956678 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126664201 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095342565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125931325 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090126716 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139996087 seconds)
  done (took 3.815071139 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168736897 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128968799 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138888605 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095295209 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161151769 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140705099 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089397728 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141259132 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087731946 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13211474 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117410801 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133200282 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130010513 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08809643 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11476433 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088019479 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129690275 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129058277 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091044459 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128621946 seconds)
  done (took 3.43626266 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097807522 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117786246 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089556549 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116827838 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099200418 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121452936 seconds)
  done (took 1.646353982 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091927348 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115184306 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090430192 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114580656 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095016482 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115474798 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089441462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115436403 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090741445 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115366195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090044899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114613134 seconds)
  done (took 2.242076152 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499861984 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119311716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119982845 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089044047 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123128258 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088904479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129856617 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093375462 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14272549 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088797977 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11682336 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091144587 seconds)
  done (took 2.70557278 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236011651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126884087 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289901967 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369364427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158328939 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178938449 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283038622 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162773854 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225681721 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167545455 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203978436 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226086581 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152012589 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190446796 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13912301 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119589937 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234183278 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249999817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154975307 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209741354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230366678 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168377646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181320028 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151565702 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138603884 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17391698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09496219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131965928 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235739222 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177729578 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189026199 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189128498 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146891633 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211709784 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255057753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223399836 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286796502 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109222192 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178002209 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169410574 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264480739 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13907236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204472009 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154953803 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133025016 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191577561 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192614797 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176289497 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1524124 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112531935 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222518395 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239736266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193859678 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139081453 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305303268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151402376 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175224229 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221822737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224909705 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227236181 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187061818 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122053189 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188184173 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217656755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185897059 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175122761 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181039414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149457561 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228403832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189833361 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165809494 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220459815 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186511098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141759332 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171444819 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174015956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172262234 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259009847 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184873594 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122210938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170769346 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151713744 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132483722 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168457504 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126406131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239949005 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116393565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163736506 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246459022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159970235 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16113609 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204392978 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231581243 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148570738 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084346553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155787323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157321377 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195853432 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141428161 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159602729 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164669005 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129739455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185116521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123152618 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185427669 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090911569 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200531397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183309657 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100350519 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161036141 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152000712 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151482877 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173737377 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225770251 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115020712 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134576992 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237016281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179634732 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15252323 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179500099 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203194677 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145411559 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150854553 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199857286 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244905473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141180035 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202795184 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156932322 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136514821 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131691054 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183617482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155783229 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161844295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10826493 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210508406 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207248877 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126261141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138059821 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194346388 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134853872 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105394494 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190463498 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122028134 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140181527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153617085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155029284 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182598703 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17777281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154744617 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166171586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152417739 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255333584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142721871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152069258 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149816121 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093696804 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221498703 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201004846 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131188511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205822975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171551108 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23269524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170236899 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135227781 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178420293 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103459907 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122044984 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194567216 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16879769 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161340568 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225513018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202919118 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207981197 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184301258 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175214037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174503065 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166816395 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156781759 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140345615 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160764585 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173128117 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096335736 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145115976 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135092592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15000898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144560138 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106529327 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22576447 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170147821 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217797508 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160634416 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123458314 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181632755 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129977174 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174022579 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206716632 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120311302 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229467962 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1947917 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214111176 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117224711 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231358181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093825531 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126679034 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143965813 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172042658 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134472468 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109073284 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164338436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182032335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209853306 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178304372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239901727 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174701563 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191551046 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122350063 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141687753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213225902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179428491 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193129443 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116567662 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150737017 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178972259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15936487 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255405151 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16917235 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176204375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235521151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151457178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104050087 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152332131 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223559044 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155155984 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178588767 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14833835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113697192 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189656294 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106343838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160833787 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214693026 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164428791 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18887108 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152081523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1850621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129196654 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165003213 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160966673 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166058691 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081031649 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203308625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205214888 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150805101 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168211914 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217328592 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104893889 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310157105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244899671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196067986 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138238034 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157661344 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162136425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165778624 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171149286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179541884 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160439608 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189426923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160506455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138253145 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142029543 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14943508 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123157373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131868461 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149876112 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176882691 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140851682 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18480259 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164299977 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159673084 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175409726 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151781101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145952329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152345377 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216734445 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212001399 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211768114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151811984 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181314663 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236073329 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098233993 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247369 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134890259 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179327478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108843104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222560736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18904608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232731708 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184642261 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195080358 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140229845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120888986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157450864 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175864553 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209665361 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152346369 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161532881 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232416144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119549823 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132470123 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1789516 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318411299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119865148 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226413681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079695626 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281926545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126727051 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132222402 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136900516 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235183678 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137090543 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190501472 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173420081 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172185847 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16607732 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151325214 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19283651 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24508835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201973756 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180103491 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133273396 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157480068 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17868409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220988116 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159121777 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112808301 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233733118 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197324003 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197395302 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142841428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172001136 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169079481 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158196077 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216909664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108670339 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236274623 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135182361 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195096228 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15453969 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145999478 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177116509 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189183557 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140445518 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217493123 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184732572 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135872093 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106240758 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169921085 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206269496 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157137139 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100721683 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208963046 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099123478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19454634 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258391553 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13576238 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156443796 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148351204 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107784383 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155708987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158874116 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142101072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165191685 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205043779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137220819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191941418 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233057181 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169409632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175816696 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145781474 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692867846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132194062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196570472 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16103537 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235561658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121925819 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202139555 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157989555 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168928421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197358851 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161093558 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232622133 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192269407 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206734733 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104463132 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15921223 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164344241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144284374 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152168746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170208362 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1606883 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154524529 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178954953 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199621023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107093839 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14260918 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200058456 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161716597 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182509958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207794401 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111161979 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17461888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218995001 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105908001 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209486316 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208761289 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143200961 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153783083 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135595184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158288366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26174282 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097023945 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236405021 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18623095 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160902662 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170443031 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148105237 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192834873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158538347 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215786525 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148027412 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160971793 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156126809 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11027537 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131569843 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156860733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169447199 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150174499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161310931 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140376751 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220773519 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09615174 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14670058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291946199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223296385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215355936 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137578089 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135666751 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162653185 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124348816 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20594283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179503272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136650276 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109307334 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137877002 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133544822 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13750183 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156931792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199749545 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166889158 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237427977 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108202262 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279588667 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141489321 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156625531 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088331483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133378484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151672272 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147321443 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15979429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193904491 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264042765 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148025007 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106248223 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151562822 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126959731 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108536846 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166745054 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164054874 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205487721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118200326 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110077041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158321558 seconds)
  done (took 83.753159445 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170503067 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133524764 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147887116 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203060543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178116197 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271677074 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211486211 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255213354 seconds)
  done (took 2.667162832 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094914037 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145560788 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159004889 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1341725 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091656315 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.1212222 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347532848 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134072947 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116058609 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122427366 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175453437 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094647446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554647321 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0907459 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120368731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108505636 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092544486 seconds)
  done (took 3.792427293 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478573716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.732008477 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512028068 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097308424 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.200128444 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11299135 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.686760752 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19710691 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11548299 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485130885 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778314998 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159272198 seconds)
  done (took 18.65645859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099440571 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122064222 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107955036 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136757072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096771667 seconds)
  done (took 1.668953624 seconds)
done (took 131.911466656 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105207929 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406475348 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07214519 seconds)
  done (took 1.614667675 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108413419 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137711059 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109304668 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137049616 seconds)
  done (took 1.600789926 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098489986 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12769373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110054094 seconds)
  done (took 1.439263914 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325452337 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190915643 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164667768 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106816944 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129897359 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10306735 seconds)
  done (took 1.447477763 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096702172 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128249514 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097749103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130720427 seconds)
  done (took 1.562913783 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094842871 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071110942 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103495633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075952798 seconds)
  done (took 1.449806191 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114088095 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132765428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104175449 seconds)
  done (took 1.461879096 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130051934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139673744 seconds)
  done (took 1.380664667 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106410217 seconds)
  done (took 1.210454905 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118189361 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170383005 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191702464 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166516592 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.237745201 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165712475 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14216255 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114953321 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131187763 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144438983 seconds)
  done (took 2.693558065 seconds)
done (took 17.752485488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103936185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41976918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413263146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116960451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721751517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381232042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032764648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146754805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166434458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093194522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140341637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67174117 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024076897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375033799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981939263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371746017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675974367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121624564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120130102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094169555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.01746707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092687552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12243191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093009719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702542399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4263663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094667243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371474565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092513629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127392285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383234602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123065871 seconds)
  done (took 16.918819892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095739881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174406413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098595989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138229112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124692179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094544244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124904831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09403515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179827417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123392918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111044104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12136073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126593964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096534846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143150696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092731069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125206789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092834586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121978774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121989115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112566905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121570771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093930899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122044392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094148805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136047394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121985886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092669312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120927438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099558284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128907043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096030565 seconds)
  done (took 4.854003703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141284255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183048659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129126937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12832094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169436063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12498677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199715392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146904685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154463073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123871291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140698325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092432464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157150467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124335656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114586927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122552888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096691951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122418532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093017961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124132443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141402916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092976196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123224391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093753565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123761102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108759676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124153856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121017609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093694229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127952317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100399108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125283021 seconds)
  done (took 5.184903639 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097246312 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126399372 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109140929 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139710563 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094821994 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125885318 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098195626 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125153295 seconds)
  done (took 2.032867286 seconds)
done (took 30.09638769 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112048641 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131827744 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106609385 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136227743 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103430956 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133025188 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092438339 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134768126 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134245292 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10232411 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139204884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092573842 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123761999 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091943148 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136840108 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097615226 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133217381 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103115284 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134994747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133008916 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095173589 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134069403 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103003662 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134344593 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104316895 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134463545 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138008187 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099399381 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123252671 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095803103 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125773256 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103966517 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125184367 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105157847 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127487366 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097404291 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124658596 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094462665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135672518 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13414732 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099903693 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134039883 seconds)
  done (took 6.052979295 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108376228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140758041 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104885154 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081520131 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118009777 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081077083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138783012 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079281814 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110938761 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107922321 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074674251 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106951732 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077894759 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102324982 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077717524 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075433026 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109281009 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075833769 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075975384 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106587705 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080039357 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073411983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10921982 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078805726 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07486552 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111207956 seconds)
  done (took 3.604514709 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100342245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13733275 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113235695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185167809 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161811175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100075531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133578842 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140794797 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109284973 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121061874 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096847986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150552188 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111789736 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130330855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092231072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138776636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137003851 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095407017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129140148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113790285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139541507 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103581337 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143872828 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134400412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092865668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124775023 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096843263 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136750654 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099110542 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132802701 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09664794 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125795959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12398095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105648055 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127195167 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094960776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14308308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103361404 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132069828 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093507608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127178662 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122735506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114623211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169537805 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091652462 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132530692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099287551 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133107226 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122393351 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110802433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132498867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092567414 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126660289 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091549518 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122689486 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107171501 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12506391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095265641 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13184887 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124465334 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105503512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125834465 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108634915 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122729894 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099780195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122549521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092993836 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121074972 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1158479 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124443529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163967535 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094377413 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12431491 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103447342 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130080562 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129299515 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094044316 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139356835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102943359 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126337497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102434496 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126519677 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096614848 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141306686 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095151297 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124859024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092814539 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128831738 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124986035 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094922034 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136484666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.0925994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126222352 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110351747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123018986 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093970032 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129208152 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135670158 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091817952 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136253573 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098594186 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12348606 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131930072 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093912946 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124888403 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103450781 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127448758 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092198828 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127448432 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099042577 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123808278 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094258635 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126221311 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093914249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132593405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099749194 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128144567 seconds)
  done (took 14.926937269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228574273 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216375287 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238919336 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265739993 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136548816 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1154185 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213268879 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156281617 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124254518 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161348382 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16326705 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183136715 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140278025 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181047191 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141577268 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123326142 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11346255 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166256537 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216101654 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292369407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113243071 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133690129 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164142103 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163000278 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10680239 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13341931 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139918409 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105549915 seconds)
  done (took 5.777244817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108971025 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15765751 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097748443 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145164952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149119691 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093006182 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128418514 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094833811 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136165722 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136072862 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09331025 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129402689 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100169867 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132726202 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123370803 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103430743 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132849853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094596785 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126530624 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096849945 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131032093 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101299623 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12783035 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092562746 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133148946 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122540683 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086697556 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143271312 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093339036 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14587108 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121826495 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100472419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134497416 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093460813 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12414835 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095742585 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126753662 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095907675 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126576107 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092054581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122992722 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077773211 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123609089 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106894586 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130704555 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080358248 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130970249 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128915906 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095557727 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121042092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097332905 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126138022 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09806539 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131344193 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098946586 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124358961 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097146273 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116592447 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100866726 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126293556 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085338826 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121309594 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099066141 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119026509 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101661372 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128678769 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092330793 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126517307 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098119584 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130815409 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096310349 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127884062 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091360816 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127073086 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096326152 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129052337 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09723553 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123318351 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093211042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124883589 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07552746 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124629533 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074399418 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128147567 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092798255 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123029906 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095194174 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132031447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138127479 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096659805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133021756 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094693437 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123668807 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096787248 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114019997 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096748164 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139921263 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141397464 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094291382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122388145 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107762839 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127158033 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093130245 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106794794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101246068 seconds)
  done (took 13.038066348 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128217692 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155135063 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095312486 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143950513 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156913912 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158008968 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101339403 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13183 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096008894 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143565138 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093656334 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133259604 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097727197 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1379834 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158597275 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103929294 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126739413 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107568115 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133153494 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171442075 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11214475 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143784407 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108086503 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125278089 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09926692 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141690596 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162044595 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108151097 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138254791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142871451 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108496618 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162512315 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11280707 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12893946 seconds)
  done (took 5.525773525 seconds)
done (took 50.041067612 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.237802723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440047008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.214539732 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.197079493 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.240366721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225278864 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.243234014 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.213117542 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.706335403 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.214598714 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44182358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.892862976 seconds)
done (took 60.413094984 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.317392443 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.354465322 seconds)
    (2/2) benchmarking "String"...
    done (took 1.4813291 seconds)
  done (took 3.977270632 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566010551 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.163452125 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.481216323 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.214895232 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.234512202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.507161285 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.878667241 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.571736055 seconds)
  done (took 28.19444151 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.228018062 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610175593 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.927616655 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.934037652 seconds)
  done (took 18.842985652 seconds)
done (took 61.043483972 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199230079 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.271106346 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224517173 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.196016252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.336952889 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244273801 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.59907814 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.265268491 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.243886391 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.195699897 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.243856151 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.23754837 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230935512 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.586131414 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.220231687 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.221434739 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.242814726 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.79462955 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.63252609 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.234722192 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.250474076 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.267541699 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224668301 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.22284442 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256435575 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.231096432 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225650917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.226771883 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.838835311 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.220980683 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.235471286 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.793888148 seconds)
  done (took 191.559981393 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.217407987 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.260418567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.371144143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.279864698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.747415921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.422438251 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353967358 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.82461499 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24225396 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.249438262 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.424174552 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.225299552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.493659314 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20801155 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227149956 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.221265089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40018868 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509887913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240439678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.49281116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22090927 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.425942799 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.324140483 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.407472924 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.253878216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.309843476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.236974448 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236289779 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414299571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342087564 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.232847699 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.240665741 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.848203055 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.084971197 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.237625381 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.250699064 seconds)
  done (took 150.625422755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.515198357 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220197258 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.220265881 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218971933 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.253027532 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22293538 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.803933489 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811109778 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.739420741 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.550994371 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287333263 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496389196 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221263286 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315490622 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236053154 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.221752804 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237142443 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265002715 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226548915 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222871553 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808595071 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.241973951 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.23197455 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251995271 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223185484 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25740564 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615908935 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224135951 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257412017 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561295976 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.275768176 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223995582 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.632856164 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.911166344 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343137021 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225270602 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259034096 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228780533 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.503537949 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22490614 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222549777 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.229648409 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920428971 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229960085 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808778913 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229973495 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218938829 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.230193459 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226363289 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.762953706 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.969235089 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.247150447 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223358838 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.22634221 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224797645 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224475582 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.257346951 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.696060791 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325944472 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.24562049 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229680373 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261985324 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.229711705 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.380039557 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.248797066 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.034299676 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.298485626 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337329619 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816263845 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235808088 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.227240339 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3266146 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348765994 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227207673 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.227773101 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.230805132 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.23019341 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.340063525 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225967926 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.231398991 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659672273 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229035611 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.234506293 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286978436 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.327454386 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225731282 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64191095 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.23076869 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.230687065 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993591442 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323702711 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225048662 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229241689 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226043545 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.66133703 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814656193 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.506313222 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231759133 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.23182853 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.673512109 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.232078795 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.228269988 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.683182621 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.790159768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.939861182 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23259657 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34544562 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228218235 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.23265971 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.229344061 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259404653 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.246281218 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.290312991 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.229320924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.630004925 seconds)
  done (took 350.814940989 seconds)
done (took 695.661531724 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882824992 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872409159 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.987690078 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868201002 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.826542929 seconds)
  done (took 10.578340609 seconds)
done (took 11.727383767 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429092242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.429124847 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29321671 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429826059 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265633022 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447612418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406153206 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25314522 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.335697872 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.322450948 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339397779 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287514907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261165188 seconds)
  done (took 18.642432386 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557541965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553494227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293836386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.595518713 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269170706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565393389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441742819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449262144 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444351462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2639035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244861984 seconds)
  done (took 16.828765489 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568394616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.592075255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299130918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581245513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272404122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558496946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438176188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.453022062 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456422322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263821197 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248070569 seconds)
  done (took 16.881086323 seconds)
done (took 53.498833811 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.244374669 seconds)
  done (took 2.392349915 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278018369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.451937252 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258838425 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248125241 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.24455884 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.24413799 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.241824802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.241776372 seconds)
  done (took 11.359994747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.23937131 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.241512871 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24236867 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244475169 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.243520464 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241502999 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242748758 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237166211 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.241534319 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241009332 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235389186 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.234759466 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.233801351 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.237736664 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.24115727 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237161503 seconds)
  done (took 20.986806456 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24002984 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.235037997 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.236322254 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.236468879 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.235206784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237283353 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.236221359 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.235205411 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.233730936 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237312555 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237163151 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.235736347 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235860077 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236221693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.239562055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.237451329 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236604449 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.238278201 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.24055454 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.236904681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238242197 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237899833 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236374789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236687869 seconds)
  done (took 30.847472312 seconds)
done (took 66.737579705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.39467773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.034373779 seconds)
  done (took 9.588631658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.242215735 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.243059648 seconds)
  done (took 3.639149769 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243414634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.239773641 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242813133 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.244727091 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.238452988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242710594 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.239321271 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241935584 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243228649 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.24044416 seconds)
  done (took 13.570492059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.243154963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.238745937 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.239934962 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240206516 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.241758212 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239376412 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241415403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241336649 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.240130102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23497643 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.239997619 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.236251624 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.239990575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23528554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.238980119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.236606997 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.236696407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.238332927 seconds)
  done (took 23.462550631 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241425334 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239985687 seconds)
  done (took 3.63629399 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.239888941 seconds)
    (2/7) benchmarking "second"...
    done (took 1.237239746 seconds)
    (3/7) benchmarking "month"...
    done (took 1.237352897 seconds)
    (4/7) benchmarking "year"...
    done (took 1.237444713 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.237533928 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.23875007 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236879036 seconds)
  done (took 9.829007355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.239842994 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.412231257 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.495768626 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.838075337 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238307203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241108332 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09254505 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.241669305 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243027394 seconds)
  done (took 14.198858893 seconds)
done (took 79.083466932 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.266037542 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.253385566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.402579707 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23496183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25288775 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573428552 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.256667872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.367821993 seconds)
done (took 37.763013296 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.246446359 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.991575977 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.002222319 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.229724221 seconds)
  done (took 11.378511742 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.21326486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.156039239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214058829 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.248273632 seconds)
  done (took 17.98754422 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.255944921 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567290912 seconds)
  done (took 4.978782579 seconds)
done (took 41.745220354 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238309959 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23832507 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.234917591 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.237420476 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23684388 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.235594679 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.236002828 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.237342066 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238946181 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23844474 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.237394323 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238145037 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.237931132 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239051031 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235314397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235041545 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23849429 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.235957339 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23574319 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235037615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238610399 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.236496588 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237331417 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23561582 seconds)
  done (took 30.844211117 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.239700418 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236722331 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239692634 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239569479 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236078903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239784732 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.239838164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23645651 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239865036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.240936517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235706905 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237495641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240354925 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236433169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239600252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.237501844 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239413382 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236864746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239997555 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.236431018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239837566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237213186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236798528 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239883973 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238661209 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236177145 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.239361766 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2390704 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23982505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237589205 seconds)
  done (took 38.31065888 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244920078 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248195547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239495753 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.240155128 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239445685 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.24032035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239998938 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239846608 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23956331 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241512187 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241306744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240310236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.240572 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239692761 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241208387 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241649144 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.242910744 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239786036 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.240582788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241844041 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24025286 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241458983 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240901635 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.241451073 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242152736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242045093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242317719 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241839549 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242187487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.242237875 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240950419 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242901843 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.241306921 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241606118 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242043218 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.241988017 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246845421 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24855229 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242165052 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240725005 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243612828 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240920575 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.242381416 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242492007 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242373321 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.241559555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242262665 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.242587495 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.24402615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244048084 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24335679 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.243051879 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.241593337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.242187372 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2425359 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242853924 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244224345 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.24314686 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.243779072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.243747537 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242708519 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243082095 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243005739 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244682239 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24359361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.243981823 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243251349 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.244109523 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243259736 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244332656 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243451636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244545871 seconds)
  done (took 90.608899099 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.243289134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242183013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.241382523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241773722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241781523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243372178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241884477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244588375 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241954482 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245703515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244616609 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242483737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242078152 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245548887 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243957283 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.242875361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244398326 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242301631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245807166 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24605161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244921909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242660756 seconds)
  done (took 28.518598317 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245649384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245875923 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240261019 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245247832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242514463 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244828162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245822797 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247077572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245057476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243908895 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240884072 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245173063 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247683912 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24252684 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24209852 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243806397 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244686374 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243515662 seconds)
  done (took 23.559340084 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243107143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242205719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244664674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242602933 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242952931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245731315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242941085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245417656 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244368278 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241261362 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244597962 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244692388 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244591181 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243327995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245577598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24140872 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244223644 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242102885 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244118887 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243975937 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242169846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245382878 seconds)
  done (took 28.523329885 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245907234 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244858363 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243448236 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242071455 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242610032 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245548934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245465708 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.243065069 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245644895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24462775 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242569582 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.244381442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244608483 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243077648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.241744236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245050818 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24591103 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245166857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245950951 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243496886 seconds)
  done (took 26.048814996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246128757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247183114 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248760385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246648708 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247750677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247047847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24693408 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246882751 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245913701 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24676527 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248010504 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247329879 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247449086 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246887154 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247007895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247372305 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247440127 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246131814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247098753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246693785 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247730311 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249001545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248127899 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247496555 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248576996 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247668961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248337543 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24787463 seconds)
  done (took 36.090442262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248270192 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246877985 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246361979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244439833 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246121607 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246472809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.245374546 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.245534246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248647444 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245213852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24913651 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.247744503 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249173164 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.249686425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249024681 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.248800676 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24959043 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.246781185 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246174738 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245903408 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249898631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250649937 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.249303297 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24602106 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24745392 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.248903767 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248397021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2469567 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249676774 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24765581 seconds)
  done (took 38.596202565 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267928538 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267098189 seconds)
  done (took 3.700776393 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.247992352 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247865327 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250041421 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249154296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246401813 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250180172 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249865631 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247008076 seconds)
  done (took 11.155580143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.249765881 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.250131014 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.250454814 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249440761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249924451 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248205787 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254417328 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.268010665 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249813099 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251653773 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256752136 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.256231173 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251325632 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248965502 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249234274 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251277715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251757112 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249558322 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251006063 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.250570047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251325044 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252024231 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251791663 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246597476 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251493952 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261253864 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273216133 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.247938777 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249190415 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253259408 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249360972 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245372419 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248741663 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250019397 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250259659 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248135118 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258144935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269185502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257820706 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269468689 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249895689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247212861 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251263762 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253175903 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252163304 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.251074569 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250653085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247327814 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24923597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252934385 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255654374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249714307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248853573 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252472108 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24999376 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256958118 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268507579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253687356 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260473744 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.261784269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281703731 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275229585 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252731634 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250903013 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261519313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274458501 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257903521 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267021106 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248667278 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251226051 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258122026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281486295 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276679878 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250641802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252761683 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251667603 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251037087 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250632527 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25919143 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272342174 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251808494 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250889739 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262362783 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273998334 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251765351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25172134 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251536171 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.252664191 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252951305 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261926395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270949678 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252962862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252981049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252497882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254160355 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25346971 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252993129 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253370292 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249599066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251899859 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253160542 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257352901 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.261070063 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251820552 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25344689 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260241841 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.27227694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253149263 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259485624 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253210197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253311783 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256504399 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258915484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25163671 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25567593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262115592 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254345356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255053707 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253566248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255330246 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263914733 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.27811277 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255061302 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255163623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.2597525 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265486521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25523157 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258158929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255163826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252413284 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252641124 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256864875 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254611128 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256196004 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255298859 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256113434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252489872 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255702732 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255214977 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.257158004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255855007 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25500062 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257640857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258133468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256317636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258463969 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.263204058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274100093 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257631942 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257220806 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253121719 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256554309 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256516486 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255999322 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25704356 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25516063 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255390068 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256201461 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255621227 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25424546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25539062 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257531107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260772168 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.254338469 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259087125 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255287247 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253146532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.254922534 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255313692 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256030261 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257937075 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25606187 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259317002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261260139 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25746225 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256389939 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258954697 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254487453 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256389151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256587726 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25938532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263557588 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255673513 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262775976 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275007621 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257607117 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25711465 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255699496 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.256038983 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2564583 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260391543 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265200986 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268667871 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280921265 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258858776 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26118796 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257939282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.262721203 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261438014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2570057 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257095833 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258926527 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258895295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256862521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259778187 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257416101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256857548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.258625014 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257295293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.258129834 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257753744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257334847 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258514971 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254844173 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257492333 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257321089 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257086524 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256716338 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257052786 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257314798 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257049381 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25734872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263654932 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256509206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257867078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259471572 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257311943 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256320082 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258476552 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259751283 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257845162 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264901065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.274068133 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260233099 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264790786 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274508291 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25736224 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26110453 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256639723 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255219119 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259856902 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266523869 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257207106 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257261488 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258857014 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258057408 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258466228 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263769006 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272815879 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257895481 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.258233854 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259180883 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253922213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25921638 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258302975 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.258748396 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260855163 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258955151 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257677788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258874058 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25876045 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259177049 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257799594 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261994008 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263968707 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264464581 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.257764193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260270513 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25902687 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261663957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259311302 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257376367 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260059752 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270429312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280851034 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265413974 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275625591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259633515 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263908803 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277891226 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261608069 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259166566 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258400531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258336043 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259878054 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256550707 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259409128 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258222628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259095323 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261226107 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261656729 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257676065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25863381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257055423 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258310639 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259856603 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259484217 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259790119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260364757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259942133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258519128 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257954378 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265559578 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276554602 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259287422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259413686 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260010101 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259449313 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26079243 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259235883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26106847 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265970305 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26305455 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267425688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260187108 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270704024 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259789218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262291586 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265843251 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257905722 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260269227 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260584979 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258974047 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267296754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277548889 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260941091 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263958276 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260889347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261402672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260768003 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260361062 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260691972 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261064921 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269101968 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278010008 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264807877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262666841 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257055543 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261034386 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.26129075 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261283514 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263704274 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260545237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263354776 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26073664 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261433143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262496059 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261474957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262551473 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259778484 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261858514 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267990538 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280574112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265745944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262559066 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268891149 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28120361 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270842864 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281762999 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263981943 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263035328 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263691774 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264242337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262322631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263616963 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26334891 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263869272 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266488319 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262801721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264588377 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263506457 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263680214 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264092986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272558128 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283356812 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265505576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268098164 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261141868 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265335675 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267473085 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262847214 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263967432 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265936187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273028246 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272201263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264914922 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263142198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265206282 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264377649 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266208041 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263330651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263889961 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.26499076 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266946096 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265010803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26695168 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264856546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266505585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266282529 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265829521 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274764478 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283851772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26645396 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264782816 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266525146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265433271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266881896 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264562125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267249246 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265786191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26608523 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271591294 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27113589 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26785981 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266984703 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265310779 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.266434246 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266587698 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266082375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266182061 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26594631 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267482122 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265290986 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268456491 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265650354 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267373213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266417631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266409836 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267748652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273133925 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267785521 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264707615 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267371979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26686072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266301372 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267352901 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274045615 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289598446 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275204412 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275044541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270734683 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266767742 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269861044 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27476707 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266695073 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269190375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266610915 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268775041 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268697635 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270905638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268514457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275156405 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289543869 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267832138 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277007463 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287134424 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267385546 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269256553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272443964 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27056905 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266144068 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269452664 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269401966 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275311561 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287982938 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268842145 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270641839 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268793968 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270399509 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273013583 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269316139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270010187 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266701028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270875283 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268554321 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270854483 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26771545 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269599406 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269825197 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27253698 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276486086 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268305683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271491168 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269390983 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270526691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26899566 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270735693 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26846027 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268473633 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269565501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270174889 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271501506 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274276717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270834634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27223985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272378723 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271039818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272957842 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279890191 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.278209302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268716369 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271457313 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272578817 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273759175 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270800058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270159488 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27184744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271397985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271583744 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27077391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272064468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274041572 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286358083 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29003966 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273585965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274100564 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275567162 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270788068 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269225372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273566946 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274322771 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274980585 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28046737 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271735159 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279071987 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290359472 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274149867 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27688309 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276367833 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278567935 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275996668 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272766829 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274290855 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278371207 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287838276 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273684241 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282227919 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299335551 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292394579 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275592787 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274373636 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275031549 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275215323 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275982769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274674641 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274742043 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274255268 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273912195 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275144845 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279876848 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275072438 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275732986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275161751 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274889337 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275523549 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272893799 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274284271 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.27474458 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274246754 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274659563 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274529876 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274465213 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286586716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299943364 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274998895 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274342362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272717814 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278539177 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279063961 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284917122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282856096 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275993518 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275112017 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276702888 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275015039 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274874943 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277146949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276001917 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27622914 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273677981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287367459 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300137961 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281595131 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275076413 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276721703 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276227674 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277895478 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277333608 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275657811 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277594875 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278841113 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281244231 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278050336 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277560372 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279403387 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283768396 seconds)
  done (took 754.646490211 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274583141 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274377286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274501333 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275638565 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275124822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276181497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276024829 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27512641 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275655872 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274851494 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276322597 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276245145 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276903858 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277622455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275778567 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275971661 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275343506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275490635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276834662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276564949 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276253484 seconds)
  done (took 27.983841119 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27774067 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276574608 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277394076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279740257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276472416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279334769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276693902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278908228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280234744 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275852534 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279209499 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279113184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27637337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277715876 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276879154 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280408694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279544124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278098803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280414098 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278455585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280297532 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277725459 seconds)
  done (took 29.31680882 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279351094 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280357875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280066797 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.27805758 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280003819 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.277276332 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279719171 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.281459835 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282193387 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281760559 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.281305637 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280909103 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285668525 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285697228 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283310523 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281429763 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.425915219 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280257965 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281162979 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280701287 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278515422 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287130795 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298127548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278629268 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280301141 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281422439 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280755969 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281128779 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281575652 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281018416 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284801331 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280265896 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282002248 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283695669 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281670487 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280681134 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28453152 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282150338 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280015828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282670728 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291127746 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299098435 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282699256 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.2878545 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.300835116 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281528043 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286190762 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28943433 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278663926 seconds)
  done (took 64.210673785 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281771435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282549672 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278988227 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281991302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283396849 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282927068 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283447332 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283310133 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280651997 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281161522 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282273355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280050365 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280448461 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283233758 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28409059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281568783 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28125713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281547198 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281665105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281698796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281444658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283000976 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284634077 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280468702 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283814245 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28099895 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281557048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283511706 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282254692 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281440007 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284615751 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283210736 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284279983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283553771 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282759114 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283960793 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28547935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282240651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284670158 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281574723 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284751521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285805468 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28510872 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285918983 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282878519 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283852524 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282855342 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.2831465 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.2823541 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28572194 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286254272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283589913 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285838126 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284775069 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286780785 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286630108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283457452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283549789 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286665561 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284295352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284455766 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28760513 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284935362 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288514619 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286898408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28441415 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284605246 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287199844 seconds)
  done (took 88.478919783 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286993277 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286249204 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285404872 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286886063 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287834972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287310414 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286646288 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287711701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28677341 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286139447 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286880452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285478873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286204659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286521596 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286399876 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286435151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287416039 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28830501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287434085 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287855451 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287313989 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287449977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287282873 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287155622 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288732119 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286954085 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288000454 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286835714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287146174 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286916839 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287764946 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287409311 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288020108 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287335338 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288405647 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288436307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288570641 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287557172 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28776022 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287934087 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287867152 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286937085 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288167444 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287787743 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288441487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288600752 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288109651 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288764624 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290153999 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28960386 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288585354 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288361435 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289232587 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288764497 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287901735 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288589635 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288697611 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28824793 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288806421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289136537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288986566 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291728052 seconds)
  done (took 81.044324959 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28953144 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290369028 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286549968 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287036356 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290160545 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289122359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290397048 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.291793556 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291352694 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291738885 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292182577 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289214193 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288352062 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2939287 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290077712 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289934714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289085558 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288512257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291807949 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289104275 seconds)
  done (took 27.00465002 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288894404 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29243924 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289283401 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290279969 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291148245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289428833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292990841 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291997214 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289751089 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293486524 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292267356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29206549 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289567781 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290372145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292866229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289761812 seconds)
  done (took 21.861425311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290183372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293132812 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292751653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292630378 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288821378 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290625235 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29283429 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290427462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291916527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293479934 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291845576 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292290046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293519133 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.291795523 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290923589 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294087749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291091755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292222056 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293419341 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293562699 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291521796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292004209 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292680242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295135436 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29136943 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292627861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292420404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292394252 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291934803 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295424097 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291850169 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29285845 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291899908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292479678 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294822058 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291781991 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295253129 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295207301 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294655301 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294613035 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295241567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291529455 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294854965 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295789339 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292587081 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294095354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29187114 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295334737 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293867686 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29344595 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295194967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295829987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296331766 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29739798 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296362729 seconds)
  done (took 72.331393853 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297189405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296601023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29470566 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297144481 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29681961 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294281469 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29683521 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295496143 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294189296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297169768 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295313431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297278832 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294281102 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29776883 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295564559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296592373 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294531595 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293657172 seconds)
  done (took 24.535431241 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295321031 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295664832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297874851 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295466653 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29510293 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297961353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294833886 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298346506 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297705196 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295860377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295715767 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297393921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297415996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297500566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2962481 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29577762 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298926455 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298940203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296399318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295390653 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298369445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298365092 seconds)
  done (took 29.741231028 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296076774 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297061405 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.298030942 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.313290122 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315377952 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319430711 seconds)
  done (took 9.049077167 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304890965 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297706803 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296678941 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299631892 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299469699 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297214737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297103478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297524566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300516978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297509779 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297837023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299194067 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29988491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297350828 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300378977 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29971857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297441818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298099649 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298188801 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301097137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297323742 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300919508 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297458251 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297975107 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297070336 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298235301 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299598417 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298098494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298626865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302218019 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30183572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298948258 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301481867 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298529619 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302567936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300958408 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299556469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300851467 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301325538 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299202892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302577939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302061436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302424819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29922728 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302577233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298819885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297970144 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299011898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299413517 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301851734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302259979 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299124682 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302476942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302746456 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303304375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303271382 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301016894 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301358371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303059899 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300564302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300784926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302848743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299911921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300981614 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302982505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300216079 seconds)
  done (took 87.038628933 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299762761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300590201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300120445 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3021233 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30130514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300388841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301430517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300503906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301222074 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301509466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304923394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301616558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300435379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302244002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301238883 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302148805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301380029 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301996295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302033948 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304038732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301280114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302472306 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301646372 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300177951 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301759402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304724328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302077416 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302233766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302137748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301458994 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303036729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302243295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302924346 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302238542 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301882957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303740814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302859207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302599532 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303571633 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306161873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302078954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306457461 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303135475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303722581 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303427069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302410484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30281852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303323382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302116319 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303333402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303319851 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303982547 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303707765 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302667779 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302396586 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302919102 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303538924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304475635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303526891 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305337212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303641019 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305107211 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306474457 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304522895 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303460584 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304319584 seconds)
  done (took 87.195781211 seconds)
done (took 1761.549877378 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.354327492 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.334577395 seconds)
  done (took 13.907802779 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469813205 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422955097 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.306159627 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.353005893 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305057788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.324461021 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329639775 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306356966 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30597387 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306128747 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304598492 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492513611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307010049 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305964466 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306371977 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401523084 seconds)
  done (took 42.772086951 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332704192 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312150051 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.415951133 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33420785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334482946 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.485997472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.368193385 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316897344 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.469520291 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360510914 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.797954119 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342109128 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314470364 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370141783 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334563469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.488647793 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.553880399 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.811364491 seconds)
  done (took 29.964255123 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724967202 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.314049662 seconds)
  done (took 9.264419121 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.311427507 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.358787701 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.347290555 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.346580635 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.351946315 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.370964867 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.371016718 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.385007356 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.33736346 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.353895786 seconds)
  done (took 64.761782354 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.333579348 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318551281 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.313861983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.311991397 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.305378633 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313469071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.312895941 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308270231 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.706307609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433827615 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320047923 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320785535 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33185722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314372923 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311405724 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352522001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.47291615 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316735976 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.309809125 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318850804 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314074479 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.4072231 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356065635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31842207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428445736 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.711562225 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329332121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322786661 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45269693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31856555 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312950018 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31469501 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315653749 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.905799201 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782521124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.347600129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.339072779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330148357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310344054 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.455368268 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323522775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324944723 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306595463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.777280292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448915985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424062902 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.452651994 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339355741 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326588405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379564807 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.324124705 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320646197 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350302944 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.057254498 seconds)
  done (took 109.778979952 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.374160457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.702694357 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479372699 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333528293 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.920374484 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.905892351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.332952609 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581162072 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339977898 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310498824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606332025 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802426344 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335653778 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.326802121 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.429812429 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399590413 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32631978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.043467827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332148015 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.315259097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80035469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333721696 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319805456 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.499985137 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353076976 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759312662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.665609558 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.750179876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332039566 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.311345958 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75949906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33588207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.382121081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314895444 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572290045 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659672376 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653964604 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.33847737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346067781 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314916543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.342475104 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75189373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659614728 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334909311 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319646286 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77703003 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.336918365 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.33011132 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.322868475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51587653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.201667598 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319536777 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.667957733 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.320019335 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.68375583 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374349136 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39159531 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784772128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335240376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.385396863 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36475684 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317937339 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318360832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.321611759 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328048467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.64734455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.476423855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320611243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650620126 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77387477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334814278 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83280372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.164043236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34145218 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.418146891 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324187607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.859516379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79311755 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.364821932 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31594148 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637943952 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339528607 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.58855225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339749985 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316348229 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823997281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.3242189 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.332009227 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319217151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.344979161 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.959519062 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323764725 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589443935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.362319544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319979479 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.322923375 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.362823196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315908445 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329811189 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323663948 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819257531 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.341755756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.280199894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339641017 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324074864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323114195 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.321723209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323903858 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53691551 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.790416503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.34049431 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324752004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.317601973 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.32752696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501538184 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.320961615 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.612119419 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339353694 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318869422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319901493 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899992756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368119694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313679841 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.32563819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188304749 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.53358486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343419262 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.329914102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323078141 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340921226 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.472266624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333454716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.356424497 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325416329 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992170023 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377161067 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.330113841 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.857829239 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332233895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.15722597 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337807888 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321416617 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622547439 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579819884 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.378663539 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318793591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.340141856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984229965 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351747356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458586502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344256866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.361551556 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52136813 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.687241897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325159204 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.942038029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.32090428 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524202319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328493305 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617431834 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792501285 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.339984341 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325275864 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999938286 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.007788422 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.003550496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.325304856 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579477479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.291346902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788047406 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.318354288 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324654263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.743536355 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327516741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331681172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.314659441 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.32448586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.457391524 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495860758 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.517393721 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322828109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755902578 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371724207 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320311323 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.345996495 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322425847 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.674578572 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.413795014 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.324774002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.345698753 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.325967775 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321056595 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783662621 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.179342435 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327948012 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478308863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929703704 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.341909918 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329427983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.948933412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.619231849 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812905884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.368276228 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61776411 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.348161509 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36098982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.875277157 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.414795175 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780640177 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.349197488 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.331453178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895084651 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.343818836 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.677636126 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.32453686 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318024498 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834836678 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.336801747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.317207233 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.468096571 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325360298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551160748 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.31615346 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.362561097 seconds)
  done (took 1106.254435346 seconds)
done (took 1377.921246379 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313678818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316858052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296812194 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311382585 seconds)
  done (took 26.462353889 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324876019 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320202177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324964839 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.308446401 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311530177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314118818 seconds)
  done (took 9.128182181 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.34616353 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.305819996 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303187811 seconds)
  done (took 19.174187872 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.497628753 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.55020262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.636895926 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.415109265 seconds)
  done (took 10.315210541 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30820938 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306148868 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308415865 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311662673 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.312343254 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313931458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31083836 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.312260659 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314602429 seconds)
  done (took 13.012302183 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.050421616 seconds)
done (took 84.365372824 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.14483479 seconds)
    (2/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.901058157 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.305222682 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.643648506 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.552907519 seconds)
    (6/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352058363 seconds)
    (7/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.328420814 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.650010854 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.150082483 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.284277436 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.30780571 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.604880621 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.31382442 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.490908806 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323508079 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.27417343 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.416842479 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.681502024 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.671882832 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.05145938 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.666174916 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108531351 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.373070725 seconds)
    (24/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421252026 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.270606708 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.283346959 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.493358805 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.307703158 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.309099155 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.629460396 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.908450675 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.274087623 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.020185727 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.359585831 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.319645143 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.455460337 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.13099452 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320139641 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.64078798 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.2707877 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438438166 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.293795434 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.547590181 seconds)
    (44/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.355282089 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.385161428 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.833288398 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.350060701 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.269505259 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.783694168 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.983329292 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.10505116 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.570806024 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.922737083 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.262495546 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.276360538 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.262412073 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.278316726 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.588181769 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428784936 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.263512258 seconds)
    (61/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.495111075 seconds)
    (62/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.261245 seconds)
    (63/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.531622994 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.641329574 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.398006393 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.262338821 seconds)
    (67/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315861121 seconds)
    (68/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.292492671 seconds)
    (69/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.077146769 seconds)
    (70/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318661992 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.360651832 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.469297445 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.666145957 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.276373217 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.283334797 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.010412536 seconds)
    (77/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.302671887 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.347393983 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.282689884 seconds)
    (80/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.112075692 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.347153883 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.29460193 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057732561 seconds)
    (84/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.81304982 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.308752602 seconds)
    (86/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.813993844 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.147934106 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.278971041 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.298809102 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.504870734 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.869402635 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.447364754 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.854468093 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.285215417 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.830406109 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.260454282 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.590925337 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.904764489 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.285492862 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.702855771 seconds)
    (101/309) benchmarking ("sort", Int8, false)...
    done (took 4.314980269 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.260427216 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.486087652 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.15011595 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.237710984 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.366532133 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.282454458 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.267615437 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.270466971 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 1.786760969 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312593871 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.305509174 seconds)
    (113/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.455554308 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.5513458 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.358510992 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.263345876 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.279664315 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.355039695 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.455655376 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.310134946 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.267277344 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.681634239 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.443957879 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.350955872 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.994892034 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.529430014 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.439729492 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.47894724 seconds)
    (129/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.283199971 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088058655 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.295302268 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.028362945 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.244731987 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.384963858 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.816579806 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.270280165 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171201206 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.626371481 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.264894121 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.292809975 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.269522828 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.210271191 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.370242501 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001620883 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.296938575 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.321499156 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.26648781 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.176436883 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.2957149 seconds)
    (150/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.851049181 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.314444528 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.346540662 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.942390933 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.403911254 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.373422176 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.286647429 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.509883533 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.354437382 seconds)
    (159/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.291268709 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.290576034 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.248269262 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.251858751 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.04514243 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.848688855 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.272666721 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.285259181 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.193659736 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.287421981 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.427579026 seconds)
    (170/309) benchmarking ("sort", Float32, false)...
    done (took 5.258718113 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.6614862 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.271332713 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.625734729 seconds)
    (174/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.296052178 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.292299679 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.266807936 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.275188686 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.247710196 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.266560422 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.69568027 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.550360515 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.616151079 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.261891461 seconds)
    (184/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.382740668 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.272394097 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.25165153 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.583823227 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.275943392 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.295587381 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.274805955 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.180536729 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.999184357 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.315029954 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.681200689 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.288791621 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.38235845 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.702773974 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.329105435 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.009599514 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18992125 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.28274391 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.656492955 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.686080239 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.307911912 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.709549562 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.930945882 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.482620874 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.268394795 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.264483122 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.286078639 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.277642167 seconds)
    (212/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.254736639 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.333457259 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.733168625 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.2559088 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014080744 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.518375024 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.345993494 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.817828218 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.291611801 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295224198 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.55671976 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.678395168 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.314383988 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.250843927 seconds)
    (226/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.86005474 seconds)
    (227/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.452731883 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348804025 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.250665087 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.285717715 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.269455666 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.249731553 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.285221174 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.176458767 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.295789616 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.270259646 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.258631953 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.360389358 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.104737014 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036045237 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.325869434 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.290759343 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.251339826 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.112772442 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.309209545 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.250859204 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.277952489 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.656694458 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.03741642 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.359143562 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.474254866 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.793768494 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.375394742 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.297200527 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.252249721 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.318894729 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.377661986 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.37668987 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.509014898 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.91650004 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.276118297 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.659388953 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 5.551932759 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.319038234 seconds)
    (265/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.611177673 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.300983896 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.562775911 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.267015307 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.283174339 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848255059 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.278942417 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.075535114 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.050733182 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.27897569 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.362593127 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.371390795 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.337599209 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.6744583 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.290794534 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.356074198 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.268714145 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.362366302 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.873712734 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392069006 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.821035867 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.30711688 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.253356322 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.100579971 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.380345607 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.693692331 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.694412394 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.10845041 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.280573623 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.400528715 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315491765 seconds)
    (296/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.375753755 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.62005229 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.132594017 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.282329109 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.372986821 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.34931421 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.701838631 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.265761817 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.25573957 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.365715349 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.371629144 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.317072355 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.477763418 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.273762253 seconds)
  done (took 1014.167301704 seconds)
done (took 1015.384823004 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306258376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303058173 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.28516824 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.306248944 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.395755295 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.312529053 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.296024896 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.286590744 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.334061878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.334787319 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.28490591 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.31408124 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.286515287 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.286526241 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.286495282 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300647019 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279420948 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.286107358 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.304471416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.295617819 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.301894835 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.286924223 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.33521499 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.312421202 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.289798648 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.289559639 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.289474791 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.305434948 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.399030298 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.290065947 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289884716 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.297624142 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.278772355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28599211 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.282881983 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.305575437 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.298604438 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.296630523 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290291329 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.319331419 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.667505648 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.303178892 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.288616938 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.288542873 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.287725419 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.290311161 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288830524 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.29515225 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301604398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303484051 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.656420478 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318270515 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.29237558 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.289569894 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.298281753 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.288400632 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.29281415 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306599811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.306996115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306746338 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.26826637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.294202059 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.291172586 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.30466733 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.297524115 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.694069638 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300460896 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.293420793 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.669212918 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.30899915 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.695644622 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.313454213 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.292014274 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.304307445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.321405044 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.282178758 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.28518106 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.289601452 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.297451533 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.289198956 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.29992552 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30378239 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.295445569 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.291141746 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306044143 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.317662352 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.300525084 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.29147084 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.30016473 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.31027318 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.298443798 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.302185452 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293688674 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28616505 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.301520577 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.294176279 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.293478605 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294026414 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.297721961 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301975459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.668620358 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325862555 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.288158262 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.288360902 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.290414263 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.305408528 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.670516349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.309211909 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.314196887 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.338597531 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.293519865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.27040612 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.294238854 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309924983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.301822368 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.296426185 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.288017771 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.272578862 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.660849628 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.323864569 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.294632364 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.291661756 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311392823 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.295841635 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289008028 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.298435262 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.300713679 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306756641 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.414344341 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.30333837 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.324481546 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.292308817 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.296717731 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.319932181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311089589 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324269491 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.296342423 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311188409 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.310296992 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.290814058 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304205932 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.305430232 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.295794249 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.300769895 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.288387825 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.321159739 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309118554 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309460788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.316151245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.41451771 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.293030013 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.275514182 seconds)
done (took 218.101461767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35321151 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.291284022 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.385952968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.292155691 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.390668615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.38999556 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.289140029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.289168217 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.290349269 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.669275678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.289417464 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.289415485 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.283906367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288593468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.373510318 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.292234125 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.289449376 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.632883127 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.290806418 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.363809635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.292007675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.289844655 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292062905 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.675518688 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.291370917 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.288131713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.363622626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.292897988 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.64084281 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.28859862 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.289195405 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.639897029 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.384150213 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.312079076 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.302386827 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301048118 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.393457714 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.310338281 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.376822117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.374729207 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.388907235 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.332902114 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.290218406 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.295160378 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294716486 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.294664114 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290988599 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31997538 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.29350644 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.291795965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.633736151 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.303714443 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.292058207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.292440816 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.292459995 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.321771212 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.292032951 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.29440365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.386030618 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.295232002 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.356692857 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.680120164 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.672600736 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.294688597 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.291769535 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.293948577 seconds)
  done (took 145.725137875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.360588025 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.36908496 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403224566 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.311239772 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.345240944 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.407131642 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.311909354 seconds)
  done (took 10.714603175 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300878652 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295642854 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34659412 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34619026 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.295721486 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.443081967 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295242771 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.307811953 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.293935997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.348051834 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.29652653 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297306679 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.302009354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.298945851 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344731241 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.307398276 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410922261 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.298129963 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.297960795 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.448121759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293972008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.304856353 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.347606276 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.308813259 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.298628289 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302786781 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863939175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297785351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294917582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297497671 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296400384 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.334324066 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298289245 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.29763997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29706666 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415659362 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.297869825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.296051732 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.298106597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.293520903 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.297309375 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.29825746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.298316333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295198469 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.299129137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.320856853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.297893723 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.299044207 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.298742165 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29806637 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.348396121 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299922196 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.296000903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29635625 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.355054988 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3050869 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298823904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.297087313 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298658697 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296126861 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450019776 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348726044 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.300445193 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349109565 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299802028 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.30029016 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.299210048 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298282488 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353903957 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.301120979 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347841107 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29853192 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.45319462 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.323009483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.301746717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.303089446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.302596294 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299744996 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.297672055 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.308132246 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298679578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.302767235 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.308190427 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298540275 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298542859 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403907666 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410051069 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.298334418 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.313793905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.306974804 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.298369655 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.35346228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.301241433 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.29856301 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353672495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.41719617 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.355785214 seconds)
  done (took 149.769468694 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306811448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309465787 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.303340693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.318486366 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301963625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.302329988 seconds)
  done (took 9.053194891 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.303307721 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.302477639 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.30169828 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.302140653 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301557061 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.302645671 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301123184 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303671015 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.30603266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.301551058 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.302368497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.302627894 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.303481598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.302268779 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302702557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.302163021 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.302257819 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299895256 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.301600743 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302540835 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.398460847 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.302948816 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303986435 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.302972738 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.306010388 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.304028785 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312502562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.303983165 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.304304282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.309563994 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321703805 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.303989345 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.305628783 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.309640451 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.306728076 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.304732487 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306287113 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.302714069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.301975724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.305064262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.30500886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303480898 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.304374785 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.305332999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306566986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309496381 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.30912637 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3130943 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.304933142 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.306701955 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.305789074 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305676735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305669904 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.30618315 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.308550174 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325143279 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.310559261 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.304596742 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.305726263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.308112139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.306493272 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.305722802 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.308153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.309898255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313345861 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.306834411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.307285801 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30975072 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733923898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.308645681 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.307972715 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.305475433 seconds)
  done (took 96.755494655 seconds)
done (took 413.21993368 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.667688156 seconds)
  done (took 7.884814832 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.368333285 seconds)
  done (took 7.587127235 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.20400622 seconds)
  done (took 21.427159822 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.324697833 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.312578912 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.332742133 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.330722679 seconds)
  done (took 26.518129059 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.482316046 seconds)
  done (took 7.700432822 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.299037098 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.316437201 seconds)
  done (took 13.836457577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.821368578 seconds)
  done (took 8.038917695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.491208215 seconds)
  done (took 7.714436349 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.311781322 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.321887808 seconds)
  done (took 14.108712471 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.282736926 seconds)
  done (took 7.501546187 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.066616983 seconds)
  done (took 8.285847488 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.312129801 seconds)
  done (took 7.532314462 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357626515 seconds)
  done (took 7.576684741 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.152150478 seconds)
  done (took 9.371364475 seconds)
done (took 156.301355296 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.302623972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.311169771 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.309323646 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.310014825 seconds)
  done (took 26.452085511 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.344393216 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.343576604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.344647999 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.35470713 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345779939 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.344120462 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335548022 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.335803319 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35474617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.34664186 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.344172797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.344532836 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.343194239 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.336117182 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.345572951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.345744031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354410482 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.34600144 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.337058611 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.346892296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.311129818 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354727959 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.347660715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.311516335 seconds)
  done (took 33.439262157 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.830788937 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.381477157 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.465607031 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.363835332 seconds)
  done (took 7.262304632 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.362300991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.363716334 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.376054037 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.415768421 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.440768815 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.374233805 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.336653535 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.332504082 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.319470952 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.365826088 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.440268645 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.3803021 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447155242 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.311169843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.498279437 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31226484 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311000932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.363544916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.415582838 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428506243 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311995925 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.364200579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.366754151 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.381037554 seconds)
  done (took 34.240680412 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.312376024 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.330732363 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.31292276 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.311178972 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319934504 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311837788 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.312824875 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.31314871 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.312070829 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.318128669 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.311865367 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325191489 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313227331 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.312677604 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.318217942 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.313316554 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319003357 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312710791 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.312077063 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.320059639 seconds)
  done (took 27.536833235 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.308103341 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.160871414 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658734434 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.562656573 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.309042714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.313148745 seconds)
  done (took 27.536322007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381941515 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525087834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.314147747 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660644695 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751105384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330061597 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.315885529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548103945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857375288 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844567524 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.376114838 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.379256926 seconds)
  done (took 19.509514752 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.319373362 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.315858121 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.320822256 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.330698641 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367268469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.333413384 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.320574802 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.309728517 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.373729229 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.387317609 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333927109 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.368966366 seconds)
  done (took 37.307457074 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396666059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355428277 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.214158087 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393710013 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044394381 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521866612 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377559447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770954943 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314467727 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583091394 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320525057 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399607664 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564947016 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312485847 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317125257 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.293081539 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551803698 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7698946 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3115691 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293322171 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343024691 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311109931 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.327573732 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.346578059 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522620355 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453788343 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.571978269 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.090112976 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599775295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328018115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322995652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312475451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585678109 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973778644 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426179356 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32262903 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315120435 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874827819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.300603451 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.243881871 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.197878787 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321806935 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323160766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311925191 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247533637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313264059 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757484792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.319342446 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.023711624 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311863969 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324176437 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406874479 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316925027 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.882612276 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366259798 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318726457 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.311176195 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405963334 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90556802 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695790848 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321275852 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.253159912 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3303596 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.307407161 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942029101 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.432353353 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318139287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317805768 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248812896 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.283499076 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337050966 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460615403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.337711909 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963633621 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996703224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346386963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245902274 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834204755 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320180889 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.255459102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541743578 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090213232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250267613 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.259708626 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248665474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983766452 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323840916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.651169032 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336216231 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777549153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326779722 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334664361 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339197078 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538342643 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.197090474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315702488 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.214132708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463472225 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338440709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754221147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250758503 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319524873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571457113 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.527087215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318549769 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.294588909 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53915362 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319883155 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343659119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320810839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.334157916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.881869562 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351945315 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.695681119 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339472432 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.092773649 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013915486 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32737795 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.424305262 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332303721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563450536 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.043461541 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200685972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385789465 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320399134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318289447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.331659674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917454227 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.201629205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.314510763 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330121327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33407051 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.31848479 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266848148 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.315990921 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342291051 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.103788753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542420484 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318510347 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600956262 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253007892 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466336533 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328419576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.541649344 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.508291535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.340899089 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578225866 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321861283 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32511298 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353100143 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338647019 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420802442 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341225422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.323377897 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581524084 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323021762 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324426664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.336533235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.105765448 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324046022 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324366303 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322184987 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897359806 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319186472 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326410161 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208263669 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333688372 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388127749 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325200952 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.329747934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.101409928 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360478003 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.327970473 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325712759 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548921701 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33130932 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.353184868 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40076519 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.516572727 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891734456 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350587104 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.255568629 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.032977419 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.015683001 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321084942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.522417739 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321183612 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332152078 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333217543 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332701782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893669831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339467422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.263715873 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333627783 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333025612 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327785246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322453951 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.101506452 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74195401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332546912 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339379088 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465583989 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.336916434 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256203022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.839084041 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329239253 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322655696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.101219918 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356402095 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.2616913 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804229754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583392617 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328054018 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350810949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.357389827 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.363901465 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32410842 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279493788 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346239015 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.342231409 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338251705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33507031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.267093664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.698650817 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89515629 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020101171 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871983915 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261551748 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.334070484 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21430215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.765562696 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258265111 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98211976 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50710834 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782447998 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270144734 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523373103 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508533453 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101009171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342183892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55238571 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236552056 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.28314659 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362722562 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536928288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359955948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326872665 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260721263 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.606283462 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563497529 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273240934 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404945387 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772600493 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291842841 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122011708 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.334199788 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619140115 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510199609 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95466498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713310576 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336788143 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33364924 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815788454 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334188185 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852869839 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938026015 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351310643 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.530870222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263817069 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337588363 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338727194 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.32335639 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.601457477 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.331740458 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.602326402 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338448477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262988588 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327787356 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856705008 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.198179974 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.334099681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327631092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035994322 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343436464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622985528 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.328621955 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.100046323 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354362891 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26255633 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262006319 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.021989015 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33132997 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304211318 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803894796 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.337719591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332504411 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331338759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183348539 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584754956 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.34313167 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906803662 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571065218 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329821921 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368782352 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.429055848 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329252353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.311417607 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225458664 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566430379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403492102 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553610654 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.263393026 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.233388514 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371289336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541829824 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228288113 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329893765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597582475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.059238245 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.349628804 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011731623 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372529667 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341278988 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341524286 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34751144 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350553524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420691974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341168881 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.342164825 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342325252 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498633266 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340131774 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333641255 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.346772302 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425597145 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764098633 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.083081119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.110694596 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912415981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062506301 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924361854 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361543105 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330279968 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340998242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26573325 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483168396 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858729396 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606483631 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462267556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.335436171 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355751092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314067934 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358772985 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551527424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608420316 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304386765 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340539196 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126439311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.215714629 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344555748 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.544420405 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812556242 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873892584 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445241355 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337228852 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.779878863 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609082052 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424295693 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332998796 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926954244 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.343312157 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635180022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357600672 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33317021 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482106191 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34325783 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001352103 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361960674 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.49531304 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.108616777 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.400953637 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589968582 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.796800447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345988875 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914072704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047534259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597817689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405352335 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345708311 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.438350798 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483734578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.34453339 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.23322607 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33473987 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178136502 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.046898442 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.346353571 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913771272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614963308 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.334167788 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.333141322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378078603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.346263201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558852788 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009609518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559193639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348527346 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339456509 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.907515767 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915172656 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365557032 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269977377 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.340853568 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582515746 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590530737 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359827441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.792164861 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.049680257 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863225299 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.307941327 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359572107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335873911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050831344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917780562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.127450933 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821134115 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.996332508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337042605 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620410072 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343837239 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338176282 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621826067 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341801455 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344794557 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354390749 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.915095752 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115306078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.342124145 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.423413007 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.275975115 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.564941691 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343560395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274281217 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349509307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.5123233 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340324467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468587067 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352242586 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.336828554 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350552875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.075029621 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624402753 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.346633481 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.320354783 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.323316726 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348189318 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439347001 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579967154 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347301918 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012896157 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.694622106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594878655 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351539754 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.326471785 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.344645094 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341078581 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05879937 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351678834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354754807 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884187479 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.353385961 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.359122992 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34438548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556737042 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552869539 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349339712 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352214878 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355698553 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362806132 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.242589507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107821938 seconds)
  done (took 1634.403240858 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360117913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.394899842 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374154504 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.424514063 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382347397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470756966 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.391770398 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.471158076 seconds)
  done (took 52.525302331 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.342293566 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.49710884 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.372302186 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.345167514 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.351513649 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.348869659 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.79655083 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.363443399 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352777601 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.352070202 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.35265176 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352372893 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.97414831 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.350966104 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.348091712 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.336924444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.357263152 seconds)
  done (took 65.458089874 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.342068722 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.905227487 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.450126056 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.350680478 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.35515256 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.366226383 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.106750946 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.402582875 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.359781739 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.674093864 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.013631555 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.367982079 seconds)
  done (took 84.953013214 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351138858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.351656234 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.352010591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353744048 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.352231928 seconds)
  done (took 8.018274549 seconds)
done (took 2059.863068876 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.597557105 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007671973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.003283513 seconds)
  done (took 5.267904344 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.490013925 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.539598604 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.659778535 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.667124124 seconds)
  done (took 7.613511607 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.621458507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.728164121 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529523857 seconds)
  done (took 6.135521296 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.722275187 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.359495473 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.379885091 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.343408206 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.348433261 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.350608529 seconds)
  done (took 20.300941664 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34764432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.350530632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.347476216 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.350347197 seconds)
  done (took 6.654269265 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.325589838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.051131885 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.325499797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.348119025 seconds)
  done (took 18.308244948 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.094622926 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107207276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.093024098 seconds)
  done (took 7.552614481 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.349904837 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.1971605 seconds)
  done (took 9.806116643 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630415796 seconds)
  done (took 2.889333867 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.478541682 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.674004845 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.365703941 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.278931117 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.747446828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.121632563 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.948085936 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.550747536 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.247806157 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.512033637 seconds)
  done (took 30.184142101 seconds)
done (took 133.029455261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.127003624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352220114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.572430357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.095073737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.572911235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.554326624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.56089934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.062147646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.611975252 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.601014777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.100688634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.575556931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.506036252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.351090515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50575988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351522902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.575526378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.158949388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.781955786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.985643388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.557542958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.733929529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.926354576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.753960749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.57390115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505633335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.313306149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353999359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.955204679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.332022059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.505279598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.162748056 seconds)
  done (took 188.937465494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.349528866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352410413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.348719306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.364621517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349737835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.34916444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.363138411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364608049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.363847474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370635131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.347245601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348357185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365166947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.348936281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.350408858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349255114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.357946171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.351929836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.349194346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.353468949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.350282345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37013408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34973564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349148813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.382201948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350309096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349972141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.365123809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350628573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35027668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.369434685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.353219807 seconds)
  done (took 204.650537542 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358235672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.35087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350640459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365175079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.350730632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36767952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.367578679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.353981717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351243495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352688102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.350272668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.376104195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.353212025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35058827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.3680285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.350207097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.349797643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.354981321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.350344676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350715138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354016942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.351393315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.351239822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364041166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367966822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.353092759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.354508977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.352298512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.351542496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35162437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.355616018 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.355315836 seconds)
  done (took 204.650438313 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.546711677 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.359037659 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.359444867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.296534256 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.361452542 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.360014665 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351962721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.556828634 seconds)
  done (took 14.457136381 seconds)
done (took 613.956282399 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.639181127 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.350689142 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.556929172 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.379932524 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134018269 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39912773 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.379283457 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.544336956 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.267552564 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.551178246 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622072569 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394255223 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.767226398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.378208139 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.627109772 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475024346 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.224574573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.341707125 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.689589729 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.900678744 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634953789 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.806868683 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563527855 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.26757513 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.781515714 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.804645101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.063507118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.211756432 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.39619811 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.69610786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.98529083 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.312107782 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.438658653 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.438251776 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.495134077 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.475103997 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289426392 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435578829 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.580189843 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.574141407 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.897696545 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.088459067 seconds)
  done (took 92.126054879 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.342567323 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.343849245 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.343851772 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.343896462 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.344068665 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.344858999 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.343823598 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.343499824 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.34429846 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.344855259 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.344686733 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.345046808 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.344571239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.345037085 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.344630453 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.343739062 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.34501166 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.348877435 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.345110868 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.344731168 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.34624786 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.344560623 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.344986514 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.345273566 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.346119366 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.345459261 seconds)
  done (took 36.233032448 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364252384 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610941528 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770189527 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374678602 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.365823467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369909233 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.441682066 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.365836822 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.368079283 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.367760078 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531706789 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.36863718 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401044022 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.796908165 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37172321 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.367048582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.367352521 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.365474374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.619002126 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375447381 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462148273 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.369198752 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.440862346 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.376708606 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38746241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367382415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371013533 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.884922394 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386830446 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.533717944 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.150284341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.443071108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.834225786 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.796177484 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.144425032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373541771 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367194974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536437891 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.369200135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368471979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.441519744 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.366327383 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.781205318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.980927181 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.387067868 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.368059472 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.903192613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.554744719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.606940809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378147597 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803180751 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.373917743 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369102543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369193566 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.607244039 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.379965863 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368651152 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89437681 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.394690121 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.444469602 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.371370394 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.368083343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.628516494 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371846858 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.617885366 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.373139647 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.377363969 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388820397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.784892444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37456426 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.011865883 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390518132 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369983638 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533640469 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.618318044 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939826241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.394311478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632796855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.855972289 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.464309068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.373175438 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.873514543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.465076896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.375862458 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.372964086 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.371807026 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37036353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421031459 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.444475338 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.937447352 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015990732 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.917899859 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.468274036 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.386941959 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372009753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.894216048 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39558512 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376137903 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.779774996 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011098461 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.394284083 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379324693 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.010744559 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.397444337 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.448790788 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.380121539 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.793328465 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.377565467 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.422563139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371265468 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378402481 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393521644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.448816785 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.377286819 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372652638 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.983490125 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.569969404 seconds)
  done (took 179.965021639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.365421458 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.365490002 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.36512013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.36649023 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.366105992 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.372834568 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.366793497 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.367152618 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.372234369 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.367665747 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.36674758 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.366738598 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366481497 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.368775964 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.398218077 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.37435163 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.976900941 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367437527 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.365614185 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.365388186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.159287311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.372629608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.367658886 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.367320737 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.369183456 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.368191476 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.372922906 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.387588727 seconds)
  done (took 153.034576037 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373890737 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934247453 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.394370995 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.502627434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.393917584 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372271264 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.500927626 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430534349 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.392528381 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372705321 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.37337669 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672882314 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.379587121 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.878267677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.562114795 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.517893093 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.878682468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390842614 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372335902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.372920223 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.504955704 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.377774317 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.671246536 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.928773893 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39223895 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928208369 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359303359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.37586503 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373389952 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.930921729 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389982 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.672505895 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.45104122 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.433300669 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.947264608 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.896951968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.899989908 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.523494954 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.375738275 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.374107404 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372830281 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.359340834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930807117 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393747286 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.376653897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920605231 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394157498 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.377708265 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.383671565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.374356281 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.434151247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.452331837 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.693067547 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939864522 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.467482801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.387937042 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.507530918 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.753766478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378490829 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.885713797 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362510808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.937077871 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.395436205 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.361069635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376273712 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382491394 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.523633614 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.505022581 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.883072222 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.39420897 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.883680846 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.53866082 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.37620427 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.375031065 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378294834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937527797 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.901633197 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539952448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.509022571 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565471218 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.36696387 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.377927261 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.36238908 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.453964055 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.377254291 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942837535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.904969269 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396933519 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379353043 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380052556 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.380975087 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550848436 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.966514854 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.474620099 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.872051176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.697626088 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.687954349 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385146322 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.436768513 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.394736429 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684970317 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381683959 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434592837 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.819072875 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.684167351 seconds)
  done (took 163.861794207 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.615611901 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.565106086 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.469119153 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.508710948 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.961312807 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.943771781 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.580490775 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.526123994 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487915209 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.647301708 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.509842612 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.469901596 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.54486104 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.453915201 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.118883513 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.465733814 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.491867425 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.539070021 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.493669287 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.392294821 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.007670225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.665652247 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546332987 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.221567101 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470439903 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.133166272 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.9337173 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.904655975 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.546175481 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.679258352 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.90604908 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.499205804 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.329519743 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.052045475 seconds)
  done (took 65.967279358 seconds)
done (took 692.452574023 seconds)
SAVING RESULT...
DONE!
