cset: moving following pidspec: 29662
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316429773 seconds)
loading group "string"... done (took 0.562070083 seconds)
loading group "linalg"... done (took 7.738347606 seconds)
loading group "parallel"... done (took 0.173984298 seconds)
loading group "find"... done (took 1.192353073 seconds)
loading group "tuple"... done (took 1.869054215 seconds)
loading group "dates"... done (took 1.280201196 seconds)
loading group "micro"... done (took 0.237460121 seconds)
loading group "io"... done (took 1.117231878 seconds)
loading group "scalar"... done (took 41.968503926 seconds)
loading group "sparse"... done (took 14.095710109 seconds)
loading group "broadcast"... done (took 1.044243921 seconds)
loading group "union"... done (took 14.512965534 seconds)
loading group "simd"... done (took 4.79703737 seconds)
loading group "random"... done (took 9.743013875 seconds)
loading group "problem"... done (took 2.018974134 seconds)
loading group "array"... done (took 22.801747981 seconds)
loading group "misc"... done (took 2.064316063 seconds)
loading group "sort"... done (took 3.472322948 seconds)
loading group "collection"... done (took 19.79357204 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591653718 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147700679 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153662826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133508545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211804686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161065941 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163898738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101274421 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.018181415 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176070849 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156067313 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539442229 seconds)
done (took 5.326401799 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.263205118 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095299397 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105980921 seconds)
  done (took 0.923820906 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078955754 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146594801 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096083575 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07972388 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098519603 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079686403 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09730975 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079242018 seconds)
  done (took 1.398940093 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086900839 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09880971 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082473697 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099528914 seconds)
  done (took 1.090200663 seconds)
done (took 4.480694665 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743852229 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289508731 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20523649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465673632 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.204834616 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.223227932 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.742247203 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371010135 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254787214 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099818832 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144113202 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389613676 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139807957 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.748992606 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092862147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128386985 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186033365 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.516102867 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083198124 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112271577 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11827387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145073785 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130246877 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090908545 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186312174 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082358508 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19909604 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112052271 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08108501 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277333737 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202069621 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.764959313 seconds)
  done (took 11.288248339 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111681639 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13594958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100116425 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140760148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137721325 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103221385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086944291 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100118101 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126276624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18465264 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131591938 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124852376 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.099282935 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084436017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119552717 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250862686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124529304 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102335138 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103827576 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090382686 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143180401 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114765845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112239644 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097048078 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170430738 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226971206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114712579 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1298471 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100139103 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116522463 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146395117 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146846156 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09633033 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083112197 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178212263 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127022923 seconds)
  done (took 5.296604047 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.12756477 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114006046 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198701663 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107100046 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.196374737 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083452275 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149380771 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097235811 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117536409 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26824045 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.126826739 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.501232637 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145200239 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101813773 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100214514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082962243 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099660913 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.603121118 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163248324 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145067018 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099286707 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1086653 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104613108 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.7272479 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08305091 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098289429 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085351223 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084083345 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108783266 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167468894 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102294292 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.164039444 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12302172 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083802274 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139248001 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210609052 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110395518 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136255498 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098170829 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082330766 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182964209 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108816628 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082452871 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125758602 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138257239 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136419802 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098289269 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082126996 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208610827 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098772177 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114746273 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966498627 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18522538 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0910481 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099440652 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.2998309 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122496586 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100820228 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080629995 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295184604 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193832722 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102208873 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082352065 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101117911 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083051846 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.757409592 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084617768 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.128415826 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083351547 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10793552 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083702725 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098054063 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104825625 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088461582 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117155952 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07990611 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101543571 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080410422 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099944548 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081351555 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109458452 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217456964 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100104353 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077229863 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099965251 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077913479 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118315403 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128921641 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084663154 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097313126 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131678445 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083539198 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098955028 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136120157 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081207874 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110409241 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100364202 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143951465 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082251945 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160632889 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100586406 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128169766 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101622831 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11599752 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113036375 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101450287 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172242792 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079398908 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099545112 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080378419 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101812262 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08081398 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102227668 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08306201 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115083686 seconds)
  done (took 24.318299755 seconds)
done (took 42.749320506 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.340466378 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109120518 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109384361 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108347038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106033335 seconds)
  done (took 1.570376183 seconds)
done (took 2.337386814 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.302458958 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184007527 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100050898 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174727811 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097306188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.181729518 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167288012 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114531729 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208017825 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098662523 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169984786 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098321956 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079933242 seconds)
  done (took 2.771271388 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098495213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12030489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0851875 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11524627 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079032262 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116181325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095546427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122279554 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113710836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08823513 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097567715 seconds)
  done (took 1.900558919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097938744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11777891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085936871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115686916 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079002721 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11576432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095039549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122585378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114503519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089437298 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098221461 seconds)
  done (took 1.897551952 seconds)
done (took 7.331093679 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095209262 seconds)
  done (took 0.8595766 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.964718546 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.897279216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115613702 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152315391 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302656551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198480991 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484329431 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126751148 seconds)
  done (took 11.22041613 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.150167942 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088491823 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105733119 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088529851 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10528228 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086285756 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106650069 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104220077 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089335483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103708487 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088106613 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103275937 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105849034 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087684352 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105189964 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084814537 seconds)
  done (took 2.433134642 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122871969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121827562 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111653617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113061418 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090641803 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110348043 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110382279 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091618313 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106179108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107528189 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093706708 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109955476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106969481 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082813258 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110655768 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111355693 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088542944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110704044 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111096717 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092928227 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111222077 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098593554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090192177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109853867 seconds)
  done (took 3.4010896 seconds)
done (took 18.683409772 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164742914 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112780681 seconds)
  done (took 1.048768369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100652637 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118059768 seconds)
  done (took 0.989754847 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102135254 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101510256 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126255669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113706636 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083435605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101150243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124471071 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082935397 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101556484 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083257146 seconds)
  done (took 1.799247551 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087462247 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.115304862 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104857046 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09880946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110947769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099277136 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091644308 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10340088 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113759739 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079499103 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106875212 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118233256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089360884 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120529392 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.110042339 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085668569 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106645544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102870114 seconds)
  done (took 2.623336312 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084490985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102111416 seconds)
  done (took 0.966493751 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085756054 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098276901 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084008457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10175702 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097370449 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080165364 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09862997 seconds)
  done (took 1.422163645 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.503814987 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140886573 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271434826 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105141775 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107155832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311758094 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103107595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086832189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109520115 seconds)
  done (took 2.582900108 seconds)
done (took 12.208233329 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097958751 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120670537 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117210326 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.485131333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11197821 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.103335445 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151601636 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260047352 seconds)
done (took 2.230538699 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.149171366 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.62801851 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.446557476 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.243127555 seconds)
  done (took 2.103731773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.421042702 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.102966029 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086830661 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085999229 seconds)
  done (took 1.4856739 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084395911 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103639381 seconds)
  done (took 0.975824909 seconds)
done (took 5.504383881 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085848132 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.134609428 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082744559 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.104372763 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080051781 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10427944 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079608019 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102260724 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082554731 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102751212 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100161408 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083764295 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.101005725 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084106089 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097840932 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081208089 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100750211 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081726946 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098859178 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080784649 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098715883 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083871942 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098207232 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080309636 seconds)
  done (took 3.055940509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10489248 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.103365564 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106792159 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089522357 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107032636 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089306624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10750196 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101863855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089147557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104560479 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087245576 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106819169 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104193209 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088417658 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104642126 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10537035 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090496593 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102175448 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085780237 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107108193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106426898 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085191827 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106618165 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08938819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107600651 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105536845 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085453019 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102902923 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10599749 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088615231 seconds)
  done (took 3.760721242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089889507 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097988729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081780631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10719185 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081103773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101664682 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081181677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100451721 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081781954 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.100181219 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082614902 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099982585 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080739011 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.102060048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081888785 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104373602 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112810528 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081949598 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098904079 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082675865 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103114261 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081201756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099661253 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081688482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.100239021 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081987867 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.100381821 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080967899 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100548348 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081017027 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103649074 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084178448 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100017232 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08681422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104402088 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080124693 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104461613 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080143347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101440334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080478091 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.100772302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098049275 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081769593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106365079 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082277146 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102344066 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081700084 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102609325 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082281479 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103602766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080428977 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100031463 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082422131 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.102084172 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085293563 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099902516 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082136179 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100711002 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100079726 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082905778 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099057709 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082128869 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101572448 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082269794 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11647489 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088703012 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.100343839 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082947799 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101927846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083685229 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10324277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095396531 seconds)
  done (took 7.477902272 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08770177 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112225806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083712003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10303707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079680368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102173518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103758175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083112452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102577644 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089087224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101959015 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083563563 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103299235 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112562932 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083191412 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102249972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088591102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099714147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081981176 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105430409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081244909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106608489 seconds)
  done (took 2.897457559 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216877434 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110990981 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148866836 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113512677 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087122263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111717563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106986564 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091458692 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10839365 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.204275794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107091603 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107561593 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087117327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106404409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104324016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089785612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107171437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087522509 seconds)
  done (took 2.897748283 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097018337 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104563316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106633542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105037082 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10337796 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087033967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109528257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112497509 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087248307 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104741007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094121064 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107516359 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105582969 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085217897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107163502 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084347754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.106366287 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084246332 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113174913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110290513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089598235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113993101 seconds)
  done (took 3.023006925 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102192948 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106600582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122877195 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088085251 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101118712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08298265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111318796 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084104261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112937789 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105189952 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085087146 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10272518 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091595615 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10440137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10951644 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08560551 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105930841 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085489243 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106515129 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080066747 seconds)
  done (took 2.778584216 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10784186 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106976037 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104850908 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09583852 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106840271 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085238559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115509656 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106056357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08554122 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131004114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106116042 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085859946 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115394894 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111968184 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103649703 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096052765 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115721839 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114577408 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086565317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106221033 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130882783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085500983 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115122314 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105665344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085735241 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10635364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10504195 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092967363 seconds)
  done (took 3.719606203 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086776773 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103618018 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085869354 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101328217 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082639571 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.1014031 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08318232 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101272289 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084900903 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1012566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085234596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104055566 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085271154 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.104461782 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085318514 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.104686305 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084751938 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101707323 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081912206 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101537371 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084280139 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104944899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084879747 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103115085 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081685217 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105619047 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081676896 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10192931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084062248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102662005 seconds)
  done (took 3.614808925 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095672061 seconds)
    (2/2) benchmarking "in"...
    done (took 0.1136699 seconds)
  done (took 1.016644263 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083928687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120557483 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081857869 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109625365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089474821 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106558909 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113685798 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089842724 seconds)
  done (took 1.603879158 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101773879 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116862985 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086167426 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119632086 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115661462 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.102096585 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.179060038 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107241847 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090716062 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.105052604 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119492013 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084498565 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113177466 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086606294 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.11139864 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091926216 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103580921 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110810088 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091222824 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107620969 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086975582 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115295522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087124414 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103826234 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106045306 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095874194 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118946152 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086869021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110489687 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113273715 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091960312 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099281079 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085694576 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106891144 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083010799 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115306771 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122352053 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088600544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116506141 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086180742 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118417375 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101157105 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091215039 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112604826 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115088906 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08824928 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10721686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080994981 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10350703 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089074145 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101678883 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085121886 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.101517797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092905597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110171714 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116840363 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085055696 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107185362 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089022205 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.110023626 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09230335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108368372 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107441863 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086463474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112783026 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090351934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11680454 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079604991 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.100613894 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102220682 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097505776 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130338834 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091578206 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108287071 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106691051 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08434303 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109043936 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087686281 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113640494 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092507329 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107114206 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11298568 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093818165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106825343 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087235732 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114499972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103951066 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089027464 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103988145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123563833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086012972 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102857075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083754024 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11789056 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089420563 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106361671 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0823528 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114770025 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078895586 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108355907 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107688838 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087758824 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118868678 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111755966 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092913917 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.117315641 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09309338 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106431585 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108174665 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083519722 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1072572 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089522937 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113145932 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080404976 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109791819 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086578063 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108045533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114976738 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085295796 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106057617 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094130852 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112333422 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083592264 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.103393443 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108267764 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087250366 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109836776 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094800572 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105136972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080880925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102339263 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088757635 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107996274 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110213293 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092744716 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11015821 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080567464 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105341635 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110546158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097271968 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106775567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086538501 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114581831 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086538513 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107295949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113460932 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089678424 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106064089 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092603484 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10786149 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081463413 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11103272 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10864649 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08543133 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110568852 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090649173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110079111 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086578723 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106414468 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11310859 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088325387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105195572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086432164 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105508247 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097172137 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108919733 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099719649 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084715696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114945423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08492486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106229606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085449615 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109560149 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087051946 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.105528896 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10495445 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089366895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119386322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091229316 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109403166 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112650187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098708059 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107697936 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088924422 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106886427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0867137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107898391 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11670112 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092132499 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112603814 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088340112 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.104338576 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112748904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095661418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10700746 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085101337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106235107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090324374 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113732595 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.111240403 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088422352 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10544562 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087531875 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110977102 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088929486 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.107759278 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084636411 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11294085 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106199097 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093781333 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109142928 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117750877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091057489 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101786581 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091233327 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105787177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092840767 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102999829 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083854619 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108140609 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107548151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086030928 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110441865 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080710677 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114548168 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094019634 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108554246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085247507 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108218226 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113779639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088705227 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1114128 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090664665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.115030241 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118271619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086809742 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109988167 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09832848 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108272135 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080080936 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114139214 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084694345 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108100849 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106379785 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085265675 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110785985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096139645 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11637041 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099589453 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090295705 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105554602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086080277 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103039383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091251604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110965463 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08752614 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115461758 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108103476 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09191609 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111428893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087518473 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109964485 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088405812 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111064271 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107530154 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090658654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106933341 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089990194 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107338925 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085090269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110292436 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086567166 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108356175 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113210783 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08838017 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107963121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089705838 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109375475 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087485426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109132171 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086750604 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111278307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107055838 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088417298 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110268194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082866796 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115377789 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087410786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116727604 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086813035 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105012657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112604207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090254178 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113925967 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087679237 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110015481 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087877908 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108672059 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110306915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094939063 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105896633 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099698256 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118047483 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108038375 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091671521 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107747443 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089317694 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.1071358 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088211439 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109457138 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087733918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108528648 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111994145 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091320653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108459803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08950255 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109561131 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087366842 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.110690175 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080985799 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.108503749 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086919932 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108374536 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119630545 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088013098 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111599926 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08569974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110117001 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085450325 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106180041 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117191188 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096964609 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.110161713 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116140258 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087313283 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109505697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099083241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103152973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084543033 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106724591 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084347442 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127182411 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109538948 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097667844 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108039896 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086809564 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106141641 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087838332 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107546809 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081610131 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106736255 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111479 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09059654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106690973 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087972903 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112009106 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088917852 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12018315 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106806147 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088749877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108960126 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084622187 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107470428 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086699461 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111471718 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088900095 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107648159 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083421044 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.108855997 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107886316 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089609196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108234831 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090149624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116804911 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08670996 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112297702 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111570345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083134988 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110524662 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088163592 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108640544 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086506624 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113787618 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090553214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110026117 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11737884 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088856467 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108304853 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088285279 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.107181359 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086775222 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109430555 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087516319 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109275668 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109734695 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097563524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107083034 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090240941 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108952519 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087849453 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.117438551 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109741918 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092466909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117283476 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090860626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111033208 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116437074 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092564017 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112175698 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088610687 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111438369 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092943527 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109057891 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114606733 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087990439 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110054343 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089175207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106492412 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087363885 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.109556524 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087060377 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117070349 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109351249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087979825 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107503352 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086455612 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110020092 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091608511 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11779895 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109920509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091496312 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103344485 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085755284 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110768221 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086044769 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111226403 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091319059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116211754 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110053725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090296822 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107976369 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098278821 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115763071 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091248445 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107884037 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111710162 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09109993 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111178027 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089283549 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109754888 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089339623 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114253335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08885388 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109168296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11619615 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091960627 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11135014 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089455126 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110368515 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087817786 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10591894 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088008719 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112677205 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114208029 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091399901 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108915313 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098791102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109215082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087297763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114088081 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108212701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093083816 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104880234 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089374787 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111284657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089224036 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.105061528 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086087458 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108187549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111196465 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08810495 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10424812 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09988474 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119455943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111588096 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089014932 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107605305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083531726 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103705817 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087852258 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11079242 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090170155 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121055285 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087016548 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109238277 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10361216 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088565137 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112207032 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091981934 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107285586 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083247747 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10892856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091722908 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117131526 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107469687 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089389812 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112424815 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090542564 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107529571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091853556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.1068574 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09148066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126084124 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110820081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089650432 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117437039 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116383731 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090586946 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104802886 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090276373 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113599379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088368066 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112030203 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088621994 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127007093 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113125734 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086951367 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108865379 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090393791 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110122089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117843786 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09051326 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11033594 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093373186 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112118962 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11854145 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092637686 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119073215 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091847413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11460122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087069367 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110829207 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085173567 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10990399 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110570248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09076978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115941929 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096364745 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110238068 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121212402 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09881504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11593661 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083725611 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110116131 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087246948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105913147 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.113199138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086888313 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10807034 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087315109 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108733428 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089662885 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116706911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089268832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112576886 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087313543 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105123181 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111007332 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092020543 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111108721 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085634045 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110443609 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090024528 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114951646 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09217997 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112663348 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110801655 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091181616 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111432614 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084543572 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11753811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088218855 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113287791 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088627574 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110889728 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088748101 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114722325 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116577299 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089918997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113767569 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100360495 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11408471 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106656709 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086634116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11624271 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08749674 seconds)
  done (took 61.262131207 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156067726 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085696686 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105995247 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084316533 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119762638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105832561 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085461935 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106412709 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085221067 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109134388 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084291171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106708935 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115034811 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131837829 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098701249 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112517624 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082549327 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107673885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104859796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085819175 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116098666 seconds)
  done (took 3.053009786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110997192 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126437318 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122605348 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126468648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094738091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123409056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12226464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121910845 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105229371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119573675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126533409 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122161271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097139797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.118865337 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117241442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097940136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126222433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117301011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12326455 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100693176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120622722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122273083 seconds)
  done (took 3.424960394 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089788725 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10883531 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090407901 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.105207082 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088762613 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.105804659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092416695 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.109185006 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091936193 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.110500742 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08615028 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.110166358 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110378536 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084108941 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.109741421 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086901573 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160201789 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.115379431 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086889064 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113116999 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082693887 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.114258948 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.105814209 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085718669 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.108752035 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092584487 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111936846 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086448253 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.111142836 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087156864 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.111490894 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085755189 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113471527 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109696051 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088163951 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108435441 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089544944 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110119875 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083905541 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.108599775 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088976254 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.106749967 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08850241 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112949616 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086524609 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.109531484 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089060482 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111737728 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.083514016 seconds)
  done (took 5.791277233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110155625 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16966309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091237355 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152907187 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129332707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11984199 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092608541 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151961383 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110179541 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086428317 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130782139 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12927789 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111506845 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094542932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115376345 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109979371 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0912435 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109518921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09316392 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11166966 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116790466 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095714827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127754089 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127665004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115277354 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088220954 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111090443 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092789579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125489619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117103216 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116238127 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096350516 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127757908 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117424517 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087697664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.115057047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130195305 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088873897 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116036905 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108354485 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092671498 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117050286 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117147526 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108285969 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112837791 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116486891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089470036 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108433516 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124712691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092276393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121821751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128447276 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092779254 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11369261 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116252135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126964914 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090625983 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109198857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092461844 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126052833 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108051829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093796557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128087783 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113325119 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096471193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126860652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11716551 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115399313 seconds)
  done (took 8.650337622 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099959704 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119543811 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128075673 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128636639 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096394259 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118912832 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119109387 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095568622 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118669057 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124852264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117459063 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141664218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090837949 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122533757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11780977 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095984186 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119867203 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119211522 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095462517 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119884268 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119316924 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127133357 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096497087 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128865084 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149686479 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113226984 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095692702 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119350172 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128868253 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118228368 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129315111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097844105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119001433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127573806 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131314116 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096655863 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112001727 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117942282 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096660849 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119391229 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113141025 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106764646 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118966427 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113202421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096365041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118597241 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128206336 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.131847355 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121418613 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102135695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119708412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128693246 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118537656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096946396 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128311536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.156497135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12899815 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129062456 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118227663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106613317 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128846137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137348152 seconds)
  done (took 8.154868122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113645454 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.123325174 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1254465 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.107126145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08881544 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117257201 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087322652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.111174378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120582568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09990474 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125805139 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116202071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097482633 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126522709 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117219917 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120269295 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093357307 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116833434 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122513157 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093890674 seconds)
  done (took 3.100080437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100055324 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132255956 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089604091 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120106131 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115511913 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097050209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115526634 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114205945 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091898084 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11641163 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100442763 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125063065 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113395851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096471896 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124490412 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120155078 seconds)
  done (took 2.651561752 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106120921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12603051 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130280694 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088986162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112528298 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084537576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.115315417 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107932049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086821119 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12948511 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089666203 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.117090559 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113364041 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088163293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109401378 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092998697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1097972 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086611946 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114067791 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.128107457 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102334053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112509279 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089931126 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115782744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112995225 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096383491 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113566494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110116203 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089591486 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113334593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091297243 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121575534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109228141 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089188337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110775228 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087868207 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.113048611 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090191973 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116699272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111846883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089173226 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112671047 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089614974 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.114912352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08545793 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114098934 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084837115 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12085902 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110718114 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090831676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113768894 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091532763 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115018903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123666179 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093729367 seconds)
  done (took 6.664505282 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105052724 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117945823 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085296553 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111399772 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092194487 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115959468 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115929264 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093925864 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115209952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087548715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116158207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093558286 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115613056 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115740597 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092962833 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118166082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086675656 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115993554 seconds)
  done (took 2.78245931 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097117717 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113287569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09780731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113742009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090086081 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116637072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084991574 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112463631 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110300533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091299573 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113166642 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092671517 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112617184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093189581 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114416889 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089282804 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11656842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110824284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091630821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108516231 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092818793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111888694 seconds)
  done (took 3.157263821 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125352544 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.133950109 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097280499 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.247465659 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10974615 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.14237828 seconds)
  done (took 1.73963609 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116202022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129751687 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113319743 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113322054 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124144089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091494252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116084181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116512422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12465052 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107092649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116180931 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125757688 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125845269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101889274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122661281 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123540653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114602264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094151888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114293078 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135833802 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093246586 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126689876 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115431956 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092069456 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116049247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125373792 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125871734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106849704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116678907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125582971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121833983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093999188 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127101299 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131098752 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092601837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126208476 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116317691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136867825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120820345 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102623201 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11789988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122340512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103293044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121533647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126413572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114837034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098894289 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117197302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115629391 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144114708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099396474 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12611297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12359309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127064249 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101905304 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142441525 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129824845 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126222975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12293726 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129876635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125751014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100395791 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125460459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131465871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122429954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101848552 seconds)
  done (took 8.649809162 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107849292 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135308804 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116498092 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130732395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103880228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11642534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115335549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092732349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116612824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114943572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161712905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094553848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125870734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126600803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092220046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11716399 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11681806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124615917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09318344 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14378072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116781333 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124973702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102611145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125581672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13155916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124676446 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114960442 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094126382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116656296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092281817 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123611424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117046669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126189365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091552327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126155267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116830299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092126343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122667797 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116954489 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121702637 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103466853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136562926 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117588662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115411295 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108033217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117363283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116327582 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092217833 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117311605 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115033786 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108357463 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130870611 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131824366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125710324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116306987 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094448351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117487391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116932708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093570485 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123730578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126043022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092700872 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143731454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117526959 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116479035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126616435 seconds)
  done (took 8.563747191 seconds)
done (took 164.276893188 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.239919486 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.221238908 seconds)
  done (took 1.349125126 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.093997221 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146102974 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102111424 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180028127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086138735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149153146 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143502401 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098883589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111186739 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091393283 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116313187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091881704 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.194305934 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085840215 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.112727668 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114997538 seconds)
  done (took 2.816796411 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.125255835 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.247155794 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134552518 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113600422 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096164509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118643583 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089822336 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120731325 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094444506 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11449417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092893273 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.115731442 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089116476 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.1168959 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.118478101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094719163 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113348057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094209764 seconds)
  done (took 2.987533843 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120516739 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170244716 seconds)
  done (took 1.192812083 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.259059131 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165921132 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.240772287 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.497269837 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.293978322 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.388244563 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.223735552 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.228865547 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.180184563 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.218273619 seconds)
  done (took 3.593101296 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126052468 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190232665 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.332870535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164486435 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113435259 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138243222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166746131 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139958832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.13048283 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107101679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130881093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.128642854 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147744403 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100696368 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124640372 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.127172112 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127129949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123613496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122661285 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101044034 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148229892 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089915816 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.124921561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122766929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103924875 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128104715 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114550898 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090994596 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126804263 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099782056 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122483643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135486736 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127969023 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164297791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.13218192 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166461769 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126967616 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097698324 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124171585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096155848 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127326 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.128757057 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132468061 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.104496742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114470614 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104452171 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115105556 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089777039 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124857593 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126945396 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09906103 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123832332 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164154385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129402413 seconds)
  done (took 7.876340623 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.816138484 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161055198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097163328 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.915729935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118469167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136188875 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.807011627 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116541688 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261903532 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.776532588 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136409892 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099044274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231349648 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262872575 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937163348 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314922277 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.654653238 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128959433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157193319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156202112 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118213782 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115855448 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133199079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432207471 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119948719 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094478142 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121455297 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1215495 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164491159 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126734073 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095043492 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204368021 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.258574327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205315961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099888121 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115598841 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09444441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.200546751 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24618174 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216554187 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182584681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111819699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095004999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127132942 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137371057 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09131371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188838623 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181048264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176526964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117035473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101642728 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126708877 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122659653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16911569 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124645081 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323246587 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321443635 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091224971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123273189 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129149608 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239768169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127135033 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229010064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144894097 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194953915 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115717199 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78587611 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171543181 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091156388 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121229568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12273574 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098039471 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123616206 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168808536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409848426 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125535181 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095088634 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114139462 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226738959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105128398 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114069677 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167354459 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119227268 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103246173 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126678267 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125155248 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174730891 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233958387 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125313083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121373894 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097592968 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12709021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119133493 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216675803 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220201624 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164794148 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210760689 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125187873 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164030961 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193791385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10007188 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197991984 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099147538 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126802558 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123222687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220549761 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146860784 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104564183 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118268113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119892857 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150801782 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107452128 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121336966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171989178 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482870388 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171144648 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110918764 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110657905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122448315 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163731657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119741426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269868713 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100510968 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193226882 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103469766 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112430677 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124514825 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167467899 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124945294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103211329 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125092982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119596804 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237706912 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218264383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101869895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244734938 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187184865 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119433886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174455497 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122074756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172138648 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121516883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103294275 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120026781 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776400956 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102775542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124664243 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117447869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191594612 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091381618 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126124913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125850413 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090589153 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80746639 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128549282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100607012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127480753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118890076 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100794134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121848208 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11712402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163873325 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232602733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101086739 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123395509 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126785254 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163023552 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118703389 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12564044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104490298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127339155 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122839123 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095962307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127520878 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170367119 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18654845 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.199416085 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599250266 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114642997 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106122751 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231445862 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114764587 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294843966 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099447353 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226984438 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164723551 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124900875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318859905 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167382471 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190221322 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.130371559 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173929246 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111422983 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099585016 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.189458355 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093032474 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120626036 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164106158 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127184719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125000699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948425609 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116055526 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228149853 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111909068 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177657022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119544724 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1018263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298103567 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114891165 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131395421 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168864622 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09699856 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128184375 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.86858689 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103494822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124465308 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120635446 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226088232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167829908 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121991967 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100045438 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122195721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166942421 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212777163 seconds)
  done (took 44.869468072 seconds)
done (took 65.580186792 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293940156 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229062604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.284895438 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176422429 seconds)
  done (took 1.997282666 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184015559 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160031282 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130248933 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117913466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162202759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090521825 seconds)
  done (took 1.771835588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.383066914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2921524 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.260408969 seconds)
  done (took 1.867743007 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.332306056 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.258858551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.487916608 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.332957835 seconds)
  done (took 2.448639915 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.219023139 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144401148 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12053558 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110369193 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.212610455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261025745 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152987192 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.216739663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105467467 seconds)
  done (took 2.515620306 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.210869932 seconds)
done (took 11.745979124 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.174246677 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.195434578 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.193869513 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.13369106 seconds)
    (5/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.262889625 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.267518063 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.232551995 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.238090366 seconds)
    (9/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191502498 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.226422469 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.157015149 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129157284 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.241229686 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.209609762 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.088819728 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.191919108 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109568825 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.132985674 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.159181528 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.134057996 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125436156 seconds)
    (22/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.249380345 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.224238922 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212507863 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.103164912 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.136211218 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.169271422 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10172231 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 0.264800165 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111128364 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.13311361 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101855971 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23490563 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118305145 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.229004314 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099125728 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183338819 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.186286653 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.144500186 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073134047 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.141974991 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.228006403 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.125151177 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13048866 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.131065157 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.130234095 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184811684 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.10068405 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.240590166 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.163131795 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099474471 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.132747782 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116801298 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08544675 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.188686643 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095623337 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.12984199 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098653395 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125890104 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105185771 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.245806994 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.09895818 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.145633153 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102288775 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12991361 seconds)
    (66/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102068088 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.131371764 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.248357908 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151234726 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120829977 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100532941 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.198953665 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.074268833 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.130909843 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.094460216 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117216502 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.170560443 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116103908 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093216966 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.192504224 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211655122 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.245664871 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126194345 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.085649543 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.208149384 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138379501 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098762838 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093676354 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11791349 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.180306052 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184215416 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.176551734 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168276355 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135228253 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.118030665 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.146588768 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 0.178107844 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.21907789 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096726907 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17773057 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123283102 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100617375 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184512841 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150664656 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121209342 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.205153975 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.162750383 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203172869 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109287058 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.1201813 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149139591 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.203220075 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.177901284 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 0.1932098 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.128168034 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095789831 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.361498815 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097340004 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.141877214 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106979877 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120768531 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122774389 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.126613163 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126356206 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168496179 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.140389028 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090333074 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118906014 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099876811 seconds)
    (130/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.100576569 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101666302 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.098983734 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167756038 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11948189 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099447793 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.127999223 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192769944 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.172817892 seconds)
    (139/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.161335588 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135405764 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07439752 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088235861 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.144191825 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092349085 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.130016504 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11498676 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15614471 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122337116 seconds)
    (149/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180389637 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092121947 seconds)
    (151/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.232004634 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.142886955 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069252395 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112043841 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118174594 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.145842176 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084968314 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125026726 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.139562451 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153834777 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.142189463 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09072358 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.149834493 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067392157 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118458608 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116152243 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099375598 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100626854 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099189589 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075886422 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.144826496 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130393966 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121581734 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121277345 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.094319168 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067619622 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118351832 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.132758011 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.097494248 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073051409 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118961815 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095472521 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.129195182 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.236117214 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.224763853 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094812479 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067161507 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.110262249 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070282925 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079748587 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100271014 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101250047 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.223724185 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113845168 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.126595805 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11401987 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07223844 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118722596 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14213857 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.141692418 seconds)
    (201/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13822528 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110182753 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114637304 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089588581 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115892438 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122264933 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088765415 seconds)
    (208/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137239055 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100304635 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.120539499 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096759732 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123513575 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092337728 seconds)
    (214/309) benchmarking ("sort", Int8, false)...
    done (took 0.2210091 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110461352 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.092666304 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123709933 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129651981 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097105344 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.120152219 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100428391 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156773516 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13903175 seconds)
    (224/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133958388 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099254281 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091482087 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.099539243 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.084460463 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.073205034 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099747203 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073942917 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073482474 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15623302 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.138311661 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071370115 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.178526548 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166376341 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09664753 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131220744 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068924811 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.177242397 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068847977 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117947332 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079473448 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137825867 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090017108 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1399355 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069133066 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093816976 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161230508 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112895293 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070650585 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066734737 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118390474 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072409987 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.204601266 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113858372 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087818492 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066325516 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095671503 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067440965 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.167556644 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.227821458 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069131066 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119895279 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069701279 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120746197 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098865111 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.1127391 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157796062 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106076384 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070065412 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094775779 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096768602 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06790904 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114488024 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091771609 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112457174 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078552187 seconds)
    (280/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120989915 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068184767 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120662043 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06930282 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0680146 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115457791 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.070847517 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143817746 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087356299 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139361337 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113418688 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093533396 seconds)
    (292/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076132847 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.1128673 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086066958 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112524327 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067337446 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118690303 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088355268 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119898325 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091681264 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112744251 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092892325 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114794352 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114192005 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069557106 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06831616 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113135906 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161316702 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113558809 seconds)
  done (took 41.680925277 seconds)
done (took 42.617671377 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.107190759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152122705 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098402447 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139684135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126431885 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091968196 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122022613 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098435748 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127522903 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128100666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098772479 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095676956 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098232589 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123554833 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096686434 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142550874 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126258876 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095614269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12224699 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085812006 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122926646 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087084607 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115340515 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071046301 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125450581 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094768452 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120162683 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121265988 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088689085 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112474666 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092317914 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120880743 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088571682 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126599329 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09806248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.122209594 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101183191 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.128359224 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093101553 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113936313 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119548233 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088871601 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121664921 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.098956479 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118656115 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096515048 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123608301 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104731758 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142929171 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117194705 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097961702 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12382984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097328522 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12174346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09159194 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123239263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092782707 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143893397 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124406504 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09467219 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123819077 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096502252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119652407 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098924711 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123667727 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123791931 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101327025 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118566941 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101338631 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.120088282 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08761545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122536001 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091423425 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113922751 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096352752 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125022092 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085643783 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119801043 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119535568 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09425418 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113587521 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091774453 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114540701 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0959283 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115453844 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073756543 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090393281 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120327996 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111322176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09840698 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.119353685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095031709 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115453172 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09979392 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113512297 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093301062 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113685255 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089747303 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116565174 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094185322 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115040687 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089867296 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123604701 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089006994 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.120611985 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124125611 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089245993 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119263827 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087664769 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112163065 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103935778 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124960271 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087492641 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120762007 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086254162 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12244247 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087121444 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114096772 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086822917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114693738 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09260715 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113911177 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090966337 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121594279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127592379 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089384943 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116657783 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09273424 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113112706 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095732127 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115085134 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091415203 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116088826 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083628259 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115602854 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090932232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121082005 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092516532 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122665663 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.091872433 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.124261784 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092848214 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120222427 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094451443 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113666333 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077037741 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118961214 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092815584 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115578812 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087900028 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115890747 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088000567 seconds)
done (took 17.374279703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091416231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188284735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154556501 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145286756 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10827091 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11556019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123882241 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120128409 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117423077 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146306055 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113280774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135414447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151845267 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087027888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114849621 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092160925 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115849777 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102902066 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14881629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135676708 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167309952 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086658943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15035273 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138596607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122370398 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106546976 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114744607 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093683968 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.118394937 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114050947 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135876386 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090663603 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11571503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136800554 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108167433 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123915161 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087153419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122488488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087374187 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115222018 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143376883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136808069 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095634723 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1201575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092017607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117181423 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090215749 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124673288 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100547457 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119450583 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128666985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159410927 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092915848 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124195189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086989499 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126202366 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123016336 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092036294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114867063 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091744969 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113496689 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092633212 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129949571 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145081503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092679696 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124953653 seconds)
  done (took 8.801033698 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111731373 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142651584 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.124481777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134187992 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114579381 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089642392 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115392635 seconds)
  done (took 1.834264761 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095757526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139656666 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114940842 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139146042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134317066 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110964377 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126810306 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089152349 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134858409 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115011605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111809742 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155703224 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094643558 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123909437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140777058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089986371 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140185158 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094753357 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119694367 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138903522 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093547489 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137219403 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091115905 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116599837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104298149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116985386 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16414286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094516945 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118207718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092599325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115960554 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169745781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10566051 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128527614 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114553716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106089035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131046289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090147266 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132815996 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095422273 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131994255 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088772255 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118171184 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112803713 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095485064 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125814945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092212456 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11623957 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093143411 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136470127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091909575 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130455444 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089554773 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120708347 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090257493 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122689322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125081699 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091433678 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13714748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091496158 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134690058 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110655415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131418223 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133295907 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092314729 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130377386 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105054024 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120607973 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090468553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120960408 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132039685 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089122912 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117028885 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100857956 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118403091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113388306 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140685767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116771801 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102100609 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115808045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090375722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115897165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113381162 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121100712 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090744175 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122534328 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09135313 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11603283 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08825185 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120332466 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087247859 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118208748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11810407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091482384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11878342 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107610316 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11726953 seconds)
  done (took 12.081561116 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096749785 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116559431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092969546 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11699958 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091311138 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117609642 seconds)
  done (took 1.641206919 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117842738 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120881349 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10362034 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123725714 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158783585 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103628768 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133606603 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126503022 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108171046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130610944 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131822125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107684989 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139400633 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122649025 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104927417 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124016882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104527169 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12820545 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130456146 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098701208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14022496 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122873401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09749378 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135222676 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121092453 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097972258 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127388386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103120987 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130736591 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125170478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09759437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12062009 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095547318 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127410994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132702898 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096811568 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123902133 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12086236 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102220603 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120700229 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105720914 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12486731 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128717717 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095134159 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126448452 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121688836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096504913 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128874725 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104517212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122956308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121180188 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096596721 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120165755 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094630439 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124996724 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124799413 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09570359 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132546957 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100565556 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124744887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120225795 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095220076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12736095 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093276309 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132400599 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121918241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099475798 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124563752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123460445 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097177285 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121104797 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094685577 seconds)
  done (took 9.412528203 seconds)
done (took 34.762125608 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708344032 seconds)
  done (took 1.713545775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.743424681 seconds)
  done (took 1.751915923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.536981542 seconds)
  done (took 19.55102419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.522516322 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.61416989 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.89725889 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183651169 seconds)
  done (took 3.224584734 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.992645707 seconds)
  done (took 2.019386604 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.307434948 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262710428 seconds)
  done (took 1.583696968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.815444144 seconds)
  done (took 1.834513321 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.379396652 seconds)
  done (took 2.397408298 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34309984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187857718 seconds)
  done (took 1.556564067 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567118139 seconds)
  done (took 1.590567613 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.079381698 seconds)
  done (took 8.110846047 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277784317 seconds)
  done (took 1.31467958 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309386291 seconds)
  done (took 1.335488428 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.781251226 seconds)
  done (took 4.809800997 seconds)
done (took 53.811106162 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106207549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129112729 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102869573 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127289586 seconds)
  done (took 1.4849566 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105216796 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123434801 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101117533 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12391019 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127408597 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098327291 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126096939 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102447515 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125071626 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100566477 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123796775 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121506862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100155016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125863074 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094775927 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126515518 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099623842 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124095737 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126912442 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099792118 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121293456 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.10112202 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127677152 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094325149 seconds)
  done (took 3.749016715 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107324506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121618277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097770433 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120601027 seconds)
  done (took 1.485337925 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106642794 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144659249 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140984733 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101163921 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146140043 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13754033 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093644522 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119912008 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095821645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127828621 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091036824 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152325369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.141352865 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100294373 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130317021 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088300054 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120046038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140401576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.102744542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128525089 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096091036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128397824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090935401 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142877074 seconds)
  done (took 3.898637256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176510583 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15024168 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141343712 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096030505 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162997955 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143361912 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089430134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144294102 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088657983 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134360937 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120913993 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135026399 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132070429 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088861055 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116759284 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088729026 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131961205 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132538491 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092518693 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145751088 seconds)
  done (took 3.547788126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102199157 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119708936 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089825643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118201804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123730445 seconds)
  done (took 1.691467369 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094894641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116451884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091341633 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115907201 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096522598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116890292 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089978134 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116868687 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092056073 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117236332 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09112179 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115456022 seconds)
  done (took 2.291546863 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50410211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122149378 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121298993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090649888 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124227505 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090392062 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132236561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093812039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143912694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089358025 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118781448 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092355714 seconds)
  done (took 2.756195322 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242551723 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128949063 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291635885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374610123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160747224 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185051742 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287030347 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166565691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226895858 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169994717 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205991685 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230169657 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15444202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192182598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141496764 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120187936 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235720162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251198256 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157049777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21275862 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233333786 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169882979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184086673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154975366 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141081372 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177283262 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095714337 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133679673 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238702674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179193399 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190773824 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191822167 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122553598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24117872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259041105 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22497837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292860962 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110468358 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.180119493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.177034472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276139522 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141435482 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207716235 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158092081 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135899356 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195324785 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196996288 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179969257 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15499784 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114754224 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227134486 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242212907 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19665625 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141527309 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314838745 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155835623 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177169198 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225077573 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227803038 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232762672 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190446141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123750069 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192069318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225033692 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190714722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.178124097 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183001441 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150875202 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23183203 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192876687 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168231574 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223926782 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191742622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143667011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172728147 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1765586 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175404667 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26103191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185977412 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125141942 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173010154 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152723226 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134307767 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17026328 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128513096 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24189477 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118946071 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166781052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250044941 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161925463 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162393731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207341323 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233858706 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121621348 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113935951 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156963615 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157645085 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198426525 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143678672 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163328401 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166347149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131895958 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187329038 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097747573 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214989941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092003781 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175758534 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213366419 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10037985 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16350536 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155553559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153524995 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176972046 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22853463 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116499224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137684105 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238664348 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181200212 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1531723 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18236328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204907867 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147153222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151965348 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201977945 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247385367 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142906015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206342933 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16038988 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138145444 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105592607 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21362063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157365502 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163446412 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108813991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.213174578 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210240598 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128926538 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112065917 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22540582 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134942329 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106446369 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164719419 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151307181 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142149513 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155675938 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155965781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185247853 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179314787 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156763279 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1674035 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155108923 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256794376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14512824 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153968253 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15106271 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095922032 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222104734 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203483586 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132543753 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208298477 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174910697 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235717573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174850422 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136487433 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179077676 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103942584 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123129715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195725912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16995377 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163263084 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227660923 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204411809 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211264946 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187366874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175811455 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17670261 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168942061 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160309648 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141148529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164244549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174747347 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09702584 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148244989 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13782365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151750983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145883369 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107209027 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228964497 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172004348 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222376151 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134119961 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152236608 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183746802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132292758 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175693875 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20838364 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12144037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.23282921 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197682563 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189945252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146667961 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233615198 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094101089 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13009325 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146835079 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172955609 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135679839 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109841588 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165418543 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183218726 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213012998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180072232 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243333057 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176041538 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194190021 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124091521 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143102358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215922533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181079004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194808446 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122246241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153470341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179974539 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159929261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259038305 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171597166 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178333752 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240978094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153816338 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105709046 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154603196 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226622097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157283992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183518269 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150027667 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115107014 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164441699 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136679514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162255765 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215115792 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166809231 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192700276 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155487616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187415081 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131129171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165547945 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163199537 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169057692 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081325745 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205826488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208874307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152374762 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171859739 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1919007 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135548233 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311924998 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250179919 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19727263 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141415434 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159429073 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163885669 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16799754 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174199818 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181647882 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161161919 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189548224 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161431445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140858232 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142710157 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149915879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124848699 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134310584 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151535542 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179468426 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143486481 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187521067 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16671313 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161802244 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176140561 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153340352 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146431256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153696509 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217850828 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213451724 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213669478 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152740882 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183053841 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237435835 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099693453 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135305845 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134741909 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180941673 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109328471 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225125008 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190556029 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236318892 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18688 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197440167 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143110492 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121836333 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16157748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177039586 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213075917 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156740276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162629272 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236615747 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120375341 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135679102 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181773422 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298549465 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146182612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226988164 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081429013 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283745932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130189617 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105563048 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166073506 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239482589 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138658847 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.193759532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176772324 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173997705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168639249 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153262329 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195192531 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248163457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20364004 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181023286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136087205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158872032 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178848575 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224383427 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161343285 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114521268 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236370084 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199610113 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198035849 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145786298 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173692782 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171278442 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160464359 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220157166 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109050568 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237680765 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107602033 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225688607 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156304323 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147363829 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179034827 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191466003 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14444551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219116593 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186812425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136975522 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107740887 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171621745 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208983503 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159496675 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102339923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181181534 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128407628 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196439895 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262431684 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139379688 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157928574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150602202 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1101604 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157298695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161717251 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143713558 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169565105 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2087615 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137640679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193634047 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236700999 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171567543 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176604698 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14820621 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697022423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133672221 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198585486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162179936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236425134 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122496443 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204581014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131720876 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170723298 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228672471 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163376468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234742421 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195792035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.209469608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10664574 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160580267 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165619884 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147639281 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154769266 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171571701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164087711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157887306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179897919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173034366 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138550291 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142558732 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201965096 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163490847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183808878 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18190971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142443916 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175814919 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221514074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105213353 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210919261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208839604 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145691143 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155896834 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136471427 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16038623 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267019612 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098745477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237176003 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188349576 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16248772 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172752606 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150702852 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194918227 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159535217 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217861576 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150324268 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162427764 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130533498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140421075 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134169953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158024292 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170164307 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152115149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162439382 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142754335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22558364 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098540363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14872341 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296509214 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226167493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218499709 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139373448 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137788173 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164523493 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124698281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.209179843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183523368 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138120289 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110784456 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140506217 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13548768 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141330925 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159904265 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200501571 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168908041 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23788788 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110020751 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281921801 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143255085 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15891103 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090022103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136299512 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153558791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148107941 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162260139 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197246112 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268675613 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148790732 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108482428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153710592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128242684 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109437711 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16873793 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165578454 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208849953 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119514237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112273667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160460781 seconds)
  done (took 84.877110657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178841705 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150747287 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171508416 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22820545 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194555673 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292885582 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22954575 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281019392 seconds)
  done (took 2.8603541 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098000512 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150660456 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.161534075 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.137013932 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092686901 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121412151 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.35275283 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136786674 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.120523127 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123860941 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.178272366 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095777478 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.565587146 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092778736 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122542789 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112170167 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092805373 seconds)
  done (took 3.883198068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.492354048 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767916196 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.524173685 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098708681 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.345543484 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115523843 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.128445441 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.205403537 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.120220354 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508209252 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.782430207 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.172902369 seconds)
  done (took 19.399096627 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106231693 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12315733 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109680456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138705975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097388149 seconds)
  done (took 1.718073711 seconds)
done (took 134.663992763 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111988087 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41798413 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072975961 seconds)
  done (took 1.666335299 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115691437 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139540004 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110477196 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13925632 seconds)
  done (took 1.653633058 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106308999 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128990632 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111734827 seconds)
  done (took 1.488724507 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.33078928 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.194196758 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.174014756 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113370768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131510234 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105068644 seconds)
  done (took 1.494933367 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106388639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131056604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101721571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132660209 seconds)
  done (took 1.618304707 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102821139 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078461686 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109247331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076326263 seconds)
  done (took 1.507383141 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121031776 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134206068 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10487646 seconds)
  done (took 1.507153774 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136439124 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142990876 seconds)
  done (took 1.427229205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11113696 seconds)
  done (took 1.251560642 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.126869889 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.172791482 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.194968802 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168019241 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.240534978 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169554846 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143498584 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114712942 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13487809 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14706143 seconds)
  done (took 2.759386351 seconds)
done (took 18.328803693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111098001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426376143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415391857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118321562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725681434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382056515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035205149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14894083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168692264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100455913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141884744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673515332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064839654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381547484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020009044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471842367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677858445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123477838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121924084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09564907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018255008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093421073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125005649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09363946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706448638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428671179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096701165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.470414137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093934639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12923312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383662556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126507582 seconds)
  done (took 17.303715464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103575915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177216511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098644909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141176105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125883705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095865626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127210893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09454731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183150102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1257921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11088727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124664739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128236364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097322355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144544804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093348981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12955433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093675217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125038062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123753838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113536918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122313282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096249603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125036413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095302288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138870853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124668467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094532004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12270216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100604163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130349013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09512368 seconds)
  done (took 4.949799043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1485415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186037791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131737003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129025082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172052626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12704997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.203825123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119459741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186268541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126868351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142947083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097570687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160338071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125274154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117284381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124522105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098270642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125332454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09399255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126873372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141891761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094231098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12489693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095073208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126315317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108817413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126971991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123628544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09554226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129098834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101004639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126936971 seconds)
  done (took 5.294198839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105575135 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128608148 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111077545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147071221 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101226011 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129092254 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097432667 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128796895 seconds)
  done (took 2.101771271 seconds)
done (took 30.792478722 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11927645 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129626261 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108454654 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138282539 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103210679 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135305039 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091493726 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.137760072 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13677247 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104193998 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140410463 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095126497 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.126253038 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092618728 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13925232 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098663018 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135799432 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102539763 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.141440161 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134715033 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095916305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13601172 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109969369 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138893959 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105495129 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136942854 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14015304 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104576915 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125346218 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095699372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129260099 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111519171 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132689052 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108464604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129865233 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097439797 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12675464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095311127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.136837729 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134638505 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101135499 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135148321 seconds)
  done (took 6.180772451 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116149364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15160892 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113108695 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087054526 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.120530551 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081411596 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14114006 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086872491 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11242737 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10947123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081161699 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.11499722 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079895937 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103848018 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079445592 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076144872 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110778404 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076909035 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076992063 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108434962 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080909767 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073435267 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.111872267 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079149935 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075555949 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11338609 seconds)
  done (took 3.720806988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108790698 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13878228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113524145 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188272087 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163615183 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101005993 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136570394 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143223031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110707629 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122767297 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09867528 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153144008 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112739394 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133263444 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092686585 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141086935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138484795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095458565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130917649 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115378226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142453263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103383365 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.147031709 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134676178 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094163212 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125396239 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098954825 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138229647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104124444 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134926079 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098242431 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128684372 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125507863 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106853118 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128305046 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096200236 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145580198 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103398087 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134166579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093844797 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129200302 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123631058 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116041229 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17159487 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095441058 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134928599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100518339 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13551757 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124236367 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113794585 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134408854 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094179291 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128857328 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093250697 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124417431 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107842342 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127086658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095400216 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134727395 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126337808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107198381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128032293 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110305461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125221825 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101428522 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124715566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094106121 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124879864 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115096757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127315998 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166526211 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100643591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131804118 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102583702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133416067 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14056866 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094850818 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140492263 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109826048 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13550473 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103239976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129607328 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096369647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144408121 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126568418 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096954847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124542135 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101850695 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127566214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095045939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140352483 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093252905 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129323784 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111149071 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125341549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124612552 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101657429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129192185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093794738 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138479001 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099055338 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126742161 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133782035 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09531886 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127206417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105396521 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128896818 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092868134 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130526538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100277554 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126491163 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095064024 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128607485 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095413076 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13561576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101016741 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130426681 seconds)
  done (took 15.201253975 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240331628 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220338621 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242749836 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.268861926 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139446643 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116525938 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215149451 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.159038017 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126683164 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163734417 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164926348 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187025352 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14063741 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183521276 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.145055128 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124482064 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113562792 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168131912 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218269727 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297302361 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11371069 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.136425144 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165193759 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.164337286 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138400775 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105219201 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143348253 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107262088 seconds)
  done (took 5.88393152 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117269049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.164769097 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098582732 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148324327 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152400098 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094448123 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131951852 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09482812 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139779619 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138514142 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093537667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133234816 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101564067 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135859557 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125713544 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104594622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135618112 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096683451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129231471 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098319488 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133528096 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102849598 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131910068 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092691208 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136049478 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124831682 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088574062 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144816697 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093273471 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.148697735 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123258213 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101475651 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136506197 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094875683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126931766 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096484071 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128657251 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096709969 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.128785623 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093319746 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125243321 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07840689 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.125699768 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107389888 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132910929 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08032966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132508214 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130619689 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096674827 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122136557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098112442 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127122894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098124776 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132672139 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099810514 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127367774 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097608962 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117993501 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100815841 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127509279 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086564672 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123062866 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100470986 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119774821 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103120668 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131428358 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09333429 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128664459 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098434828 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131932141 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096123503 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129388386 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09302822 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128656166 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096244991 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132297949 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096905976 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125707134 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093540773 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12712284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076530893 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125936172 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075308102 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129140212 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093189797 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124853954 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097837417 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132637264 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140346975 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096584705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134658879 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095757924 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125966715 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098115266 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.116116473 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098059982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142355237 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143493197 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095144806 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123553715 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109579709 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.130430479 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09399494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108727799 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102508523 seconds)
  done (took 13.252678202 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136866001 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157031882 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095930892 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.147844947 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159212578 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160569487 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102741987 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133083698 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097292775 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14531096 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094743426 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136125793 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098879533 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141074867 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159316506 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105056563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128490024 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108278183 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135428961 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173482513 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114125034 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146090437 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108035784 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127579442 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099098926 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.144476534 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165375412 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108451722 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.144228513 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144057019 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110059243 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164525996 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112858312 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.131261109 seconds)
  done (took 5.629177146 seconds)
done (took 51.020753709 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.263867521 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515616437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.256938395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.348540696 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.318225327 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.286512067 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.262491927 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.260317433 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.459722673 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.256325237 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.522348306 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.988332953 seconds)
done (took 59.92138884 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.389931804 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.394661521 seconds)
    (2/2) benchmarking "String"...
    done (took 1.527071375 seconds)
  done (took 4.109182616 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.66345979 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.284210791 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.526510182 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.258626135 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.284007783 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.570543438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.123828273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.707262766 seconds)
  done (took 28.935290525 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.265645665 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.684318972 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.353158456 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.367516253 seconds)
  done (took 19.851049493 seconds)
done (took 63.122703727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.258601766 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.287856628 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.281319017 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.240859804 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.372015906 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.302209485 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.366691575 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.359743515 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.276213247 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.240568612 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.274418264 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.274997702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.273731976 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.357791403 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.265830686 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.261118993 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.374988793 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.868620824 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.716501255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.283867345 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.26330057 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.314005997 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.27879108 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.28623378 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.31272583 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.257639504 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.258686826 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.26827376 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.299200238 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.263508664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.295497679 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.537342297 seconds)
  done (took 192.753745094 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.262548182 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.383773888 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.511269511 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.330483384 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.735378991 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.463028237 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.39591452 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.841009318 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.28635045 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.265941919 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.504043746 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.263691613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.590907856 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240403087 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.270213467 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2644092 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.462956665 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.594399627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.285268008 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.539124924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.272875412 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.566867214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.474418393 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.475404458 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.289684819 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.399825162 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.285105426 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.278057389 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.446605151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.390280905 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.290468415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.285649051 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951482839 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.121524039 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.276193355 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.294559986 seconds)
  done (took 152.768409839 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.57232115 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.26327482 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.262336404 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264577956 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263958122 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30084767 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.264736256 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91782714 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.920987775 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.812425684 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.607995342 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330327973 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601525782 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.259982581 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365595406 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.272471136 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.260930237 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.281280196 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.314951766 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.260555004 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267241936 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919586161 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.279315573 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.259483364 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26730016 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.265050091 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304136315 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.662101861 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.260998775 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269392577 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306190139 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.609893504 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.319184612 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.260687204 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.699644811 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.484153339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381345295 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262410968 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303996172 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266853338 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.554077234 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.262898698 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266120648 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.270722531 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980361715 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.261358806 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.923394656 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268874341 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.291615244 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.261483703 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266675241 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.857772908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.032417336 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.281888269 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.267819382 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.269362488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266718153 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.268378181 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.305441427 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.00863198 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.3657968 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.290022371 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272035708 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30584941 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.266116841 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.65515531 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267966885 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.097453737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.325410716 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372139055 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.92318461 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269136162 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368565085 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387724032 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.263560765 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.267254573 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266273482 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268111393 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.383801368 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.265388471 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.737162147 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27056992 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.271513685 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.264471952 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.331616024 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.370747498 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.262572837 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.754715851 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.269752425 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269872722 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09193486 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361334773 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.263938283 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268561162 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270955349 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.740017036 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.923342889 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.63067001 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272119648 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.049591785 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.270877504 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.758363925 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.877288885 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.981258552 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.264601594 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386403111 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268007638 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268843344 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.268835026 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.270945559 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298902894 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.288674533 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329531561 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.264477287 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.676411233 seconds)
  done (took 356.859163491 seconds)
done (took 705.131278859 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.946602058 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.935496983 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.056303403 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.925826097 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.882212359 seconds)
  done (took 10.934333633 seconds)
done (took 12.11726678 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496423279 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497671616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341571815 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500235669 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304830644 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520488714 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47318449 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293658312 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391389135 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367910615 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391668367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336750918 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30325999 seconds)
  done (took 19.407003508 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616896709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.606844981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335779215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635858288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311148051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612330998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483463972 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498553098 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495342294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299606815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285900617 seconds)
  done (took 17.372270781 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634429464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.629109523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339467477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635332843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314270459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640911198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488179538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503686156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501280998 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303478946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285661466 seconds)
  done (took 17.464683319 seconds)
done (took 55.433794993 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.283257074 seconds)
  done (took 2.471855958 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320183763 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.487462398 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.30444951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.286102812 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.284594443 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.285166611 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.286702442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282891376 seconds)
  done (took 11.73045222 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.280836348 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.28044404 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278968133 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.282384858 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276681248 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279231744 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.281285029 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.278789711 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280546144 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.279251045 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.283528553 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.279276434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.282647003 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.283784342 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.280263401 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.276906589 seconds)
  done (took 21.675334962 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2831682 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279706981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.277641884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.28052622 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27972144 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.281791011 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.280930589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.282075509 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.279648034 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.280824935 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.280041311 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.279421894 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.28115889 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.279766771 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.281250705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280902183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.275966401 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.281048686 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.284900091 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.276663103 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.282504972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.280660923 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.281133153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.281847567 seconds)
  done (took 31.925528309 seconds)
done (took 68.993236913 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.586479869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.170597018 seconds)
  done (took 9.94879681 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.282527109 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282172676 seconds)
  done (took 3.758637158 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.283435263 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.281342637 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.284082192 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.285438573 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.282767669 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.283017611 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.282881104 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.283396416 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.283468909 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283996421 seconds)
  done (took 14.027587253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.281362736 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.280519252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.280370036 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.283404951 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.284211009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.28335689 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.285094541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.283660845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.283617065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.28362255 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.286567227 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.281973094 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.283729614 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.283200646 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284163858 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.27997732 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282400396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.281903375 seconds)
  done (took 24.286168215 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.284931177 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.280813826 seconds)
  done (took 3.760020944 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.283298718 seconds)
    (2/7) benchmarking "second"...
    done (took 1.279549255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.282597403 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280320455 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.279239912 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.280156942 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.276045287 seconds)
  done (took 10.154675539 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286479378 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.457720183 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.534754766 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.882198605 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.287022567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.286626484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.147916994 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.288461481 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286922335 seconds)
  done (took 14.651183948 seconds)
done (took 81.78154035 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.342614593 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.291888343 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.589232181 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.296976073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.296738192 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.621590246 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.29534807 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.420943064 seconds)
done (took 38.353114899 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.294770662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.047445779 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.054062294 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.288507696 seconds)
  done (took 11.581709858 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.25861804 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.333519149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.270930613 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.406541268 seconds)
  done (took 18.460926719 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.400453503 seconds)
    (2/2) benchmarking "read"...
    done (took 1.613444239 seconds)
  done (took 5.212238864 seconds)
done (took 42.74259786 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290279944 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.283322382 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287575416 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.288987197 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.282077349 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.282610399 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.281797448 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.284763321 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.286020818 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.284199665 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.285839631 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.281602116 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.285114029 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285336173 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286982906 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283112713 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288796225 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.287820294 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286681905 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.28242297 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281405947 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289317428 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.287680874 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.285018249 seconds)
  done (took 32.040941814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.287792045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.280814074 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.289472164 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.286280389 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285038383 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28986262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.290034984 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.284337956 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282404047 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.28770553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285871591 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.288519765 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.284152231 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.28896749 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283717449 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.285707684 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283904039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283262195 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287337419 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.280962791 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.283556206 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285702092 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.287977827 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284560152 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.280459033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283069881 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.287561042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.280848303 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287372455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.285392405 seconds)
  done (took 39.756303525 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.295157971 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.29115092 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.289746146 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281380266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.283537735 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.286504155 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.287757821 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.29146256 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.289108294 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.288017511 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.292978551 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286269166 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.291295659 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.293133064 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.290349712 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.290701875 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.289975999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.28441404 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.293013565 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.289320616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.29275875 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.293436338 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.291148737 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.290404437 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.293018358 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.287851434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29428616 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.286966188 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.291381965 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.289753252 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.28925328 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.290674569 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.293634972 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.290536809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.292535184 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.291855165 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.298880351 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.299515553 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.287920169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.290664793 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291475605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.295333746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.292777 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.292749093 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.289873007 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.290520748 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.288348308 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.292416889 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.293849155 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.294648192 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.294445215 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.295733341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.291760819 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.29062954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.295246384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.294975176 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.288200175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.294160535 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292475543 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.292970419 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.293986992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.291881526 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.291187306 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.295231979 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.294221286 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.294871133 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.296409709 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.296547256 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.298185462 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296584159 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.295496524 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.296755255 seconds)
  done (took 94.213832865 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.296544035 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293010444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288790154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292459498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293677063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295544987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294447577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295245222 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289944239 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297994873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29568866 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292193278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291848285 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288791055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293473758 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291480082 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.290912212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288938573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.298055202 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294141069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291357504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292910537 seconds)
  done (took 29.651765514 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294565735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297924001 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.293478155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29315899 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28719236 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295444202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297886558 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297074338 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295888759 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295696589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289405344 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297328715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29429844 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301308915 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29573731 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295032024 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293943657 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292297262 seconds)
  done (took 24.515156748 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.293288328 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293109419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.299756709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29446298 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.291000216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298244449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294863654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29644446 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.295167504 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.293780801 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.297741991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294930902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.299209805 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29609504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300499791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295873472 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.299410892 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292051914 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296423031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293870198 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294892442 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301243551 seconds)
  done (took 29.720859074 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296289661 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299182857 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296826701 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295142783 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297717803 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296541737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.299525399 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295978264 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.300150688 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.298751231 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298550546 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301107032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.299462207 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296716777 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.299374643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297738243 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301900435 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296887228 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299049084 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298901185 seconds)
  done (took 27.169368443 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302542753 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302058059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303409652 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302858494 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298522731 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30248544 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301974255 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302030447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303334018 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303608736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304139376 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303889928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301114771 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303688188 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301956621 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303626159 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304759102 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303321474 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30384478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3040489 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303903206 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301632885 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305673785 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30283535 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304905018 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306729751 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304330157 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305528965 seconds)
  done (took 37.701102159 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304482068 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302392257 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.298901983 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.298888191 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.298866077 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.301879355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.301715239 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.300936799 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304000284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301919441 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.305790961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.30299696 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304278971 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.303178165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303847262 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.304476187 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306985009 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.29943461 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302095965 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301475308 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.30380619 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304355902 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.304314856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303713846 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302178405 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.304148491 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302177232 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297436572 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299993668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299063986 seconds)
  done (took 40.283290306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.317976561 seconds)
    (2/2) benchmarking "in"...
    done (took 1.320962197 seconds)
  done (took 3.848368439 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.298168297 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306251106 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.302805149 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300008938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.30145166 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.308511966 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307143778 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302516356 seconds)
  done (took 11.639471901 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.306150664 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.301233334 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301625678 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.303147365 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.305458885 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.30660494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313980047 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.331537719 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.308576165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.305086739 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.315260887 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.309608215 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305908326 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303393666 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.302992067 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304271833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.303273891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.300422612 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.304464264 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.30161388 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303678055 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306956299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307329947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305134413 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.305608865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.320321027 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329222674 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.306647268 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306319131 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.304806797 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.306473126 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.300498417 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.303770362 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.304036491 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.301710112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.30516125 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.31439289 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.332486111 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.307225078 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327486305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307957911 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.298594194 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.307285449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.301596289 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305775365 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.303546674 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.30562811 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.300518628 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.30431664 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.310815445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.314252825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303930965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.303280896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309469689 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.305611552 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30865622 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.332071105 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.31093216 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.315887725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.315522629 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.337393053 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.32758436 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312677025 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.304455971 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317879133 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.331232994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310529499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.326344557 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.301849288 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.30768354 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.312396558 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341351643 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.334781832 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.306112405 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303083343 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.305563795 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309146832 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308698179 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313227104 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.334825383 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.30727002 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307143806 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320757792 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330630067 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.309230858 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.303648697 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.307233053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.310939931 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.313351291 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319680028 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.333419835 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.305888552 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.307646067 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.305855456 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.308111604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309956608 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.308633147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309807523 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.304862265 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.309611888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310357332 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313002664 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.319513936 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312110786 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30986643 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.316049631 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.325427078 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.309732382 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.315042519 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.308123877 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308146609 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31169515 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.320430577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.305458073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311105478 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.318757414 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.309230904 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.312523778 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.308867647 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.310537168 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318390365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.336156321 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.307856945 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.30754637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.314901079 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.32259496 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310509061 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.312986444 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.310918284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.304084715 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.306402111 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.309808234 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.304156694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.307978856 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308989757 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.3137456 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.309051046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.308800478 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.307318409 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.312192257 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311883322 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.309938971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.311452547 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.315322573 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.311059859 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.313848939 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.317758076 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.330767299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.310073469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.311020172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.310269598 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312791193 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.31122269 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.312671243 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.313229504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31022329 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.311695664 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.309638213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311218477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.310335475 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307459572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.313364453 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319969249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.313717876 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.316721859 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.314968872 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.308023967 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.31321226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.308294855 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.312204752 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.310681078 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.311044931 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.315357532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.320438253 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.315464177 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.314923742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.318687453 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31550532 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314904849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311566826 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.319217795 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.324753892 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.314222379 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.322128924 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.337054674 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317575169 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.3152886 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.314154364 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.315237907 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318881261 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.317995841 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.323312438 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32789224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341534041 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.318143637 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.32023886 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.315770718 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.318255667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.319703571 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312750772 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.313677397 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314570677 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.317961781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313801848 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.311765533 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.312957217 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.316435382 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.314492776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.311618731 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.316791901 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314819896 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.317120154 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316906809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.312717638 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312252164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315215291 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.317931491 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.312253443 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.315216872 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.318219427 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.316269515 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.316739722 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.324768453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.315413974 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317711554 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316437954 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.313848221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.314792715 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.313681343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317860396 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.31962443 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324013225 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.342835085 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.317241273 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321938735 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.343546272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320181283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.323889432 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.315663935 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315558088 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3198521 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.327330791 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.31741591 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.317725065 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.318969801 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318502889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318466397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.326563025 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.335704686 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.321424896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.320028123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.325171235 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.315270403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.318527348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.323314098 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322269279 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321620285 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.316302483 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.318786048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318820662 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.321569546 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.318115928 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.322968585 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325496972 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.332420597 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.324968135 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322437021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.321255174 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.32385575 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.323815177 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.327934884 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.319011949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.323146447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334281983 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.344926184 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326233672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34498259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322132537 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325150734 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.344283696 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.324579543 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320080374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323136975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.318081229 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.321272699 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.31568816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320597438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.318425764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32116237 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.324061408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.324973827 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.322535765 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.320775334 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.319418588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.32097077 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.324008859 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.323160492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.322893252 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.325956463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322478545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.324878337 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.327577773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333188218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343064282 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.328895498 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.323758234 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.327246012 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.322796229 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.324033369 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.325073635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.331476148 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.334870254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.332887485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.33346663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.329941114 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330706574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.324086138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.333781003 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.336216339 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.323811411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.324189421 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.326780869 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.324014696 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333272158 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.347636329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.328979002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.332715809 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326229389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.328126759 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.327474341 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.323132017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329939842 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.325693635 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.337185162 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.350957787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.334664136 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32952425 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325802171 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.326945687 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.330196719 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.327029012 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333273953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.330087882 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.327725332 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.329754033 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.326941662 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.329577638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.32832298 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32893063 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.327432223 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.331382587 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335537299 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353971052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.335765389 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.330002573 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.337810646 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349582776 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33783198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.351818215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.33109733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.330171525 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33250442 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.330653887 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.33279086 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.333251647 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.329834517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.334341227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.33536504 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.332072363 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.333858858 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.33220907 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.332317353 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.332815695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34210607 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353666089 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.335220888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335102567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.327211526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.33606254 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.337637409 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.33264443 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.332434544 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.337631185 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347939138 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343863584 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.333754977 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.331368217 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336169597 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331723102 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.330553234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.331231427 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.330042214 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.332810115 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.334082252 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.330095344 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332956435 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.330499985 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.332479132 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334002148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.333772667 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.344763862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350626364 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.334305446 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330567529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.333767679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.334964742 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.333893899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.332978582 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.335410265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332800341 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.337543108 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344086156 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.341281768 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.336272328 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.335514437 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.330443824 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.335721631 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.330106935 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332783502 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.33232301 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331840117 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.334404371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.334286311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.33469315 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.33340298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.332698814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.333989232 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334484515 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336537093 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.343270179 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332587436 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.330592121 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.333588769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33473649 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.332994538 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.335928579 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.34196931 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36035309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.349680419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.34374722 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.34187598 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336365448 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340518228 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.345917496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.333456771 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.33765626 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335257084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.339681704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.337265233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.341687738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336991548 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.342106817 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.355562816 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.338366636 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345765098 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.355715582 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332515963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.34129727 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.34101406 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.333307314 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.3333154 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.335475586 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.3388221 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343249035 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.359147516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.334970106 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.336356554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.339228067 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340035656 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337795054 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.339122896 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.331149933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.337094699 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332195829 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337124962 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333504466 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.3350998 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.336424411 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.338138896 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.343690106 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.331844754 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338860809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.336916748 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.334165289 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337166933 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33677888 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332340251 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.331519692 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.338073695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336859795 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.338221713 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.336634787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336353428 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.339452267 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.338406162 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341884204 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343604491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.351669627 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.345051751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.338335593 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.336807422 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.337086702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.339901718 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336992566 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.340664065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34166261 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.336264666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.335846795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335439676 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.336058856 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.34190013 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357429904 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.359224722 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335901021 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.337627884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335072759 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.336006431 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.338388879 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.339069948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.339581585 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.342097892 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.346818152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.3415299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347149085 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363063503 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.339524487 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.343641732 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.339916569 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.346743995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.340261982 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.335309676 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.339370965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.344368761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.355273303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.338377517 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353461704 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369123154 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.357336881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340156557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340694716 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33914742 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.340750912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.342771139 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.338368486 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.340919488 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338486499 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.337194733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.344005514 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34608413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.339604947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.341604565 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.33839039 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.338752564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.339941447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.337890767 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.338518631 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338922398 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.337921128 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.339932491 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.339856676 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.33939737 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35584633 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.366809525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.337467252 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340695387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.341706541 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.343254588 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.347041928 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354253706 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.349720137 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.344244417 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3414565 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.339340747 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34048519 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.340947478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.343952501 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.343195326 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.343089158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.339294144 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.357712235 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370358275 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.35092108 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.344412502 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34314582 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.347313296 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343074523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343407458 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346102079 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.343769864 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.346210088 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346294597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.341624619 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.342422504 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.350033832 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.352555419 seconds)
  done (took 791.90826245 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340686737 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340831903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340960031 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.334675505 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339290842 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342674221 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340212339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342158608 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343176842 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.343007649 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343682304 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339940287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342773005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341082409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34359489 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34222366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344259743 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339822725 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341082784 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343337315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340025463 seconds)
  done (took 29.421635392 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.34340675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.342664059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.34294301 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346479361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341065221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.343827463 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339091531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345043674 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.346222254 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342232826 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.347262811 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342615606 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.339698143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.341804734 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343398771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344272366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.343460387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342368092 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.345781456 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343727742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345609789 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343451343 seconds)
  done (took 30.807351246 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.347152712 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.346788009 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.346761846 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.346439218 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.345460268 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.341806528 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.350476406 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.347519853 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.346191891 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.345326011 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.348468862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.346209008 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.352077573 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.351917395 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.345919969 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.346470771 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.488497198 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.346871738 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.348273598 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.348362625 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.345731417 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.35440118 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.366100207 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.34247552 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.347708544 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.347048941 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348534294 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.344902265 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.349213302 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.350483828 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.350767737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.348102338 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.345247103 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.34833929 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.350323517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.349521016 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.354231334 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.350472733 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.346247906 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.347771664 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.357727372 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.368519958 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.345527856 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.356654305 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.370366436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.349496458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.356115809 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.356062289 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.344714964 seconds)
  done (took 67.53558648 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.350363435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.348778367 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.347585651 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.344660373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.350475743 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.349513683 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.344950184 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349434262 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.34593455 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.348003209 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.35052009 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.349198543 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.345447106 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.349560071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.347477807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348377322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346564608 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351182599 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.34955058 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346821425 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.348749155 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.352879738 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.352031566 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.34966825 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352646525 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.349699868 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.349781379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.348334085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.346569471 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.346143457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.352858719 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347305836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.351110489 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.348735077 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345258064 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348562648 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.352560398 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34979623 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351285662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.346029445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.352675363 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349747635 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.351964174 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.35075186 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.346853901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.350498516 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.350106476 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.349244804 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.351388648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.352524039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.3521671 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.347087137 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.353658373 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.351289858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.349716175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.353598253 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.350783474 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.350518598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.352620203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.350751967 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351665679 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.353538853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.347747714 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.352084409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.355879059 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.350790037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.350954317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.354149754 seconds)
  done (took 93.047204492 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352746199 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.351824847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35169372 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351680033 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351061976 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.357049309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351450911 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.353281156 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.352011675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351435737 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350950089 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354605352 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.351240537 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.354518848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350762454 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35375591 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.352861208 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353783535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352013138 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357752718 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.355023115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354630873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355005065 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354713686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353515499 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.354634426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.352217718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.353148915 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348708691 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353818745 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353165248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.35242402 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.356626494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.353260014 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.354219069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.354764144 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.355585346 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357206857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.357206564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.356409403 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.355237825 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357228681 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.353477344 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.354486832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354031995 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.355085699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.354980577 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.357316418 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.355007746 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356174233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.357034121 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354014243 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354405666 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358541512 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.358411044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.357701248 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357768014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357846165 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354728558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.358391831 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354207507 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.3563544 seconds)
  done (took 85.237738411 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353732423 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.355113697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.356460731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.352340402 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.35617196 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.354649811 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353917733 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.353309843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.355346957 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.360179814 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354087508 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353870472 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353825455 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357887381 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352700906 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355021231 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352038464 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.355902421 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356645285 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35477819 seconds)
  done (took 28.362868127 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.356380107 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.358369969 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3549375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.354415385 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.359139806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.355003508 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.355087523 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358037328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354868899 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357269009 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355852822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356198581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354430873 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.357534972 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357002632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.356156503 seconds)
  done (took 22.968385444 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.357330274 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.356906267 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.360022939 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.36204193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.359560161 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.356511313 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.355527837 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35454145 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.359647057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.36147297 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.356839347 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.358528157 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.362952823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.360573981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.35633525 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.356510719 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.359211406 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.355268152 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.359552862 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.357142899 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.357316528 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.354858242 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.360100097 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.361138137 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.358716438 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.358236182 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.360071 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.355751864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.357593252 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.35995418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.357524748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.360743586 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.358903337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.358322519 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.362053239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.357854585 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359798591 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.358674754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.362872434 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.360743579 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.361214391 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.357918589 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.362170057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.36189088 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.359130574 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.362539307 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.360794748 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.360235976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.362588328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.359694659 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.36090133 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.358995972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.361376096 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.361126332 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.3575349 seconds)
  done (took 76.02457521 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360897346 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360298936 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.362105873 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.362822253 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.360791655 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.359996275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.363351914 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362590446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36176955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.362505618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361039503 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363462557 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358756905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366021354 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.362023589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364649515 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.360530677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359824133 seconds)
  done (took 25.783550852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.359083926 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35836345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.362089175 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.361695212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.358891266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365360664 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365225797 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.365546357 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362925685 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.359387862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364243532 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.366120841 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366050433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.366490682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360786156 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360914728 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.3614124 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362464313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363063556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360954839 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363392864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367539874 seconds)
  done (took 31.254162689 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.36649288 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.367577701 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.36319348 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.383514752 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.388414162 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.392669378 seconds)
  done (took 9.535615593 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37494045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367337851 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364600623 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365073996 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366094102 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361106189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363570811 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360195662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363280982 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362874983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36437761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367617444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367233257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364977181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36764398 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370250344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363089944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365386014 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368285341 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366366845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366175245 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371032681 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366050249 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366360422 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362932553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365939902 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36833007 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365524662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367111415 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367358699 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367870493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368223531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368300895 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362995351 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372447806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365389964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368807591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367931912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369645721 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365578358 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3682925 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367543415 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368843353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364927116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366870072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368153155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367908603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362431433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364512839 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368775709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370559775 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366850567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3706087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370537083 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370033098 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367505252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364849754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368197086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370957601 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369684177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367671842 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372403032 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366893605 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366242739 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370742133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371064613 seconds)
  done (took 91.53107017 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369048534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368657877 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367406172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367765454 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367548955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364719099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366290634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365413249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368943734 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368466505 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373072071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370597263 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367240362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371117322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369543431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365392221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370591079 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366806139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368799191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372227788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36684393 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369173906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370961685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369449514 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370654331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374484571 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369530329 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369802263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368624666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370509215 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368151653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369758553 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369492229 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.371743989 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371884586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368246626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370610431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371148326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366611341 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371108486 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370822429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372132085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372093621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371653012 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366141049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37316748 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367780461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372201101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368129927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371517031 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37373986 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374184322 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371401773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374547624 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370662115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372720147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371524551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371464822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371902887 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37119532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374493077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372298979 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373345213 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374765613 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369379493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374018477 seconds)
  done (took 91.715668588 seconds)
done (took 1846.870519511 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.384029606 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.430344737 seconds)
  done (took 14.094071971 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.539687702 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.494702518 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.373499076 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.404453984 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.362652396 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.391850927 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.366994066 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.366810541 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.368659266 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.374761294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37510124 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.559476094 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.419877742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.370610518 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.372994685 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.465291533 seconds)
  done (took 43.892912869 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.405219667 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.378809092 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.518122631 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.396874138 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.408443308 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.598513433 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.437096035 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.37553121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.592201246 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.425791341 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.355427169 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.403219616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.379083921 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.792264105 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.400042492 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.594550743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.679716389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.217495483 seconds)
  done (took 32.642386089 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.942548564 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.414868206 seconds)
  done (took 9.633609474 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.400204281 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.413935292 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.369685337 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.4050015 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.383492102 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.447681838 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.456209807 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.440906958 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.372836818 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.418831882 seconds)
  done (took 65.392504872 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.400726049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.38214657 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.378538042 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.376187483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.373651655 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.36281481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.378276812 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.368460158 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.884052694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.535198986 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.382002469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.385020659 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.399424968 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.376895721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.373313742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.414845461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.542808073 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.376814677 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.371746873 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.381502165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.376757282 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.49195013 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.426741618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.379193088 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.531102467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.871093661 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.382072361 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.385766043 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.512786311 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.378430022 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.379909593 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.378007475 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.380242893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.041946154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.896366166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.390311126 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.402799396 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.388547256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.370487731 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.531706425 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.38116796 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.384210705 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.367523082 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881385659 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.532911024 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.517429602 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.886900753 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.400512665 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.380078251 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.442426419 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376967657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.383601618 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.408450803 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.198908949 seconds)
  done (took 116.166182999 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.377436541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760296289 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54452881 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.401994635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.158522689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.189981308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.393301199 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.736418826 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.457620115 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.367324293 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.694553592 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964944582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3979891 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.420448642 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.590645847 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379651149 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37173861 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.249861017 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.392680859 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.373892148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.927985077 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376951228 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.375237733 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.564580786 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.408429609 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.917749681 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.186448555 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.947623859 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.400620315 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.369171937 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915898276 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.400052524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.378018057 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.371262061 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.680760689 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.829129059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820945615 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.400288983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.379504874 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.370463797 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.378230811 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916233763 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825267591 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.3953924 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.398280512 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937283201 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.397520099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.377659335 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.379601833 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585080668 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.358240153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.3782233 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.181304022 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.375500418 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.782368766 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377966357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.45304255 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945718676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.396038653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.591803582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.405411391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.377798743 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.377806366 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37883276 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.376872794 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809203685 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536613791 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.379180288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806829733 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938795007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.416950977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974376131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.296684973 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.403141787 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.481635949 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.380985443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.041909265 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966626858 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.423292074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.371445845 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79829298 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.398736656 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.690876649 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.398547214 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399349799 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95212876 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.391521361 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.416818962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.372727824 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.380520809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.046320943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.386504468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.684051807 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.439517859 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373281225 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.376563789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.42604468 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.376471335 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.399916908 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.378221254 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970372562 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.405320846 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.390037843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403816515 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.381848858 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.399721807 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.374412594 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.380929514 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601793956 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.908043714 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.401514107 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381496863 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.377028406 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.387194753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.559189464 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.381672101 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.770388973 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.400748355 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.383860624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.389891311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.210749299 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.435942477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.376111357 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.385363189 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.321553568 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591362158 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.404684449 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.391584917 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.381081607 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.402971389 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.976354207 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.407679671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.428514347 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.378443964 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151773722 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.425271715 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.382377714 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.985773537 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.387337581 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.39679774 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.389750178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.375068615 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.69638094 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.674133044 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.459107197 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.377321652 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.401860161 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.14160173 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.408322675 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528592053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.406680119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.423839463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584391968 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80810281 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.376503191 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.996692304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.378549376 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605819972 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.384820554 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722862662 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.953079447 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.403808181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384052444 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176940166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118598195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.050830845 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.383221497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.682735576 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.364975124 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.864334932 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.377645046 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.381929635 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.86003177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.388939618 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.388077092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.379592044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.382371754 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.516318884 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.564698056 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.598051513 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.389193479 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921475522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.474472348 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.377101153 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.38969248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.376789069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.729696977 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.470905419 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.389112133 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.407682493 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.381777719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.392234464 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94111353 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.338126376 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.38642388 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.543598678 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094689514 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.40550275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.388325778 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.077556613 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.691941878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983097283 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.469382384 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.77542263 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.413211474 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.43055214 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106401592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.463204202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941648369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.410013764 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.381248869 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.059016194 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.407498544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733912171 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.381962018 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.385243823 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018873687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.408498377 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.387594284 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.832797505 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.404931229 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639234308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.38722504 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.435488201 seconds)
  done (took 1127.455817992 seconds)
done (took 1410.556854857 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.385691508 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.392461167 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.36925682 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388394012 seconds)
  done (took 26.823893809 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.395663689 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.390445932 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.39284559 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.392845525 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.391921107 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.39317764 seconds)
  done (took 9.655065553 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.558843468 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.390432079 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388740811 seconds)
  done (took 19.630670608 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.63997531 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.91865266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.817167782 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.044923354 seconds)
  done (took 11.715240749 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.393419702 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.394639691 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.394702568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.394410893 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.396741131 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.397795306 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.392367403 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.392479336 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.39516888 seconds)
  done (took 13.846647833 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.117516058 seconds)
done (took 89.080003971 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.396695688 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.449060966 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.387996913 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.41060283 seconds)
    (5/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.393087085 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.369343126 seconds)
    (7/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.38708616 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.13949197 seconds)
    (9/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.37188491 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.370576487 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.524559928 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.39599968 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.499616721 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.193663128 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.406015649 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.388833325 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.703701638 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.453640991 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.311134196 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.387389059 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.411075232 seconds)
    (22/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.633651604 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.391549017 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.402281369 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.41127055 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.637843337 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.35136121 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.417199232 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 6.386862514 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.415133921 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.408462167 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.472189513 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.370598488 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.510883995 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.370441937 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.509553194 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.384177193 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.406593575 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.784762167 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.392064548 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.767064726 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.392758855 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.138908686 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.402189364 seconds)
    (45/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.07907293 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.452550044 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.378478016 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.504142882 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.694149776 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.373071461 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.672489381 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.417750825 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.84413103 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.115678863 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.414419438 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.450427826 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.385557647 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.069326544 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.512785241 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.476892569 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.995527075 seconds)
    (62/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.823630234 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.172941399 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.444894949 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.413260534 seconds)
    (66/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.474340311 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.417924277 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.460889921 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.41296227 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.797273349 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.384858115 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.410830967 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.416171835 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.501636766 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.745293104 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.192701075 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.096331692 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.334020134 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.399052985 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.190944762 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.417815984 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.459239998 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.497427446 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.157242293 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.394931101 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.645832761 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.174884928 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.474192622 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.851191405 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.416144925 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.517131958 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.40653641 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.377707784 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.17739108 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.271013481 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.150166844 seconds)
    (97/309) benchmarking ("sort", Float64, false)...
    done (took 5.87618886 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.708703397 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.499864408 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.373101299 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.587709585 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.500798712 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.374591054 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.349465828 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.537928662 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.400031657 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.989870362 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.390578259 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.058893961 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.529247746 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.417594471 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.393444557 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.486416657 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 1.931199326 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.434682764 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.476523468 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.456607285 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.67009774 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 5.012168789 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.549810688 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.399557552 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.449108814 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.356253306 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.659244701 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.209585474 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.457186651 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.401852948 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.482387356 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.498868153 seconds)
    (130/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.378760016 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.425869385 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.649547809 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.491513615 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.375242553 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.428782811 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.418225233 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.376406993 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.40361449 seconds)
    (139/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.360368651 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.043646735 seconds)
    (141/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.381616155 seconds)
    (142/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.036480384 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.920603252 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.563400297 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.405842882 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.853978713 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.783139804 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.422724203 seconds)
    (149/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.373832302 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.45699665 seconds)
    (151/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.389665949 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.142088893 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.386553847 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.851491181 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.42809022 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.400307104 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.362685664 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.487403817 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.461325878 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.381117822 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.632739215 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.527785077 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.812796639 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.384333241 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.486725306 seconds)
    (166/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.413218613 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.402029358 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.408753964 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.85946489 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.400885617 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.439399497 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.822485699 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.429252395 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.304275582 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.60678943 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.383722035 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.431691517 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.579361746 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.460925886 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.43054198 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.518435378 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.416510346 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.43843468 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.39456908 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.544944389 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.530023723 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.434617847 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.07260122 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.791966568 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.403734879 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.851785217 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.527310053 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.400552496 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.404366172 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.426310464 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.46299309 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.006221378 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.523605158 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.384157231 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.442078423 seconds)
    (201/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.480276017 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.015119139 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.422342971 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.462657792 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.519164442 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.423690849 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.500834328 seconds)
    (208/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.405791184 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.462870997 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.424528624 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.611312081 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.026847388 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.484745007 seconds)
    (214/309) benchmarking ("sort", Int8, false)...
    done (took 4.433486122 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.460691184 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.973803097 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.155711293 seconds)
    (218/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.199656711 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.444219276 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.415568051 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.421951092 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.426098882 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.41717628 seconds)
    (224/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.381175565 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.397610604 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.454128654 seconds)
    (227/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.390165032 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.127931672 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.858478439 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.398257364 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.220013775 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.402356061 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.495416341 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.948021355 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.410358981 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.388061736 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.401741657 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.396602394 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.39091306 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.50741694 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.523342806 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.384969651 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.430368924 seconds)
    (244/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.07687435 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.327175981 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.430713648 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.616273332 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.027694078 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.441806994 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.501138638 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.420307309 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 5.024046202 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.798119312 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.471950262 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.395502646 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.408542449 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.426672432 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.676287514 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.018271986 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.389210848 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.20672439 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.428953893 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.407183476 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.414736403 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.427229694 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.08573935 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.796273126 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.411080878 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.134473217 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.501845701 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.217967159 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.412761208 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.487859764 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.506109182 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.386244895 seconds)
    (276/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.511110314 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.361907573 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.525468261 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.853371341 seconds)
    (280/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.420827606 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.683319323 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.259325869 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.800676344 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.406481616 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.459153997 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.83507557 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.437659257 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.703384798 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.454726512 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.415125305 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.444416615 seconds)
    (292/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.826728543 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.41156531 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.395021319 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.493916831 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.385833418 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.979849086 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.412664123 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.549989923 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.42766218 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.012693422 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.439582975 seconds)
    (303/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.411541597 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.414389514 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.155721357 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.616211155 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.140217811 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.428821734 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.497143858 seconds)
  done (took 1085.641430473 seconds)
done (took 1086.941681385 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.440122936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432087859 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.416899436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.436873939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.52586012 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.441403545 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.427707721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.418371265 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.463746886 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.465249419 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.414065036 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.442198381 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.417945946 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.414379503 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.41443319 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432963527 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.673612644 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.418391005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.431622638 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.424771398 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.431210458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.412707789 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.467084617 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.441682342 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.419529873 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.418499383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.421460449 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.437542077 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.525746003 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.420314199 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.421649218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.425268094 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.641555656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.414645945 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.411729707 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.43495083 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.42947355 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.42758182 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.422869776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.45036929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.127783612 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.437950885 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.418753386 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.419146049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.420596453 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.420560366 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.416728893 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.425218721 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431248416 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432935456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.118680282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.453342373 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.421316465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.419958729 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.42956922 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.417066309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.422945806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43691027 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.437305695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437021985 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.640877875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.424151004 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.422045314 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.434959501 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.428416758 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.156243161 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.435484518 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.423816014 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.129997409 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.446728494 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.159425548 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.44735908 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.422196331 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.435471471 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.450992171 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.645851847 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.418747773 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.418727951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.428086597 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.415115899 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.430908017 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433848349 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.422495641 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.422341875 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435460642 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.446168685 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.430276944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.420615803 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.428187385 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.440288034 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.428187999 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.432353997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.42623029 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.414020424 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.429519176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.422352308 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.423104326 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.424592901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.427328643 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.431349603 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.129905883 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459678787 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.419012076 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.417855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.421138944 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.435135114 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.133104798 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.44132178 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.4421592 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.468532611 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.426170593 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.633282718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.423725511 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43714297 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.432858753 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426802752 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.416609941 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.711116515 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.133460645 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.456136415 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.422590287 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.421707828 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441661344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.425435638 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.419773662 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.731678398 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.433467112 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437527848 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.541694207 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.435052615 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.452778296 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.419697752 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.422763938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.451221508 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443275339 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.458176617 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.426325381 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.441158134 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.440767823 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.418567063 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.435100122 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.434482859 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.42537467 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.429832869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.419600233 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.451968852 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439140033 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438764747 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.445696057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.545377478 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.424080904 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.727152228 seconds)
done (took 242.817122553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.485909564 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.413429787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.513503872 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.420689712 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.528133881 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.528506314 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.417796567 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.420182327 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.41687894 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.796939154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.418041551 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.419283737 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.415016593 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.420273152 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.505756334 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.421925592 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.419380158 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.763557116 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.423193945 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.500100699 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.418291485 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.4217821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.420839257 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.834442041 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.418748295 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.421296118 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.495621966 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.423542199 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.770345589 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.419124032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.416770498 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.774263842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.512932214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.449518672 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.43255579 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.418572863 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.530181174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.45604732 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.500764159 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.503104267 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.518359274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.453979491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.419835591 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.423572471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.429606492 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.424084651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.421607779 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.449273977 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.422578921 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.765994834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.435184455 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.428352724 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.424859134 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.420602247 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.443649181 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.420859522 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424724802 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.521543371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.425815348 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.490022589 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.834880369 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.803434932 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.425174022 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.423698073 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.422270726 seconds)
  done (took 154.503785213 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.492476491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.50213612 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.556840045 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.454918418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.477138461 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.560307759 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.451889935 seconds)
  done (took 11.825331133 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434425799 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426290744 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.474891305 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.47490804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.424278563 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.573993259 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424321581 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.437386389 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.422610693 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.481627325 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423437278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.42610481 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.433842394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.417372881 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.473251473 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.437017255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.53964013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.430475573 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.425579757 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5774879 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421699156 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.433985243 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.47967008 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438323317 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426053163 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.43643192 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.086276672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425043711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420314162 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.427371554 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425066716 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.465270264 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429455703 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.424919998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423805157 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544620437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.429577941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427892423 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.428947873 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.425019811 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.428575814 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.430337496 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.42675346 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.426034285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.425002781 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.451556665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.4300467 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.429226474 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.42742413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.428765348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.47618689 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427922215 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.422026528 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.427272224 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.487141933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438642064 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426475233 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.42615877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42838795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.42568482 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.581959397 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.478285639 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.432139378 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.475235906 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430577384 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431665816 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426719904 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.426540025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484398973 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428473298 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.478546631 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.425167615 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.585523662 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.454993779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.430969103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.432717346 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.434888989 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429360533 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.424021091 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.435327358 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.428416499 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.432022811 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.437498098 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.426071471 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426932581 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535566625 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.561018396 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.426560832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.441617254 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.434386694 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.426900073 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.483281595 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.434897789 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.42783852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481628336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.547692995 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.482809883 seconds)
  done (took 162.563922316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.442144929 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.438870912 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.433635111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.448967751 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.433829455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.431473644 seconds)
  done (took 9.963956073 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.434806241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.432002424 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.432217869 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.431986412 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.434392555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.431709857 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.42998014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436693007 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.435826553 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.430678476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.432739371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.432190208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.434506259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.432711516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.435560485 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.433167073 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.434974899 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428741865 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.435018617 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.434304154 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.541927464 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.436713893 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434343698 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.43622935 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.44046863 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.437046246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.441511786 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.432001901 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.432312233 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.436655938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.458358137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.442966417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.43741862 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.4447782 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.439541079 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.444691982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.441695799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.434284526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.429721362 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.434104622 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.436329064 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434813668 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.434059706 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.435093263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.438132969 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.445756035 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.446912023 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.445336984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.435789496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.43612647 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.437054542 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.433105234 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.434700841 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.438252917 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.436560308 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4638849 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.439361758 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.435985525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.43567753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.440730169 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.438262074 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.435022039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439889202 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.440187916 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.434586054 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.433950565 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.436240784 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439902072 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941489519 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.432818166 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.435646931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.433413067 seconds)
  done (took 106.404098267 seconds)
done (took 446.584504253 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.823033279 seconds)
  done (took 8.156450026 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.749696552 seconds)
  done (took 8.092483095 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.311846025 seconds)
  done (took 27.65865021 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.53912897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.438470445 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.457382444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.441551011 seconds)
  done (took 27.223836988 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.786503675 seconds)
  done (took 8.128378738 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.433263037 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.443537177 seconds)
  done (took 14.216976366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.88727059 seconds)
  done (took 8.227787641 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.143360939 seconds)
  done (took 8.48763085 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.442414046 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.460595178 seconds)
  done (took 14.519704447 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.426848314 seconds)
  done (took 7.769709832 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.903949704 seconds)
  done (took 9.249220493 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.444099492 seconds)
  done (took 7.790970463 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.460356012 seconds)
  done (took 7.799059761 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 10.250386094 seconds)
  done (took 11.595707827 seconds)
done (took 170.250334987 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.431379474 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.433119962 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.435673485 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.433247004 seconds)
  done (took 27.067652434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.478434302 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.471461617 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.474360879 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.484626883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.475885355 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.472891301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.468580947 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.464613882 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.485075796 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.476645726 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.470597663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.476862606 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.476345884 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.4729349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.477340202 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.476810565 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.487662525 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.476526677 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.464103956 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.476661602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.444151193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.48548439 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.481776745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.444034372 seconds)
  done (took 36.709497808 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.966621304 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.514412734 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.599219104 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.493793462 seconds)
  done (took 7.919705242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.494242143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.499294338 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.508110766 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.545622053 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.574655841 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.506772781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.46818746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.471343116 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.448646869 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.499868668 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.574469341 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.512324361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.59135603 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.442654549 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.631219855 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.444748718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.445930736 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.491851779 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.543751954 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.559453665 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.444052775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490207449 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.500357167 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.507549898 seconds)
  done (took 37.54361655 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.449093171 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.454423143 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.440325467 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.448272656 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.45221577 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.444970696 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.448820303 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.440099515 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.439407686 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.44652126 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.437139614 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.455158928 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.445135644 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.437894647 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.454474644 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.44506542 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.449833625 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.442735574 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.442958728 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.448749243 seconds)
  done (took 30.272873304 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.439706955 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.298636552 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.789307172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.699139433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.445640881 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.438979004 seconds)
  done (took 28.456378056 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.538070744 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.728953186 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.451463212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.918198673 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030033992 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.470031744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.442894322 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.750447271 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.179484715 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.154499503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.525646412 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.537288535 seconds)
  done (took 22.075358244 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.459801686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.446304837 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.459271473 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.463142887 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.517178829 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.477817084 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.451251033 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.439416679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.520413235 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.545536377 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.473886875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.517992571 seconds)
  done (took 39.122455953 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532229587 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488245783 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.544794601 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468249615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218901508 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650063614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461669632 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.962312805 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.442859196 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713036382 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442283204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536059582 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699223681 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441559481 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444078121 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.595242411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686481343 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044852648 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447503933 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308577601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470187139 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450418389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.348021978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.485520411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6531881 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.587623679 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.700611535 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.222079975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80860357 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456849469 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452005403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440789854 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179292147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558146753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453984748 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450586984 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.997132487 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.447956221 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.231449154 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466405694 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45420748 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453028335 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442512607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378575491 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449135836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94695851 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.444923233 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.152870973 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441460101 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454330713 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536531628 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.445032615 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021377414 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.524335525 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.443557911 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.439905356 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546597937 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036573486 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.857515391 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4595732 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.383486809 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.462057458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298436919 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193705332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.568579516 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.447665914 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447043555 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388092435 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.284065865 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466191081 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588813235 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.461592059 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141306501 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293180435 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46898881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392362849 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079546143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463457415 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.384367631 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674906414 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221180495 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390904354 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.393477376 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378459362 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268814556 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450275747 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.97561148 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462596749 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968710647 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.455162742 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460763426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468585278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66814667 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.326222239 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447268456 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.450137669 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5729774 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466543027 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93614363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390692503 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.450809637 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705606166 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.659231703 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447326836 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.613119335 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7169765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445299643 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.473931795 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445042416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.485927252 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.15938682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482798102 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.883994849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470718067 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.224905682 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292423816 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453716236 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.554914779 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.451850785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777706656 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.334182273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333803474 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517614048 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45595807 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450677569 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343711713 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052180928 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.333780719 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.447313084 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460804908 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468037741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.451415956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445965795 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.463408233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471923492 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.238486842 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672328617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464287652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729638236 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383496244 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596115286 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494269571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.670300171 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.932018979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.480043147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714759395 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460284186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457300657 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46934643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467051523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549296337 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473264318 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.457821826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717872124 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.453720321 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.452971474 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362125125 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.238372962 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451806782 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.458377475 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449409527 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179276105 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457244353 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454267652 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345701074 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.462851857 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51752195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45638901 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461037633 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.74481341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504008402 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.455114945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.453713777 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684215537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463215881 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.346651453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541150758 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.697013047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177576062 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494469793 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.389411712 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.163723853 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.146509941 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454180253 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650069825 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450683306 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461091915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465227089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453868157 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178188659 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481370774 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.273875329 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.465513917 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466672049 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.457771778 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452311406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.657135782 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.901197971 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477916798 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470112924 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597621254 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.4689208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.393665144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969332175 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459996523 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.453365573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.23426276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494298155 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.272445041 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994297895 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716593791 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459236732 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463766034 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.414352125 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.49886979 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.457458772 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462340642 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474231026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.47026312 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467635531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.464365691 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.292681371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.869850586 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021398031 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323772551 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155405133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563935451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.45819564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.370646489 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954292128 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390665313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115213731 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698231068 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978309028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450309863 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700881152 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.9455797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.44766021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475829442 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682929955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534098447 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.463367617 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476913686 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671195453 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492949222 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459176992 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403688726 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.733517324 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756243629 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459426033 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538891616 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958959832 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470221313 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.244432267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.497400723 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.05253399 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69511696 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090080361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.883708099 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.457852561 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467189629 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99435861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463261584 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.989063389 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227411307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.484927431 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.706029448 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397178294 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470313088 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.467247681 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.453706099 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.26636757 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.473013337 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.72234652 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469087507 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391624934 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45753204 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132577862 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.341029164 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.466877019 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45644483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371087197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475171896 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83598507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.48236084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.756653558 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493671109 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.396310845 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390977781 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.154092105 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470079389 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446741932 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080934361 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.469266159 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471998846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483154001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317675957 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717008447 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.473424617 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183619999 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714912376 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461439653 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511399026 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.557924021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47940712 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.449487351 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.358475281 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697118971 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491375041 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683995669 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.624437714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.358753672 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467043281 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698890764 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.356821478 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.463985523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804005075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.196891733 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.47399395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326775212 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504961838 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477855984 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.515475733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.464202014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491176629 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550929151 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474709326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.471036453 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.475891542 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667933576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464761392 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468220772 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.477959778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557557475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.964755255 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.754235544 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.243372371 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191007418 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359426754 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209085295 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504442191 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462320669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465879255 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411452738 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615234214 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992329064 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73794787 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587783842 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.487078804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493497463 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461049315 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479716849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685352834 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73924164 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440186401 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469248782 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259938625 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.345055838 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48044115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.677596249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084289325 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160824015 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590817555 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471100246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966056739 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740635976 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554909558 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462071656 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06190928 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.489190182 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.962356474 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.490822393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465815038 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642463272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477427175 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210983833 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495079485 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.626271738 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.24195882 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406909129 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729396336 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.08815309 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483302884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199770599 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369961573 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739832947 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535494257 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475761606 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.578128571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611421731 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.476726346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.364865231 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468578482 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315243203 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.177723971 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473113205 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194481831 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755831557 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.462765621 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.479023612 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496344103 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.474684615 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689498276 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281924676 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695153438 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477988915 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480322249 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.041518711 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194727136 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506794087 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408943835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.470156639 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778715452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732807841 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489939222 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922117848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.181840839 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142463477 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.448909143 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49168711 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482514992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349600818 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208348058 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.798427169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100050262 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.136736374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486591605 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747855613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.475329112 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.479653205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75191213 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.472265411 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.481609948 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489545707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.198262785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.465393572 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.50479099 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446446906 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.411510758 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.699292648 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509784502 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417746819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471550276 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.685831682 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47091047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599352578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480342546 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.466115205 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489442992 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.211167089 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780109672 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.474571302 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.454453882 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.472062981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.496680154 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579072517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769929024 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475965291 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.147366345 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.819248895 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.731166514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.485642336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.458956948 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.473746236 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471940256 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229833885 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.523084309 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.480046418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152594104 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.488206507 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.491700346 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.477183736 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.68659584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683322494 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480479358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493781548 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484657703 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492795522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.372075489 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274299598 seconds)
  done (took 1728.706306456 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470254482 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.534570568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.489808779 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.565925882 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506429109 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.542768598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.553510908 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.544759454 seconds)
  done (took 53.588692176 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.490757604 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.641400969 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.504757732 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.474680058 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.509280211 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.486759323 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.056471565 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.51294069 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.483665952 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.487673137 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.476606357 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.49547668 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.281129095 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.489121803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.484516305 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.476854703 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.491769766 seconds)
  done (took 68.228836707 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.482115089 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.77407197 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.539181732 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.476435271 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.754855046 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.495505548 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.615416451 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.561837207 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.487275161 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.899348479 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.13606331 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.502025195 seconds)
  done (took 84.104633197 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.485380135 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.486208754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.487020512 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.484731655 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.484702077 seconds)
  done (took 8.810598175 seconds)
done (took 2173.947759499 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.719501345 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.368552324 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.2286939 seconds)
  done (took 5.978120267 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.623956475 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.672540475 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.843807699 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.805648662 seconds)
  done (took 8.329495973 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.755246257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.858277143 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.665532281 seconds)
  done (took 6.663084428 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.250812937 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.479575357 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.505135253 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.474801013 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.483485647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.480411263 seconds)
  done (took 20.822751017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.48069918 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.482434815 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.477888375 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.480494584 seconds)
  done (took 7.306280975 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.453846446 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.203843948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.455084498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.469864347 seconds)
  done (took 18.965859436 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.226681671 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.242632379 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.223304127 seconds)
  done (took 8.076613676 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.483601098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.330883459 seconds)
  done (took 10.196415745 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.785104288 seconds)
  done (took 3.171344242 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.610103475 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.812364767 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.781510272 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.684390693 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.164519489 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.51216173 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.646943859 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.097603148 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.646380215 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.40258221 seconds)
  done (took 35.744036443 seconds)
done (took 144.589430692 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.062771354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.502301909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.686042222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.072761503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.710888402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.681395161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.751005272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.039610823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.91270629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.539999651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.040999939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.707045406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927217471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.503365856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.928616984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.876785419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.709745318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.116776438 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.479359225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.47940144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.751905402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.672739066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.866529139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.062807926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.717352017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.638500307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.252452794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.881102321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.48130371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.48462967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.641604461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481109093 seconds)
  done (took 207.045728623 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.485066154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.478565586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.481872269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.489812621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.479487204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.488873717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.505571668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.502814425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.491917472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.497675783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.481014388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.502288563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.48117346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.48119877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.480432957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.49798239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.479817727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.487935073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.500247088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.481544926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481441042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.501785022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.482352272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.499549528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.488757012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.48180753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.478564857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.480921932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.481162703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.4801152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489923835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.517840178 seconds)
  done (took 209.030060014 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.482182925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.487549638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.483244014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.487857269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.486397053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491804199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.481249687 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.482043896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514861122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.489318645 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.495657148 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.481732049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.485893935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.51600105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483510152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.49671951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.482757443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.489911389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.512138621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.506241941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481956722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.481225678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.50692885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.494574285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.506531578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.484499612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.50366788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.482667866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.481371333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.482316642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.491003711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.501876948 seconds)
  done (took 209.126303216 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.679351211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.489898374 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.490390999 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429605621 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.490677794 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.490595718 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.486251266 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.688373471 seconds)
  done (took 15.634577024 seconds)
done (took 642.220256791 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.078692379 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.767325065 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.71638756 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.517378514 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.506378654 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.546566815 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.511374847 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.727134602 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.537945158 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.747394203 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.990497351 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.541074072 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.146215235 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.520671977 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.818989561 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.634882882 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.470424886 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.636000771 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.894791189 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.210448462 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.815244911 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.220008761 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.752627952 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.518672546 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.07796943 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.213843638 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.521138812 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.455005123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.532181111 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.878338931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.495399295 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.777707026 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.608309908 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.602953904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.660038208 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.638692401 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.775919936 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.603485794 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.752293356 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.967703993 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.179999485 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.292965996 seconds)
  done (took 103.253797535 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.476692192 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.47682794 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.47837669 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.47660967 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.480155457 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.477080513 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.474297245 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.474943583 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.476572707 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.473324058 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.476591953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.480467558 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.476605207 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.479587119 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.477833835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.476906503 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.476534749 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.481965863 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.476887062 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.476462366 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.477772999 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.478788596 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.477439168 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.476154752 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.47842082 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.476404931 seconds)
  done (took 39.805450945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.498199862 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.784433449 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.985533104 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.508437101 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.499737158 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.503355503 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.598379173 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.505314442 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.500644322 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.504173757 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.694987752 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.503324696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.537011296 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.006054382 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.501210819 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.496934272 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.495441959 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.499351914 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.791718279 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.509759113 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.61946742 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.49856394 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.597040031 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.511841309 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.524676162 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.499172499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.503871113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.050218988 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.526392326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.689487575 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.509395902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.600413113 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.996186501 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.000784632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.508914456 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.508191093 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.498189735 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.696570747 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.507996249 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.499918862 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.599849773 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.509439381 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.002631197 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.18358597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.531091757 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.503459191 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.078500821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.728682995 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.830949368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.516751297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028419339 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.511394793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.50213276 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.503102508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.827710166 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.516658309 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.50161306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104898461 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.534481468 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.602789472 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.509984171 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.504088023 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.806337337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.5101545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.791391119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.510009931 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.512961033 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.525183113 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.001882879 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.514522476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.20454929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.531650622 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.500522534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.694910944 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.800832646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.1356716 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.533735469 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.812436535 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.017707746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.630269991 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.510257944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.041731756 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.63415223 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.512481263 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.506675116 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.508388144 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.501118765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.547448423 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.602986368 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.14080363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.216874197 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.132720945 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.632291903 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.522354206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.502476725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.111566161 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.531760771 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.506463828 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.994803598 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.207267279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.53806249 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.508984815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.208112884 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.536880847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.606258801 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.51497883 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.002115426 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.511191711 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.558070077 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.504481996 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.513314031 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.535831284 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.606305548 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.516270521 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.505310423 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.182277692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.734862042 seconds)
  done (took 198.787949825 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.502329189 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.498075843 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.495659918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.496893551 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.499327461 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.503163874 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.500097105 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.497355715 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.502499734 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.499254441 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.496359226 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.497725752 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.498434011 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.504861554 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.510011019 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.507458152 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.111897135 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.502294824 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.509436693 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.498030438 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.345979154 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.505968477 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.511059483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.496310662 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.502727156 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.498803077 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.512583919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.50203383 seconds)
  done (took 156.913698549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.503231429 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.265141621 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.539743264 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.677370738 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.53832515 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.500545903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.673553978 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.588602573 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.535904614 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.504866276 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.504236429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.908799294 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.511896099 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.145000087 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.754628344 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.706348295 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.155218949 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.527724832 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.502635436 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.504696851 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.680784211 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.520330163 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.912149478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.271874454 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.537422819 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.262994065 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.496961879 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.507376006 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.506535481 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.266097718 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.538723651 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.914930325 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.621520507 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.594334384 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.294818898 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.175505564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.159018812 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.701215453 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.515655177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.504075658 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.506118816 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.490547362 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.238029321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.528456657 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.509101125 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.254816943 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.538464069 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.510263279 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.510084379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.50662459 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.586060077 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.614556243 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.948983797 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.280518437 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.639317284 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.527183029 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.67725242 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.926236407 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.510279332 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.148449208 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.491875628 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.269561932 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.541665542 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.489980624 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.509647604 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.513168939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.705369582 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.690485333 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.158236898 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.528357459 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.148681253 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.728100657 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.513442306 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.507342953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.509092501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.273685809 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.180228957 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.727085476 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.692445547 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.771831559 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.50107379 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507978856 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.491086682 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.613555651 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.516717236 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.272697315 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.188220283 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.534145747 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.512477905 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.511271751 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.508833413 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.740379052 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.303637842 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.643146632 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.201877454 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.950174327 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929930258 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.517096871 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.587101726 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.536146384 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.922247862 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.516087576 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.588302617 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.993581694 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.923405878 seconds)
  done (took 183.849997437 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.810488854 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.89695161 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.617449939 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.679551699 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.21348315 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.16266041 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.957735647 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.680594466 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.651897094 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.829996608 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.857374461 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.602766632 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.730198248 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.615383784 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.319772583 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.622740098 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.649661444 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.684167845 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.655337428 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.650966594 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268720633 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.861615204 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.733153487 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.604966751 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.625459702 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.417135245 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.162960308 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.087275363 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.728583459 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.015700131 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.105615444 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.757460792 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.687060645 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.365314955 seconds)
  done (took 73.722679729 seconds)
done (took 757.726007773 seconds)
SAVING RESULT...
DONE!
