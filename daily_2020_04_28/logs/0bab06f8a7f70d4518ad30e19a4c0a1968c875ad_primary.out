cset: moving following pidspec: 19518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353611619 seconds)
loading group "string"... done (took 0.578607108 seconds)
loading group "linalg"... done (took 8.109342244 seconds)
loading group "parallel"... done (took 0.170506946 seconds)
loading group "find"... done (took 1.231930431 seconds)
loading group "tuple"... done (took 1.908408741 seconds)
loading group "dates"... done (took 1.382486932 seconds)
loading group "micro"... done (took 0.219134534 seconds)
loading group "io"... done (took 0.930701976 seconds)
loading group "scalar"... done (took 40.051867233 seconds)
loading group "sparse"... done (took 12.26383605 seconds)
loading group "broadcast"... done (took 0.95826047 seconds)
loading group "union"... done (took 13.355320554 seconds)
loading group "simd"... done (took 4.675645311 seconds)
loading group "random"... done (took 9.231833187 seconds)
loading group "problem"... done (took 1.761474042 seconds)
loading group "array"... done (took 21.430099986 seconds)
loading group "misc"... done (took 1.739617521 seconds)
loading group "sort"... done (took 3.398980404 seconds)
loading group "collection"... done (took 17.814552498 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557529622 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138382758 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147298224 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134471973 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163765469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131903888 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139089928 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098621705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.938640595 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165162294 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127591791 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424378127 seconds)
done (took 5.694976664 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.188897053 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094111382 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095678149 seconds)
  done (took 1.378726479 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08206329 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144535357 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083226598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083634306 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083528963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082994724 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082877709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.083066753 seconds)
  done (took 1.828014864 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088725547 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084816571 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081603773 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.083870904 seconds)
  done (took 1.523158617 seconds)
done (took 6.201853441 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802948873 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232646101 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203235042 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431338504 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152512704 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.200972567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670846781 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342331469 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21220726 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094011234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126683827 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363258906 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142794122 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665402398 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.097156032 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.111830469 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.155078818 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425086239 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087439993 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100779999 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108811308 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.148433812 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104903062 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092557733 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166320847 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086340595 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157767842 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.100011157 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084871295 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.234054216 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192253531 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677684878 seconds)
  done (took 10.995300723 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114334693 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114311943 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084986431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14183118 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.11517436 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086080938 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091826554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08403987 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108241529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144898599 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.107951075 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121229998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082379317 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083389121 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097860521 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225737087 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.098435643 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101791855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084418013 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095661912 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124837868 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095596824 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095335142 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09564423 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.145717985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200975257 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116263482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116499486 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082976457 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09839123 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130647222 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144126218 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0846728 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080102469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140802773 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110866702 seconds)
  done (took 5.275675657 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.999398731 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.165528683 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108064919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151560772 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083447758 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128339559 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086541632 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099957521 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228099504 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.455403207 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639531607 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.155170705 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1312327 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.124703396 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08729873 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087792332 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082168516 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106993515 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083656284 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532240382 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.117700352 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125943587 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099630426 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088297154 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087929774 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.082696592 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090036633 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081005231 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084846499 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127109665 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089815007 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.312831573 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139015322 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084424012 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.972017167 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.186770096 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087765992 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121188697 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186687481 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109356266 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.159701005 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085944025 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08211135 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179504987 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081450205 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088336353 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083176536 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101618758 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121309126 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136686056 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082281634 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08337076 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184174649 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082158978 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09612524 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.119361342 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168948915 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080179704 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302476459 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104195621 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085539538 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078866507 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176974751 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129932049 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081762249 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081266489 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082403598 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082033885 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373530311 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079723381 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898438417 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085354513 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093631447 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083710579 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084810189 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088156398 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087911405 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103343487 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080849181 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087155781 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083450648 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079840138 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081260571 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093278999 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39488585 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080915098 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07763393 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085551457 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078682693 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104458482 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109822173 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080318124 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079739427 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114401897 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081662397 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081100775 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082547454 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.0938811 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084441611 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127031033 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081481106 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.304893917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10596785 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119300049 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08776325 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116944171 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098571155 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087246315 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.485854059 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082801509 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089971689 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083550846 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08581664 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083839421 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098287432 seconds)
  done (took 23.657161256 seconds)
done (took 42.112660346 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.265421524 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083974216 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08473532 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084349151 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084286626 seconds)
  done (took 1.894591933 seconds)
done (took 3.167895523 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141257102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114921734 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080603883 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116137676 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080171998 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116766097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116101117 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092719452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115920894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080630648 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113224155 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080684367 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081105532 seconds)
  done (took 2.619141136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096412031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097380434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085492071 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09850498 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078879048 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098486582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097085684 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105415116 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098162353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088870717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079324911 seconds)
  done (took 2.289902734 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09540441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096989017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08359497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095498699 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079608506 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094860555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095322094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098600748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095266938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08832286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07743688 seconds)
  done (took 2.263626211 seconds)
done (took 8.43370721 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09072019 seconds)
  done (took 1.342421121 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545604455 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.603510768 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092862221 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117618298 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.208793104 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125947363 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.25477086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.100540405 seconds)
  done (took 8.474936069 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.119856098 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087414007 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088410963 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087231232 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087384045 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086390801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086154006 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088505298 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086332181 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086358776 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084786697 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08782258 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084589304 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084938343 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088156315 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085188484 seconds)
  done (took 2.755046295 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112073617 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111660905 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089372738 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090870696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088403281 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.087801933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090096801 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089734052 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087081048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088570241 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09134169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09018542 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088338513 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079981898 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090269266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092200046 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086966918 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090334872 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091252194 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092154338 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091519853 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.07949146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087682341 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089961149 seconds)
  done (took 3.542421351 seconds)
done (took 17.378590534 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121457061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085712871 seconds)
  done (took 1.462924521 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093215337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09408951 seconds)
  done (took 1.454132865 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093477267 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078444183 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.101028736 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090027344 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080417764 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080829658 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100949076 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082319023 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082015165 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081460678 seconds)
  done (took 2.13961343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080665796 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088376394 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.084565633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094999216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088207521 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079134316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087295938 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082314222 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.089957208 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076524489 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085910265 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098650032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086192338 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100499441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087727306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083674241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08538991 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082852148 seconds)
  done (took 2.830409596 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079392791 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080148589 seconds)
  done (took 1.432763792 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079608613 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076956099 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079916699 seconds)
    (4/7) benchmarking "year"...
    done (took 0.081134515 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078407368 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077897174 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07876036 seconds)
  done (took 1.819000321 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.421286692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135886967 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340147783 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088060696 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.097626729 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.280300492 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082449652 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087908049 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088020434 seconds)
  done (took 2.934703941 seconds)
done (took 15.349421417 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096251598 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100540074 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111951537 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.399719988 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109520848 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083286343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132174417 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197814746 seconds)
done (took 2.510661942 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226751084 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.798655889 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.500936719 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227904274 seconds)
  done (took 2.798863587 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351572798 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.102908334 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075300112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083486338 seconds)
  done (took 1.899614037 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082730423 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083611312 seconds)
  done (took 1.446348767 seconds)
done (took 7.648780539 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080462413 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.194159398 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.104695172 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079911458 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077587759 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080239021 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077872082 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078214012 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080124939 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078308621 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082655525 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080801152 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081063952 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082199284 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080050387 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079964119 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082049974 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080094352 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0800077 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079624479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081910962 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079665205 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079478883 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079339205 seconds)
  done (took 3.37307985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096570531 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079743702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083632149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084092605 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081942169 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083970499 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083954151 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079987002 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084189353 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082259269 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082044049 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081921376 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083326313 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084180569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084408269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084611704 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085814153 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082537309 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085051757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084436718 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086537249 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082161964 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084658919 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086245546 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083714117 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084223054 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084305228 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081924785 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086435302 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084047307 seconds)
  done (took 3.812942865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08383229 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076535823 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077391212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08588872 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077588907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078276035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07869772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07919867 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079471648 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078746439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07975347 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07760558 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077586327 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078999962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0794718 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083193562 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096703884 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078679775 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07828234 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079359311 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085868341 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078677451 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07869681 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078467086 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078194991 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078355979 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07900406 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078429143 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079673037 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078572539 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082631955 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083288116 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079146839 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087356822 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083062143 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078102643 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083470158 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078432269 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079301596 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078652924 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078457007 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078515183 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078473066 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087613307 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079015063 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079843404 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078644248 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079606155 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079077226 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080987715 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078177564 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078697164 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080542519 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079539602 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084009004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078613002 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079648854 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079187061 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079288786 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078996495 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07829453 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078679001 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081640816 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079271698 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096209566 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088100865 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078724207 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080131585 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079648466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082351572 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080366653 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094562264 seconds)
  done (took 7.098835679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100157196 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100490503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080868707 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081164316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077081274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079145894 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085340733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079355021 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081848993 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099562041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080121383 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08175691 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08207556 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084326395 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080177427 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08205669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088818023 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077457212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079390977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083908279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079708636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085251286 seconds)
  done (took 3.154630704 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161411679 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083970529 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.121495358 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090663489 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085634782 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090479767 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085555569 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085674125 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085897925 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083682132 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083368346 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08562742 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086485455 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083638286 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083440899 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083335697 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086132763 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083901973 seconds)
  done (took 2.948504588 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090380596 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080124959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10271316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081758049 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081524683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083685964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084052876 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08728706 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08174504 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080059008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087576752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081985666 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082157032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080258757 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083114082 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082191916 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084501175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081901911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088661253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095746991 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086043423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089350168 seconds)
  done (took 3.175861657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093475421 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081824274 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09486399 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082262986 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074933552 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07752628 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083361495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079542404 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083677729 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081640576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079748692 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077227611 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.081759981 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0795791 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081559263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079853915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082610404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079659273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081805812 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07653235 seconds)
  done (took 2.929455542 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097320654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081005143 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080769227 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087315873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08053182 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08130406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086783249 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080506382 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081292841 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101018365 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080800997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081105624 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086948987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08779563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081493799 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088854407 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088295988 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088027888 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082878382 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082750228 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103863697 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083393258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08960529 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083197941 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08304775 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082876651 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082932432 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086744949 seconds)
  done (took 3.700166183 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081180455 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079781009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077941804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079205205 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079720523 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07972552 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079644869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079644846 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082886406 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079633881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082428654 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082096951 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081978002 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081786384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081499449 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082140869 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08016128 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078274833 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077976473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078102493 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08011428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080145172 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080039338 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077658572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078157665 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080369496 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077661737 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077675807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080198131 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078438695 seconds)
  done (took 3.696591445 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087976934 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086420282 seconds)
  done (took 1.476343316 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076115332 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093654519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07647189 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086408645 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085266683 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082415296 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088296468 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084897356 seconds)
  done (took 1.969433282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0995487 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.089867945 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082159391 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091137578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09070738 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099847997 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144443868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082146328 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091564905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082398513 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098381278 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083428788 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092357707 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086199222 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091632409 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095447088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079544894 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086379807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.082797738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08035475 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082650732 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094913647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091231571 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077075167 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087141147 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110038007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097766095 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080685065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08873595 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094042211 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091390656 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075694819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08131457 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081451943 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079532044 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090549339 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100357896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088599838 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094827826 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082217247 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090396979 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077062539 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090428137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092505084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097042852 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081730333 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081532064 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076691641 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082257779 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088139355 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076574028 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086466028 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076158181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093754711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089515169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097248566 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080145282 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087718523 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088513068 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08933269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093440847 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088144006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091371712 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081367068 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097948121 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091724431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093621764 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07712771 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07604947 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07936867 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096311223 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110510378 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091365578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082055629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082106476 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079601836 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0893995 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082151809 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091345224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093230404 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080889942 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086109391 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094140757 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086295001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088105204 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087978612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079932981 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083867301 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08249945 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102106318 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083110133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07933196 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083138066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097685118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088807812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081038767 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083002417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09356496 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07581689 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081578017 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08247405 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087182395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095327773 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085305061 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08588499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095156185 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088529718 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087165606 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088349944 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078383677 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0822121 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083144928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092930312 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076172936 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088232504 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08557368 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081571593 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093252249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079693624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081191885 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093098967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092900141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079698707 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078428345 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087803974 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080432308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083534004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094447086 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080191376 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076416423 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076662301 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088573543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080189852 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088640726 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084455674 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087963685 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075982891 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078287129 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084670171 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09227513 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083939237 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086143296 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090200479 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086044788 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079467336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091698327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086008624 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081777748 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089997551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084580319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07594485 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083162824 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087197483 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079738681 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087774347 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082042882 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087067338 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080368562 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079145089 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085213094 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080615024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082457977 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08484924 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0785512 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093913724 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085163663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075082368 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076061673 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084431381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07924888 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.077501392 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080553403 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084121644 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.077982893 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.075984845 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07941555 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086505063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087587062 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083461141 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080431051 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089172637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097819558 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079493205 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087189368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079721259 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080229052 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079981758 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094815565 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090455802 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083506792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086768486 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077007264 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089620019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092124779 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082382449 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078031563 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082644666 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083278077 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09146624 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083005271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.080042774 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078133784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086087746 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082002869 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087055291 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.079842491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082355874 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084466727 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.079140125 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083336039 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076611426 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090889083 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08503858 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.073022198 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079183401 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075448399 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088122913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.071851732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078501578 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081322864 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079152913 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07828353 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084934759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07446336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092306591 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091960752 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08561273 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082963013 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.078405609 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088903757 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084269906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08594157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08390969 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08542435 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091150849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079437364 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086168786 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090803972 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.076355288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072033287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085617582 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07629732 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076734637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.076791234 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.075606722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.328772581 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089278205 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092573418 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079152758 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091394875 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08378681 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087714413 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080391724 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094715303 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092693658 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089930288 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097707791 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084777962 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084366301 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092260287 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083977069 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084532663 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085015193 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091652872 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084421166 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09034773 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0870493 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090670354 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08717107 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081492675 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0906926 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083933543 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089443891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093579086 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083385168 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090827238 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090975739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084152893 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0903838 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086782934 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085473246 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090376051 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088631298 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088133446 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089224985 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077699939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094556493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08162767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09517988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087151762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079886025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08782099 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088725259 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086858521 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082437239 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082335332 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088036169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081599265 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089051079 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094825828 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083397307 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098041498 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093659156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087978746 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089656186 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088008819 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087933501 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084610808 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087241126 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082950065 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087755451 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08203312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090540278 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088973922 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087913574 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088377008 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082656005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087549998 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082913023 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076592305 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084344307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084801459 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081955531 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095734868 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082982859 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085346806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081640058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082954119 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081390738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079251042 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088946063 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089547073 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082345655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092269947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083994586 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088128236 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097635384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076100173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080680954 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079686937 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083093569 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094768332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082164063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09566948 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087396278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084381493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079396669 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082145041 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080266531 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076353072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07965439 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090087183 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083133376 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080606951 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081524276 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088741342 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082201172 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094347584 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080966805 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085624262 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.081439096 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078916755 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084112602 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083874664 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088566342 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08206596 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08239821 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07892997 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080734721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085852291 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086965241 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081801182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.226244083 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093824253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081539699 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088997062 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08420276 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076395873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089716353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082095492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081850746 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084668361 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092290104 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089749408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082442318 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096831621 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08200104 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088858093 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082137965 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080074915 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081731122 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081843531 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081719317 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084791502 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082970053 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095977658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080320832 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088337749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08716422 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085353696 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09290216 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08247644 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087886466 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086988358 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0838287 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08790075 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095640163 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085171738 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089245185 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081998616 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087305693 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091534169 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083399014 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093182429 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085084221 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080039656 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085605966 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080940088 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079383377 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079122748 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079243636 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089786038 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.080249853 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082372921 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082371949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078193695 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083901563 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082617885 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09399359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087722855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087655198 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076589687 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079263292 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081609613 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083931551 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087693017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089029371 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091769421 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088149808 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085475884 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080888012 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0968002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091970414 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089608892 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082911783 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090006692 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082211835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087910614 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0855968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086752893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083075853 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089599328 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087700799 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084131649 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092114827 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090016789 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08289891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087557265 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088188329 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087487436 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077096447 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.082417205 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08846627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090705482 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088910983 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081632044 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097926397 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08287227 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087010158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083665507 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081272526 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090680744 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076973997 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087567493 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082306201 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081918506 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07677933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084610283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082481792 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088315066 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083652308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076820832 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097345923 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096078046 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087358599 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08107249 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080575853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07664975 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076937299 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083985468 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082329417 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087342123 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09651229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083997358 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083821254 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076485489 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08204784 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088768922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089672324 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.217730105 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075584219 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082301524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085398259 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090913953 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078668334 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079921008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086578739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085776785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079224902 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084197888 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079570003 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089707662 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099079132 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082503726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088140186 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092140766 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095390987 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082607594 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.077327671 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.081799586 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087972469 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087359702 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082762299 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083643851 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101698616 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089017339 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084278084 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080990841 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091676045 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084321382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096087404 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083224249 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082396017 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090832986 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088141208 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089164959 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092360347 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093041341 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087941988 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087749994 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080974727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087137177 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079938582 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084157772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083005785 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.081614059 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085041149 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088148301 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08613374 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097319294 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096060457 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084085146 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078753062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08368238 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084177027 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077900185 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.082059031 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079905232 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080725767 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079577066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080827802 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087626557 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091247855 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086182809 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082024408 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081669676 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076488192 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092171714 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089009936 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087858921 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079144767 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081996841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.082154048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090028579 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084385514 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080956755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088395126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087223331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088036963 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077102773 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09376606 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081047071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087518117 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084127788 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081972165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.081926951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089115626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085925163 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082750542 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088113023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086988676 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081508688 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079486896 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079068417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091013056 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078657005 seconds)
  done (took 52.843130607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114445479 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07787025 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075382356 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075806935 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085100299 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076427896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075748739 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076922126 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076622776 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078458974 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075488423 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075529334 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082898917 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090566985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085547503 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080215414 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075322403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076304345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0754959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076538653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082859814 seconds)
  done (took 3.115302814 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085606252 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090834322 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087457966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09526897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084262944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082795346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088101836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082594965 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090838889 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08559565 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091414959 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082935848 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085651082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085551328 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086705061 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085653701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093447909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086713153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.085471375 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090632618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085246413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089957297 seconds)
  done (took 3.317338879 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.079917747 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.078929968 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087825556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076669295 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.080600986 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076579304 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.083458334 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079221225 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.083936783 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.083349505 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08303296 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082903379 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08755589 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0760714 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084272299 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079203412 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.121699084 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.08302633 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080602839 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082188419 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076861032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088067862 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.07668016 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077210494 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083294663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.083352207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08152426 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079383239 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080603563 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082993154 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081016111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078608053 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08786975 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086757192 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082782875 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083282052 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083480317 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080975138 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077279345 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079140271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087496999 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.077302319 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081373933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088423972 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079671618 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079855339 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087980004 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081197639 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076942878 seconds)
  done (took 5.440936862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090661537 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128951856 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083489112 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109686327 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09481937 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087196758 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085994627 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110518061 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078268735 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079364209 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.096021399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.093895125 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080482702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.084850704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085523865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080125993 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081590748 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079781655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.083905518 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080450029 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08401614 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087842994 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.094125617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09215846 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083989091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079336712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080090477 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.084702028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.092167843 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.084309526 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.084900965 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085408818 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.095335715 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085131382 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080222107 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.082067685 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.094580641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.079441007 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.081815695 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076837554 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07989882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082895781 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084744845 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.094377879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078896123 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083184959 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078251459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076277921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089630952 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08079338 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.085117966 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090600238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082634099 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.078613765 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082373634 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.091962133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078701008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077616891 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081644246 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090515319 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07779538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.084017797 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.092911018 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083065679 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.086923525 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.092570474 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083245742 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082076367 seconds)
  done (took 7.396323523 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088999356 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10940776 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094779519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095119842 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089162405 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089163 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089100513 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088544133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088400239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092576546 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089044602 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.129140662 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084902473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091271557 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089515222 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091684706 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0913132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091364043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0916503 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091268248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09123312 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097471898 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091388449 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097344898 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093869242 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086773853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090962701 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091448761 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09757874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091189542 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094165923 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091300911 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091069743 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097354866 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.094701156 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090632984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080740473 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091416565 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108882611 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089162018 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083982586 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094633633 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089012939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084500775 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088619898 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090428209 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097424861 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.094352243 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092501894 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094654549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091584746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096380234 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090028194 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091133523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097469652 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.099825427 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097306912 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097095612 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091020187 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09686163 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097026385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.099864349 seconds)
  done (took 7.208492766 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093178868 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085271638 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097012618 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07503431 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078047329 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087462706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079495884 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079498474 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088236879 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088347834 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089914642 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087505931 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089808261 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08994954 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087402045 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089977339 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087421571 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08723468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087940724 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087640133 seconds)
  done (took 3.184327356 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088565761 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096730735 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080255727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085451245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084525475 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087720651 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084717959 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084820464 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08334999 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085574273 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090470569 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08958763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080937696 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085020721 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088241996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084600549 seconds)
  done (took 2.811644851 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095631505 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085398694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091851577 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.080790342 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.082366998 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.077545416 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.080713141 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076389219 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07817851 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093501701 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.080477778 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091923148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.080537052 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.079705706 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.077765142 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08692836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077223922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.078133904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.080683312 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.092288093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085014177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.079133875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085537698 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080822902 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.083868163 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08553567 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.079944307 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082138647 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.077783406 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.080995522 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08427737 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.084729163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.077981489 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.078797371 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08047785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096047567 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.080160253 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08079261 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.086589108 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.080777545 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079127971 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083485104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080730288 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.081886561 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077171823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.080946595 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077309908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.083531931 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078240788 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084035606 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.080515196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083381856 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.081612107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.08810738 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083148277 seconds)
  done (took 5.971292732 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093759801 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082750961 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07479662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077045354 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082928318 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080934894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082635309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082263696 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083115741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079158337 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083576768 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084643946 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082974289 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085056041 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083435559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085103659 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07624808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082876346 seconds)
  done (took 2.930128905 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085378029 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080307595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08726168 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081546842 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081195233 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083835844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077004106 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079342297 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079419934 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082018072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081890046 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084251708 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079417354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.083641249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081824722 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081443069 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083716741 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079469716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081615862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076962338 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083627174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079471838 seconds)
  done (took 3.230510324 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.108776999 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.100886777 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.157594534 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097042598 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.104790219 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.090013079 seconds)
  done (took 2.096340533 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105113595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113388953 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080502233 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082516189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08874486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083284259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083566355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083419821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090280761 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088683713 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087222824 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092768329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0924513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092478381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090625315 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090670877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086107441 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086018269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08206265 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097412769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086079786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093169919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086318302 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085359301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085582471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092066172 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092793426 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090384676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085465538 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092624299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090390957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085542945 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092790394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090040258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084917846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093075757 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085602623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097216448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090752871 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091704647 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084797913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090759679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093155985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089445752 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093186935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085749529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089810698 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085914066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085714276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099584097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090747211 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091866983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090950057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093661673 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093060823 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099221872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091013152 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092277331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090859271 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090528567 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092367308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091028233 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092309268 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090206227 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090745444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09226258 seconds)
  done (took 7.401185464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116609195 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08135256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083787347 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090474524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092135011 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086103835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085904843 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086124346 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085918284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083197195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124170548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08609962 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092609827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092221415 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086936499 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085772329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086206069 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092363996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08342753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099744253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0857611 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092029758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092109943 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092296218 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090727051 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091213411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085636711 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085522646 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085546039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085456364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089350615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085659616 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092006509 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08273239 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092270334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085657362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085325246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089417235 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085175771 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090520737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091469454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097203555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085239012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085232823 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090654465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085506425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085163718 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083583989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085580519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08301276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090521448 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090313189 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090633081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091873191 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085769562 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085592978 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085243551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08550983 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090667883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091569534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087712485 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099150089 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085700896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085724344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091920138 seconds)
  done (took 7.346310756 seconds)
done (took 152.913710262 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206890778 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182578895 seconds)
  done (took 1.819591066 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090069005 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.116773966 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098185592 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152040694 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08708425 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122022208 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120556113 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09842837 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089640711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089767073 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089462761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092430327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155679491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08713638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086894942 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089777658 seconds)
  done (took 3.109819595 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119682421 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180206477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124797916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.085145397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120165276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092923854 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087832371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097899882 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092022218 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087867449 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095485688 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093937985 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088791652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093648785 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094245787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095614871 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088969873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095383757 seconds)
  done (took 3.281523491 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119471506 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.109331837 seconds)
  done (took 1.681206451 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174513891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.149253207 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.217313235 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360660363 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171074539 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.157704074 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.156726293 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.154452726 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.129084485 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151018506 seconds)
  done (took 3.268414677 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118900603 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17107555 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310859212 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139043434 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094686405 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113104021 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14097514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100368217 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102832361 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102008422 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102439905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097145429 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121392047 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094367058 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09072779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095910521 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124068444 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090010785 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091084234 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09669734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124851765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088206967 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094723255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090108962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099567176 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099329725 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089349232 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087459852 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096454466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091200906 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097467616 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111376368 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09919029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.125067151 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092164683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.126623595 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096817385 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09476709 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090775907 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09452666 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097856766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097798925 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096805914 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096530858 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089362568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096985669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089496118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087643883 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098906485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089110404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099206763 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097331833 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12538457 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089063979 seconds)
  done (took 7.211722431 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123179205 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122333066 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088973029 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.13131068 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123164692 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088249126 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124476004 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118296227 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.126398823 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089004963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087078697 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.089101353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097801943 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.099811839 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131700188 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123211039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088539026 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087727513 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126330834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.126259126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087377383 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119989625 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115924914 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126111149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084154677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087394666 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.086569235 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088342501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.093948816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095838257 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08686946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.097594966 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.103573335 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092318771 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083662216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084578339 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084945872 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.095912703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097092119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.09640802 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.095074925 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085894181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087148028 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088030437 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08765497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086628982 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.095223812 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.097073886 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.09551055 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08658919 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.087861144 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.087153955 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088314539 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095857398 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095329848 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.097367608 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.097467683 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087019385 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086548952 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089308737 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097646329 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096248892 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09657148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090430542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.097227828 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086897565 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098740263 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101079274 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087275139 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.087754733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.086311409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086593283 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.087450196 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094437924 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.094530253 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088703401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086153411 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086531456 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096795402 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095037617 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087005771 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.095009835 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086201432 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086782175 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088256841 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088079081 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.094338247 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.096322044 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088760908 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08670347 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086536913 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.086608402 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085766131 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.093844795 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096398915 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.095420416 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.095220614 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08792489 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.095536014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095166292 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088148046 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.096067966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.086747349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088045774 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087753143 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095276375 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.093729493 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.095942745 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086982911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.220649564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093281958 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097222808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.086640174 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.094698085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097499189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.095469508 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08674241 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098723894 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088603021 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.097644885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08626271 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097541385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087326384 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096012967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087133176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085884059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.08659162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.096420402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088129282 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086771978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087620708 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087066492 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.095424009 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.099618583 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088692895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.095079631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.096389733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088387959 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094943407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087135464 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.096558263 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08729941 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088216089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086070256 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098704088 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087199726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.086848775 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087025758 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.09759092 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087534267 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097145888 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09489376 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086670402 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.101552828 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095915777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09400171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097734289 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088683793 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.086952366 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086758106 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086993262 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09402822 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09590231 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088275323 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086822736 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094632479 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.09779728 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086378573 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094848336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095517082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095351506 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087509965 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087105137 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097922349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.09655198 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092791517 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092251408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092623872 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084530687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091847372 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092832456 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084249064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098763054 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084925998 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096904862 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.093864123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091627162 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093354555 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094341345 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.093996982 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094702547 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096409161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083985933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.085070855 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.095692431 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086977525 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087441029 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094176634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088422391 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088169758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.100229433 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085512589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094606464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083732354 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.093328563 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083896436 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085508148 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09755655 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084752519 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08819548 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092717532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084832496 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091686762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.093960641 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092477498 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084135922 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085444728 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.093562588 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.093168454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084297573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.219421535 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086138103 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.092708272 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.093247425 seconds)
  done (took 22.637361689 seconds)
done (took 44.47396846 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214536392 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168979237 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175314265 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128516849 seconds)
  done (took 2.23746488 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12214263 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112955195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101871418 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081276234 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107832208 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081536426 seconds)
  done (took 2.08397637 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289480431 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204558958 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187336432 seconds)
  done (took 2.160988193 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221879512 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204367379 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472532593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294693744 seconds)
  done (took 2.770782979 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153180807 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097630035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080455942 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.096875794 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138141308 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165437716 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108216674 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132670822 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092189613 seconds)
  done (took 2.597823004 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157122269 seconds)
done (took 13.494824672 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.279092028 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115099702 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.248829862 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087631832 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082764003 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090859672 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092467546 seconds)
    (8/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.223819294 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211373807 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090959679 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119389655 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106927232 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090511039 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172296826 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097904339 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0899619 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127570661 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095590699 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226183362 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134184192 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.182572725 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10095034 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108484364 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.471700098 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.182496951 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.2345748 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.204794474 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211067081 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083975364 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137305547 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183754524 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.227481924 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218203622 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090228591 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210075729 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091569063 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080602736 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066744108 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.26225083 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13371866 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.215042462 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199525137 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109752646 seconds)
    (44/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098132502 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.164514176 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12720548 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.085081679 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090483056 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08437443 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23089972 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212954383 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104837467 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092780485 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109772411 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.082572243 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.121274343 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104882043 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089645744 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095237619 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119794756 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.141793054 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09214876 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.129875511 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082750828 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.089433116 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098220928 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.175807489 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.247550286 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232986048 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088105346 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098349479 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079838168 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089198554 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094673087 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.084980795 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.090014817 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110605453 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169151834 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171511337 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104796755 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201101539 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091697977 seconds)
    (83/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078855675 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158361499 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105143904 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096601516 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.325080191 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104905122 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176334899 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078885857 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092005516 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068294593 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067080756 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084111339 seconds)
    (95/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10716374 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12754327 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193034896 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195133556 seconds)
    (99/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.16940874 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107704941 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184753373 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065311063 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 0.147644032 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213505709 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 0.148779113 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.092904931 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136835209 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.065469694 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151890564 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082151114 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.085530836 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08794807 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081905729 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082237101 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.086621631 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083907389 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089172436 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081876689 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088513346 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.121126996 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.131685182 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.086777749 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103867938 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137890932 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065960155 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089215004 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.089982353 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067306431 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.171851195 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124490618 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067371997 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105413413 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067213748 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.106374747 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.109657591 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.086536089 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0906065 seconds)
    (138/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.194642911 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106731819 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090727964 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09359589 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088708254 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091043081 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090709988 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068074888 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088561467 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090515522 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173484502 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094822373 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067053904 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082916973 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089344356 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066565073 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086396555 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108411988 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108680546 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206757692 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082574594 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079618672 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10392558 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.108724242 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094563022 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.116247976 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090338244 seconds)
    (165/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08585194 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175483604 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08357296 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09110895 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16363546 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167313215 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173901815 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068765412 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08276067 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.083626092 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165391278 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145920698 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.159395136 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084113735 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083611066 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06674944 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171015073 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083801919 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083632381 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149194829 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066643102 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066155461 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.087703487 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067622898 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139500593 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145611972 seconds)
    (191/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067126826 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083220875 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066242645 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082930915 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082502027 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066198215 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.103777624 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.084281011 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126017482 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083531367 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083839418 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077886131 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.31096818 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092411947 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.106647607 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091291973 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140342742 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067470347 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.167729132 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089658106 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.085102398 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.135932706 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097062059 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084167465 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066443756 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091180246 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109525881 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06740825 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13620518 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139080184 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09093203 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09008408 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168488575 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160209104 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066757117 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066569197 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066363102 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087650757 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080727077 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090334564 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089819383 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111329152 seconds)
    (233/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067500118 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066514836 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085386142 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085358779 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08706448 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140995126 seconds)
    (239/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067849938 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083636407 seconds)
    (241/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108574674 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083895662 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078900796 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 0.164511958 seconds)
    (245/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078712392 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067192284 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066954835 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067189908 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.096092879 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067436019 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091003086 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083983032 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092314474 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080941784 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067405224 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067706412 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06699375 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.107241103 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067101303 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06653642 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192460976 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090004056 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090799985 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.089464269 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090615407 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084401059 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.084855193 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083486403 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066378859 seconds)
    (270/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079455376 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088260041 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.085188406 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06703824 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084475178 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066770467 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087956116 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088158114 seconds)
    (278/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.097696048 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066804129 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066709339 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08385709 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.109880426 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067413426 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130430165 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089183064 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068137816 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079405482 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06671535 seconds)
    (289/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066707482 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06756766 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06697605 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.087330621 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08031644 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088928635 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.087990785 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066573292 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065935529 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196028278 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068353035 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083361078 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096282237 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108058139 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.108068998 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082631616 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156208829 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083826541 seconds)
    (307/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075916109 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078633644 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066698721 seconds)
  done (took 36.381099727 seconds)
done (took 37.875013737 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097522576 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110922648 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091872959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109340156 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099852739 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093052653 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089437193 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094077406 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09716441 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.098546443 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09741515 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070509042 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093007729 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092760138 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.091135362 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112829708 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098706692 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092324264 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092374356 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081114666 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092094277 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084710955 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083703229 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070573402 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095930175 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.088530023 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09385466 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093088548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.084225689 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084116514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086089149 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092894107 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083918891 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096215085 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090152887 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.091891706 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093228578 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093202885 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08318372 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083828007 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093644699 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083696008 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091383304 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090090284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088441291 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087624603 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091565514 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.093265304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112115055 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088196049 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093684692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094594461 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0953763 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089063965 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.086543084 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091912487 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086922945 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113151905 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092198188 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089093766 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.093379393 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090832009 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.087575511 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092016504 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091749687 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094569626 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093239825 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087924646 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094567945 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088031625 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083301437 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091586664 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085422287 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086422271 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095483114 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096615929 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080705271 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088309127 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091662676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092098238 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081417319 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089127347 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.083268694 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.088958708 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089410706 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070143637 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086545294 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091121048 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.080984729 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092342796 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089371923 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08911181 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081512506 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.091428812 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079330683 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085320682 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081396682 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.080986604 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.080614366 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.083682015 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.080908263 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086148987 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090161375 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080212582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.085989144 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.093889534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.080866442 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088270908 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.079477812 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080712258 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.09509692 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09391458 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083573622 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089276585 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080584328 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.089217623 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080904318 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083191471 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.083188139 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083190817 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088116758 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08331925 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088888479 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088631245 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096151649 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0830907 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08559808 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088632204 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.083328942 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08744006 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.083774002 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08333859 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.083087572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07737233 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088688134 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.083531518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.22837622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086597692 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.090109211 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081063524 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09096383 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085926511 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087117738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085586316 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080882558 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075228926 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08794736 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085985371 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.082989924 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.083520272 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.082941397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081695859 seconds)
done (took 15.201748333 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082009654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146978576 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107458602 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107194261 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099281343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083031587 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.088707304 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108361036 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.081777052 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114111267 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.102396169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.100695588 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123927493 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.078929542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082375212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084432507 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081475409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09588823 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108964229 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105478724 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125376624 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079794327 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103558583 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.104071672 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100571187 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107245595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083108928 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084289673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085681771 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115086729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106004969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.086016495 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083307872 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.109486464 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104035078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094799842 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082489051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094749364 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.082878229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082088517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083724727 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109940394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094969358 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.097647501 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.086102526 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09315356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083279316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097464932 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10548205 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093971233 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102136015 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113010641 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.084991179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099474839 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080356086 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099457977 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.092255952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084786544 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.084151287 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089654458 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.084529799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.087611345 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097893578 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.093960819 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088445813 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097559136 seconds)
  done (took 7.857611797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099786311 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.111892433 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.098082929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099197899 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081843658 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082986176 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082106664 seconds)
  done (took 2.23341525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082890804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100895558 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103914852 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106733095 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.096651674 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107865245 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092627964 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085363467 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108118974 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081612194 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10042728 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110877984 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083213301 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094121683 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104999389 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082592013 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104370729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08335501 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085559196 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107130438 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087113538 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109305739 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095947938 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085442308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09564886 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.084813238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129301888 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093157931 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084027756 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.086051459 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083301394 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.124935209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095405493 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096580178 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082770128 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097443932 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.096291703 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085498273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.093489319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094473818 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.096301769 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086301768 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.084069195 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083200462 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.087914236 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.094346248 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.083922292 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086055165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085948538 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102855276 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083271493 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095551214 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086420873 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088725195 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090575182 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087525413 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.093461395 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083625874 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103150238 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083297352 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100411613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.098597141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.095986742 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.099311603 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084939113 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095675048 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.096168094 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086198954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08680172 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.086526652 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100721389 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085905377 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086692541 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.094519568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085490475 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.108184343 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.107442973 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08502297 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098367006 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085642045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083680501 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084961096 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.10761265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08803996 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083585968 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089204057 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086902684 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.085572845 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08375842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088458887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.083686258 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090308481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086257203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085895996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087583452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100207339 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084328783 seconds)
  done (took 10.540160608 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085109225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.083561678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.084872443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086137951 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.086575111 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086672438 seconds)
  done (took 2.116353102 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106507536 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.08150542 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.093535899 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.087550854 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12093942 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101936074 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.102897845 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096398144 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10011164 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095732324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.102150029 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103360282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.106911567 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.088797294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103093423 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.08764838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10296194 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090196378 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09530836 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088780318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103651134 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.088495876 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088496764 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.103909551 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091711609 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.088035743 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096465892 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.095298899 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094887899 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096473549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.088208226 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.091830931 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093414724 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095445297 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.101586796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092851295 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089558152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.093306349 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087914559 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.091541433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102603455 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088709823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.089350338 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092628807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094863596 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091055037 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0898709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094596984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.099501219 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092672999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092996976 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087425522 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09141208 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093872736 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093456214 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094245046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.092764919 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.102394128 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.088049969 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093950538 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.08433164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09136846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095428918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091884997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.09294984 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.093259505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093692488 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087929507 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088376327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.087282685 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093470814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.084349007 seconds)
  done (took 8.352223747 seconds)
done (took 32.659923714 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.529826529 seconds)
  done (took 2.085594018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623939759 seconds)
  done (took 2.210819025 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.611700018 seconds)
  done (took 8.189859779 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383399813 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484445555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.76076792 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153545059 seconds)
  done (took 3.409008218 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720683323 seconds)
  done (took 2.319529047 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248479725 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243374801 seconds)
  done (took 2.086347005 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.370718975 seconds)
  done (took 1.957247651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105860876 seconds)
  done (took 2.691472394 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244186197 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175804581 seconds)
  done (took 2.008301186 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455373737 seconds)
  done (took 2.037639992 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.239164413 seconds)
  done (took 5.825900521 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232305042 seconds)
  done (took 1.85540974 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.254338222 seconds)
  done (took 1.844826185 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.76046914 seconds)
  done (took 3.346082597 seconds)
done (took 43.471902803 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10016842 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101414264 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101098219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096905825 seconds)
  done (took 1.972543036 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09100403 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.086790964 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.091184969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086143432 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090713512 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.087248288 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.088455359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089950081 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086721154 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.089538483 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.089463923 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089355132 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.092824691 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091130145 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.088293895 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.092752202 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.094123851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089988996 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.092505846 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.089484335 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088777958 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.092350919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.092767962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.088759777 seconds)
  done (took 3.746267653 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094436387 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088812118 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.092428995 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090780243 seconds)
  done (took 1.967194548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09295823 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104223997 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102126696 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093231442 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104091377 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099720859 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.083428339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083362917 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0844848 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09289376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082715165 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108669825 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101797004 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092313041 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094347246 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079319403 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081687348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100724356 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095850991 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.095929254 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086860745 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.095405966 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085198842 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.105937195 seconds)
  done (took 3.843702835 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094923308 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114395858 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093758916 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104191693 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.10582858 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079847912 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093306139 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106383386 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141148806 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.080238289 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085916091 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.080409898 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.088538852 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.082691831 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094639574 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.122274807 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.125700565 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.083896127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.11537523 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.082990425 seconds)
  done (took 3.576013513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08917787 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.085916622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087807544 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.084180901 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.096874422 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092386358 seconds)
  done (took 2.142280912 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084612162 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084583455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.084366175 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085047911 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.091737458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085484603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083758869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087221907 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086743853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086528911 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086242607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.085085737 seconds)
  done (took 2.631023985 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198549648 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084803056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086697054 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.082277015 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086654082 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082839171 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.097721378 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084225862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.108925475 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0833873 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083462331 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085467769 seconds)
  done (took 2.766611421 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212490542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090018584 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247911531 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161768317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119923667 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125189409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126893734 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125475349 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147823182 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111575596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171577071 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175285735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119045173 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147922312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106048909 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.115204356 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161100546 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175841 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117666626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172382519 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154101803 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138270426 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159786514 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116962269 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12022974 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133481564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.087823049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095965611 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182868943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150522797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156465456 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124669245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103363047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190047458 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17511852 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151615373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159250658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098371893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.115903298 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145847629 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210153932 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103087537 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172567769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123743581 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093721467 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142824131 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128611393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.272556934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116488996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10421546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153504724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191426025 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142256068 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099767062 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13483806 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122392237 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12157739 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130067515 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188539296 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16720881 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138844039 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085905602 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122300116 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158372273 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144790846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118481262 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133323789 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103737092 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142445802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164950631 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132968553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15410895 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130296406 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105068217 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136764107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150982875 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141779192 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185749096 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139585569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.090528382 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137328467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114905558 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097374296 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.159320877 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092507436 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186383588 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118100258 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120505101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143066448 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123836586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125980493 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170783294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1554402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121020608 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083015394 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120873487 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.131343058 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152367151 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102035556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12456583 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129892629 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.094163748 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293454595 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.090142349 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136527826 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092185591 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135033491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141347531 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.093140064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135156139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117598447 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.118365423 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144683439 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171421627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105296682 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097976336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176655303 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136578441 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117565 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155348238 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166090741 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117659301 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114660692 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158193878 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179952842 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107580537 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175089805 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119302399 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097493048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099392191 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134890435 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126840208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.137273873 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097914262 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.131886237 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175949392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.091930276 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11298855 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149627513 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095705792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09761609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121302144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120002084 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113371414 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.113588279 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117494396 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147638227 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138526633 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118894418 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135203026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112532444 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174307302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104217189 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.118937792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120564916 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.086613655 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142771719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16368997 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092416567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166341255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130769567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276577716 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133154413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101554821 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149600043 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097196143 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088045617 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151653234 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125996141 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124905701 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.160171532 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130351971 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.136384303 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.13159489 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143979184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143856917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142729201 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122059625 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.105959539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130063874 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141123738 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.089801236 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105946024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.096750405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123227415 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111259004 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101372576 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156903596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136129383 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127187908 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130296634 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11351806 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161345139 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.092715154 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141100622 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.134093431 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111897578 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.161105657 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160562253 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143771213 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113221474 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146160076 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.085347894 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08973865 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101323045 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133448246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097531346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097987816 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126578751 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157875205 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139368504 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144491077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134460048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131844556 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167144255 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.084587654 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.131140362 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150906362 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131998988 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.117001441 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252465074 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.112558264 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154388528 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119624558 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195069547 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129074936 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139957726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165117069 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.116055504 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096441525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119228231 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143270197 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114167721 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150365825 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111282439 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100480867 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118653508 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.089814555 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10891003 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136737168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128887651 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147602604 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12400317 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144104448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092529002 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126993989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13430002 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135510663 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081392836 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133303275 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176674694 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111846447 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130455703 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163416733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096413327 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153781158 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183532281 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158386848 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101970781 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122961497 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135993023 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139085853 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134233915 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150244484 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117970203 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153742002 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126095161 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.10130773 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103667658 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109262679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116556757 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105329454 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113015066 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122984447 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.108568412 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140412419 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114552056 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121101571 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277859862 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11344305 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.106580768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110883715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182947976 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129678041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181891042 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.113809268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148546781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171669285 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093424365 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096507582 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094869439 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151259201 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102050254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141756058 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125444209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128169652 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13488419 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152085699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113823246 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.086441765 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125206144 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14590059 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140112686 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115332138 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116178692 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168266612 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111009658 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094453987 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124747764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12877798 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116899557 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1808655 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.076453397 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121181124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091213688 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093985266 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135738218 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162181554 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093765971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112152918 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131770219 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123026341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135218967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110738979 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126919934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140853526 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154568469 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137738353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102054632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122580332 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139790576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160698919 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113835634 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110167729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179673697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308131562 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166551516 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102700982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130591512 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131296234 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125748561 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151464121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102041737 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168569093 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098706456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147091185 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116600949 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103135755 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14230222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128855747 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105409786 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154677812 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131797875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100657785 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094566756 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130907275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133293426 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117261632 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.089778207 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148223917 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.08869997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143815133 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181136974 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094661608 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117551705 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108719783 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0936567 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116360366 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114528489 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100003612 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.112325766 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176703279 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099655819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156707395 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143243673 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123882374 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146019418 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115729873 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.653289519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.092979937 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162390162 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130214985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180374355 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112078743 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128913078 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122134044 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131004736 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150442374 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113555959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190586647 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290248183 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127556227 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094111935 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114691902 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116865327 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100994072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12107014 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125613101 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126095489 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105251602 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12619196 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13260155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095862363 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110600444 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161724308 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12652761 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152485497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146556105 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098488595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129092894 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145167097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094132051 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128002916 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162506852 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118289309 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111873029 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.094786198 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110979985 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181147979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.088627931 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201407019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134707976 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126591045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129155511 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.12243286 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144679656 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118490565 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133999431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103496526 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118424527 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125454659 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096155221 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.091420595 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118298677 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124260231 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.111906301 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108137993 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112710885 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161915744 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.08929535 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112634223 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126945566 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151466213 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176440302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.099295335 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097352017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130666712 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126442986 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122635199 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280968153 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.093508699 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095841881 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.093013907 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.095204892 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117111245 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125638249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131024915 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121559163 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16771157 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.097002553 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239666504 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108975668 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117609706 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08337092 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091725085 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110163433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10909568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11682658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123054183 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17895106 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10915708 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103968314 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103834629 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.089330279 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100258458 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138856861 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124673434 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129830058 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114137346 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.076477749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118435559 seconds)
  done (took 65.058196327 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136780852 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.112103794 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118676469 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.16192242 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137365221 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215565549 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.166503186 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204658705 seconds)
  done (took 2.953034994 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.085160849 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.111040555 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.119774608 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.100444076 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.083998661 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.086100229 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239268752 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.099973409 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083481596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.109461446 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.094984951 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.086292978 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426289691 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085243244 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087509955 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077839004 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083794139 seconds)
  done (took 3.741823222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397299101 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618310605 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358909494 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.095365764 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.880015639 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105316878 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.22079143 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.155340329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098987598 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53774541 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.382981823 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152604438 seconds)
  done (took 18.697706661 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099206057 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.092668714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.105594316 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.105085653 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094764827 seconds)
  done (took 2.180552043 seconds)
done (took 116.920249043 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.096517333 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442000551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067732906 seconds)
  done (took 2.221907025 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105212322 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.103098366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.105461367 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.103459227 seconds)
  done (took 2.112027485 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090932101 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.093230771 seconds)
  done (took 1.87510058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240959609 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189125767 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.112754676 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.097809833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094492134 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094592769 seconds)
  done (took 1.980919078 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.086499548 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.088843254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086373722 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.090353949 seconds)
  done (took 2.042237372 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.088779183 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065843186 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068004517 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070538734 seconds)
  done (took 1.985586469 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.100993077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.098006978 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.092928029 seconds)
  done (took 1.981011401 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.117714443 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.106371477 seconds)
  done (took 1.915489206 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094852077 seconds)
  done (took 1.785700946 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10276896 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112631727 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.146981578 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.12928943 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.153290972 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129179422 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100701739 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.101493588 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094968742 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.102025208 seconds)
  done (took 2.864715553 seconds)
done (took 23.088257207 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095116075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38197942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.376922835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106140296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685684215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.373598009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987058271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109254576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156516529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085730764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100807891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666941477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.9770382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.338406525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963507416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.34091122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667604574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086315758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085049211 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085458325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972866907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085282289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08524392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086573547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668351583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.393367526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088985257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343709221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089355289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.091215452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376054288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089732656 seconds)
  done (took 16.714982488 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087641337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136990716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089670616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100448455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.08708736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086268757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.088266129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085894271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137314612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088817626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106168902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08860635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093465386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090133604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108410462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091618019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08834187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090455857 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089301791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0895237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109141633 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089059524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089406736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090029962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089418745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101807674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089454493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089264951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08969986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.091908362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092052188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089747182 seconds)
  done (took 4.746722366 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133137642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140880533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090035516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122194928 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128437365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087540866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.164801703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.115133842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14984845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089722551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107071384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089555838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12571595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090857481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110238465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089959254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090353223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090314014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089491029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089974121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109176844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088963224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089238898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090024334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089520015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103394931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089936609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089807826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090059976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.091001815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092184613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089042434 seconds)
  done (took 5.01946174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.087455303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.089480222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.096465569 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097393414 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083456874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086692716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.087730512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.084214425 seconds)
  done (took 2.42235886 seconds)
done (took 30.604064704 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.093505459 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.083134734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.086922856 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.105593828 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.093240014 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.097590711 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.084768843 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.093857138 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.090353231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.091295939 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.092825496 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087667888 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089882102 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.084217804 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.091607352 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.085399037 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.100288052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.089411331 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.099007328 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.099743901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.087540123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.091256231 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092962022 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.098482526 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.098462932 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.098409942 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.093923926 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09045998 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.085089528 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088338718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.094257935 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.101822129 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.087917578 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.097409483 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.084250163 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.084457634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088876311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.08746419 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.098396116 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.093176491 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.085800314 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.093246815 seconds)
  done (took 5.544535871 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.100848629 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.108346487 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.102423448 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078581996 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.084887929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082087912 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.106920471 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077678341 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077473352 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.105823938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07333772 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077057599 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079862244 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071517127 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076662282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073990665 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079715791 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071784539 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076187617 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077738222 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.105461274 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071428038 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.094824956 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079169651 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073311079 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078919902 seconds)
  done (took 3.905596347 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090206701 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102109811 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111449461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163928259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130697626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098765237 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.100725082 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111405303 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115545073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.08727354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091421175 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.111277117 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111728389 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.092841723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.086812409 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102912697 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.102635355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.088632101 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093769416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118792735 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107942664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104719192 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112714189 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103191307 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.086269814 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089191318 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091501361 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102803574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.089292718 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097300118 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.089227081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090623543 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08751622 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.097546872 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.089506167 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.08655716 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.112343499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098714102 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09991391 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.087795432 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096851974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088343476 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113039984 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148419497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087119812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.092226263 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.091018528 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098280863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.086229395 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115204757 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099394892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.086619415 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087654348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.086187075 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.086817093 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090113369 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088498864 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089686157 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.098150687 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094044677 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10933397 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092759605 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105224705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.086907947 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097027973 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.08648195 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088324394 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086117518 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115823835 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088463259 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132100836 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.087771045 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.086204516 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09828799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.097678448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093156789 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.086742795 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105641275 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09888263 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091293852 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.095923728 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090920968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09093558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118809809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.087666492 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.087351902 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.086305862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.091177229 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.090786977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088266542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100291082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086525869 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.091155396 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105355841 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087173363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.08768549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.089199637 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.089573241 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.085688527 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.097958474 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.089933042 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.085556574 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094238472 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087074727 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.090412397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097498421 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.090882297 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083057537 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.08674492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.088023576 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086100056 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.086265594 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090351957 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.088959559 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.093519982 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.093496361 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092697487 seconds)
  done (took 12.987673246 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177692437 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.175427459 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.089976667 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.165520976 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.096890364 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.097854332 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.169252599 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.113757872 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088372 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.090013939 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.088923144 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128341447 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124029166 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.13633321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.09923257 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088809111 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110867277 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133267303 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.171442517 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.165794108 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111596678 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.096510043 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.091169563 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.089695447 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089768748 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097892614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.107498008 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.094285586 seconds)
  done (took 5.049339984 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.093977836 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.119821507 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.091609797 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.111068114 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.108309392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.085605689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.089623056 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089471796 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104456039 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.094223315 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.085543731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.09172071 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.090214255 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.087163858 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088720031 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.092226798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.095676501 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.087279503 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.088996995 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09336412 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.096878915 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105640131 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091665092 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.08814288 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.090276725 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.087556983 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078439352 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.099927402 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087409885 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.112970874 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.082808339 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.090377459 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102646142 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.088534774 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087090637 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.087255942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.084483306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.084122106 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.086041911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.080848995 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081184751 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070936688 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086186771 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.094619057 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099794927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071701937 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.089249106 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.090489374 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090457622 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.081383436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.087950033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.087229597 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.087948481 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09231003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.086452398 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.087821161 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.086168211 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.089316784 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.091354871 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.084398532 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.080690304 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.084005892 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.089970443 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079407894 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100982086 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.089619233 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.083795648 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.085261251 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.088918779 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100213573 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.086927872 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.089450346 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08294806 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.086659187 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09066587 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.090566331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091745875 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.083434894 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087221337 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087514293 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071148361 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087059956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068859312 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090674132 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.083515302 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.083693354 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.087892298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.089527334 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.096296579 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.08712222 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.091404003 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.088656383 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08626238 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.090239637 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07580923 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.089544796 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095623212 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095819593 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.082505176 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.08081297 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.099518589 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.087696651 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081608504 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07105159 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.091896749 seconds)
  done (took 11.095419195 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.108346394 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.086861648 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.104892259 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.111394145 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.106375069 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.093104962 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098501978 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.086957326 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.10496951 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091824535 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.094571134 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.085521689 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.098115035 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.0975675 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.084905702 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.09551622 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.086264067 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102621093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.100046737 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.082408088 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094586207 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.098737699 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.109540758 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.103040403 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.10154198 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.102851915 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.109593238 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.096571322 seconds)
  done (took 4.498541148 seconds)
done (took 44.787012406 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.834564412 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.978321431 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.798693315 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.034671665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.952564066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.827066452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.976474639 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.793501767 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.018527858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836016494 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.085285226 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88381722 seconds)
done (took 65.883339847 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.859480915 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93457571 seconds)
    (2/2) benchmarking "String"...
    done (took 2.022555035 seconds)
  done (took 5.677146549 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.013882388 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.473462636 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.034542358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.796158473 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.802764967 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.051905621 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.605873706 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239084356 seconds)
  done (took 30.722456094 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.002645784 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.026190067 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.514328317 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.550780791 seconds)
  done (took 15.856611058 seconds)
done (took 63.94040219 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.792704566 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.815596155 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.847529958 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.778032162 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.884532386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.810206767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.942096741 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.049367906 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.802200827 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.785119279 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.800360777 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.235748238 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.810790851 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.025093547 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.803578621 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.798042419 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.846170191 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.291101108 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.959425353 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.810563708 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80844008 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.841749775 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.805859654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.950728564 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.819628251 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.798678262 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232714989 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.799888766 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.43081695 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.797543845 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.829927367 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.163794969 seconds)
  done (took 205.890538879 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.800689282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.764043903 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.846220665 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.820572673 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.3055251 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.982859395 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.901322472 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.344463895 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.8024858 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.82014468 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.968536318 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.798299388 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.008295658 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.751474615 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.830586665 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.806501034 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.966287937 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.013281413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.828807242 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.970694687 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.824349865 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.795204616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.784171647 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.974814058 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.800612349 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.81444544 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.802002698 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810508989 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.988303696 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.947227667 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.8106076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.842084898 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.011153957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.672084857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.810849104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.820175238 seconds)
  done (took 170.559885878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.989752428 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.802331731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.801883048 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800327317 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.809413598 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.798792872 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.923636481 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.927311774 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.431060118 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.458527804 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.855263089 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.799536863 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61725973 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.80333483 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86800711 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.812891113 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.801017806 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.797619033 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.802323922 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.817809852 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.82782557 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.803638231 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805192431 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924533098 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.813691186 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.800029358 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.814974448 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.804989799 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808912802 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.167981777 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.799446768 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.01141874 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801307733 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808057386 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.043209035 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.8042274 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.805513926 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.66449227 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.003349695 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893359578 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804340542 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80994545 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.800434998 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.019686596 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.803965378 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804608945 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.804525221 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.808551869 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953494659 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.808544548 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.930439767 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802813886 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.30134833 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.801576399 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.80527696 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.756920857 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.415933983 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.806386545 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.806206392 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.805345994 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.805108654 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.808901338 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.664781828 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.876357024 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.804795402 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.802787827 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810128439 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.803096826 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.957264233 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.810108619 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.237026238 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.861292393 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.032343825 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922867416 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806770321 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866746403 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.894744804 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.803287085 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.801672903 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.806595907 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.804601473 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.881953155 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.802765775 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.92761042 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.814298121 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.803635879 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.80335195 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.857597516 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.871509748 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.803644679 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650079278 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.80785286 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.80113969 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.098956069 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873897149 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.803565877 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.807165195 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.930136929 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926377626 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.51852146 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.807418647 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.808398839 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.665950297 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.951715302 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806984186 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960205347 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.809341904 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.886955453 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.813272722 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.808672748 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.844741905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.810281845 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.865361264 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.802292741 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.177741928 seconds)
  done (took 406.912532992 seconds)
done (took 787.13293205 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.393196245 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.361992554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.454256582 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.372950694 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.351215259 seconds)
  done (took 13.65805431 seconds)
done (took 15.382465127 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.895276304 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.894028869 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826507461 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.885773239 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818969928 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.888685061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872582123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.828638086 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.855202505 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.828196768 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.85558186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826171386 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814705761 seconds)
  done (took 25.815533857 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029242914 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.029978632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869814663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.032447759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846815995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.027860605 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949808542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938810402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943397764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.811473027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.808203572 seconds)
  done (took 23.012126222 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.030651558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.037088127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869024542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.03256702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.84042528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.025878968 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.952242452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.94492968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934331677 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803875059 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.803923621 seconds)
  done (took 22.992747224 seconds)
done (took 73.543616793 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.7997523 seconds)
  done (took 3.516257728 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.823896674 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.993787235 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.805362164 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.803247855 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.79688736 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.795955898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.798653285 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.79436821 seconds)
  done (took 16.329319726 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.794606368 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.79630962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.795785687 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.796033279 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.796988737 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.793998295 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.79352705 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.796761288 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.792453362 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79122615 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.795797762 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795738625 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.791253895 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.792765168 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.796330086 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79137635 seconds)
  done (took 30.425858291 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.793327632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.792292633 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.793508942 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.793070403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793109193 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.795967728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.794581745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.796599231 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795500426 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.79260197 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795891476 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.792854776 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.793142658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794268685 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.794504365 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.793495227 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.795901864 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.793826561 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.798286572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794715809 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.794524799 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.793467803 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795854836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.794286631 seconds)
  done (took 44.782869921 seconds)
done (took 96.768575027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.555163473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.807157806 seconds)
  done (took 10.076015939 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.798073684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.798154114 seconds)
  done (took 5.315531872 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.79745187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.796613779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.800236244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796067549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.800251538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797629528 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.799233001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.79667809 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.799634871 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798615807 seconds)
  done (took 19.698678454 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.797504709 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.795642896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.793318543 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79993044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.796941864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.794240953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.797747378 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796696 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.797271735 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.793431475 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.7970754 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793370292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796987179 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.794520923 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798535543 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.796691014 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795377974 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79317737 seconds)
  done (took 34.046203961 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.793397963 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.792633992 seconds)
  done (took 5.299005505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.781208126 seconds)
    (2/7) benchmarking "second"...
    done (took 1.78070405 seconds)
    (3/7) benchmarking "month"...
    done (took 1.780836043 seconds)
    (4/7) benchmarking "year"...
    done (took 1.782626865 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.783121774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.785691239 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.780188828 seconds)
  done (took 14.187365893 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.782999679 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.920128972 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979903385 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.424831128 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785942462 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.787459539 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.695510054 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.788062759 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788664264 seconds)
  done (took 19.653557172 seconds)
done (took 109.989412278 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.662588153 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.78503431 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.006327153 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838467827 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.846895997 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.11935484 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.801046306 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.055785688 seconds)
done (took 42.816106678 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.855969092 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.481661655 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.495932036 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.805924888 seconds)
  done (took 15.482509885 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.757654853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.067754132 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.778679618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.632229372 seconds)
  done (took 21.941217402 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145978061 seconds)
    (2/2) benchmarking "read"...
    done (took 2.130073707 seconds)
  done (took 5.979248733 seconds)
done (took 51.959486933 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781402368 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.779510441 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.780423737 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77954942 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.777267442 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.778783643 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.774107781 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.775179359 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.779116797 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.77555456 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.781117166 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.777567134 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.778222384 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77663296 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777342845 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776499162 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777227977 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.774834776 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774797163 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773797802 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776545897 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.774038388 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.775537894 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775335521 seconds)
  done (took 44.35038608 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.776997739 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.77555575 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.779026788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.777566568 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.77345789 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774977494 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.774809484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772977386 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.774158383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774059455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771939684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.77201211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774457356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.773593121 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775052127 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770783047 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773712629 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77347314 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77588861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.772180142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775486923 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774522161 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772777424 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775377284 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.772020465 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772456971 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.777783392 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772621331 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773546892 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.770539809 seconds)
  done (took 54.919034998 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.779400412 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.781911342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775241782 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.774676304 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774682501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.776297286 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.772994765 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.773008601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.773778439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.774672706 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774746082 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774121093 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.77502193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.774857032 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.773534945 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775278305 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.775441921 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.773772297 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773268962 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775517262 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774874855 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.7731954 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.77339496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774029668 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773710952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77306705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773413607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776519244 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775351441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.775337693 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774733359 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.774340981 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.773425659 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775680598 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.773183634 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.773064102 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.777405367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.782163146 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.773814214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774432226 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.77456195 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.774621831 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.773363944 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774628088 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.773810808 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.774123837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.773809832 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.773465186 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.772492976 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775057892 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.774490618 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.774311309 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.775657028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.774017585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.773778932 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.773714666 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775173767 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.774782885 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775359398 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.773359099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775029877 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775198036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772097265 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.772947585 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.774066565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.773374434 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.773990325 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.775302423 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.774042112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.772647579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.774829723 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.77310827 seconds)
  done (took 129.462863053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.775812197 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770474509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.770419949 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770672293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770672201 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774154138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770749853 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774011495 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77052812 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774606937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771651613 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771027673 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773449325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773854565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772538336 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.771687834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774295337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771475668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.773359544 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775663203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775541288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770245366 seconds)
  done (took 40.689776443 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77404771 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774564789 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769959537 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7743216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770958986 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775382613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774130472 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772629461 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774340852 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771960905 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77303177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774610697 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771549719 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770493715 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772729559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771584343 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775369891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77162924 seconds)
  done (took 33.605994559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.771576787 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.772097637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.775221376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.771737346 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.771820616 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773753641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771118305 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774498764 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.774251339 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.772179611 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.774403617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774855891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.774059298 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771992428 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776178206 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771952655 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.772746149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771439211 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77484048 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770568133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77219965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775218101 seconds)
  done (took 40.70070482 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775026881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773585044 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772452152 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.773059957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770700908 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772973173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773668895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.770827601 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.774281394 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773878095 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771537979 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774164653 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.77137042 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772523924 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.774002678 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772789454 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.7738161 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77112414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775605827 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.770918746 seconds)
  done (took 37.150422529 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775229846 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77542116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775509626 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775496343 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778488979 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775865586 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776749441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.775521998 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774440734 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.775138781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.777632573 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776300713 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77657978 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775590106 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776218523 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775840464 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778909166 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778782034 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777046266 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775322547 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777163225 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776569399 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774312674 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.775010172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.77480272 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775865246 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77623912 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777109618 seconds)
  done (took 51.429612024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774071207 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77400733 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.772484636 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.773978277 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.771381991 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.771861261 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.771997784 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771992128 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774539442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774502979 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.774942325 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.775311576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775464285 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775224102 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774952263 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.775180341 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775375353 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.772638008 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772877728 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773246514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775492029 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774671226 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.775205781 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773056143 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774481076 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.774717639 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774076096 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772883356 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776332754 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775008219 seconds)
  done (took 54.916548868 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.796863904 seconds)
    (2/2) benchmarking "in"...
    done (took 1.795114325 seconds)
  done (took 5.285861764 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773331977 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777731524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.774231796 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774903547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.773657025 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.776198729 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774276335 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774023232 seconds)
  done (took 15.891880723 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.778816122 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.77848784 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.777064897 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.775117758 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777530763 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.777120607 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785816144 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775800239 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.780242483 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.777693381 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.785077552 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.783176107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.783518147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778936055 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779131306 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781389928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.775922935 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77594852 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778549158 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.777492851 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778526754 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782646367 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781211366 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.773965628 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781051157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.789668336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.785790773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.778202417 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78054347 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.783107767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.780296638 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.7756479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.779175339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.779344548 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.778045825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.779068825 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788536544 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78122516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.786561842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778389069 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777467689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.773926111 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.783749514 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.780244755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782576215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.78052328 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.778862815 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777216441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.778931014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.784127539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.781715755 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781462963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776789242 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784414879 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.783802471 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789179301 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.782563561 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.783788902 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.788238807 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.790466932 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.793055492 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789018549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783633362 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.780265883 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790640233 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800136015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788708116 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778057409 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.775594457 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.779487466 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.78829063 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793993165 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.791099999 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.780094093 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781250268 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.779081364 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781505629 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77910415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788577306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.787592797 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.780370567 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779916218 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790871942 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80059781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.780975012 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.781580066 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.780793894 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779464132 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781890814 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792767798 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783330444 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.7801503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781791405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.784166289 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.784065657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.781686949 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779578855 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784159615 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.778631572 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.781764979 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781092779 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788089962 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.792566178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782929805 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781416183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.790148542 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.781984115 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783349639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.792175627 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780325834 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782177306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782953451 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78882946 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.779370985 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786810008 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.78927277 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782637831 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.787293591 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.783195074 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.782654974 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792916884 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.805644823 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782085224 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782087315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788464071 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.792309054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782965567 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787495946 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782803584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.780462657 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.77957775 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786945211 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.782460197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785809558 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782196935 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786265104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.779382124 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.783238406 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.783651889 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.786456391 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785571675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785947724 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786589381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789146895 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.784489031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785507441 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.792555571 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.786268851 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787625329 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785093026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780732692 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783816982 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.786344964 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785426053 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.785757465 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784520272 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.787445764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784955829 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78468807 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78314227 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784198318 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.785305704 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788870258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.786797651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.791350162 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.784613156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78220703 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.784789396 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.785974622 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784938973 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782906408 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.784030518 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790808736 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791231481 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786611102 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.78486757 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.789953597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786623806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785877743 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784759032 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.79081847 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792142104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.785908757 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793977503 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.785693456 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787221309 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785857592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788289895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786512687 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784740553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.789736822 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793031153 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799202207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794266118 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786970493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788756814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.789216374 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.788753207 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.792699571 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.78724243 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784706188 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786672168 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788181412 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786436271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788692727 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785984853 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785458038 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785151156 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.784865517 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786088441 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787709095 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789050609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790528423 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782900067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784838196 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786231882 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.787816828 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782977189 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.786936926 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.789022674 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786747278 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78798004 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796091343 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.784282958 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792990681 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788847947 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.789036664 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786840376 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787029578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791743349 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79080819 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795395229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.789489652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.791049909 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796729721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789628367 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786170321 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793148777 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.787001767 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784889421 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791672932 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.794719284 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.788366409 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.787929441 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.787684468 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790696098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787728851 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796546236 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.784121314 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789254483 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787067817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.790446036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786202943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.791455428 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790694974 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789584808 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79398623 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787605769 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788903157 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793242452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.78965634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788959113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.788926487 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793279998 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.794845679 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.795065718 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.791004985 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793275206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791127352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.793884293 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.793808258 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.789961769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.79064725 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802438152 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.796947794 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797653469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793178116 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.788603537 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79780194 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.790623268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.793797322 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791844186 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792940112 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791702834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791157972 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.787259543 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794217957 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.78897623 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793528994 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793575613 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791186452 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.7919743 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791788349 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.789737461 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789727116 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.789279397 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.791614227 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79064001 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.795106695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796341802 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789218849 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793176496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799562095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792759416 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.795338154 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792960935 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.793116145 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790820168 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791686098 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.791632687 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796194868 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.79723211 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.796778687 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800527812 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794466193 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801087993 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792273384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796464487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.79583705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789347908 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.791684986 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.792155105 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.791333635 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80040428 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792198248 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791936067 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.795515249 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791515029 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793034327 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791227451 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.793819994 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792723704 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79149196 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801773329 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.794577094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798760811 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798625617 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789380007 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.793254436 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793188266 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793285785 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798948416 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.794325578 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.795364266 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.794032881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79328657 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.792783142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.7932851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.791861672 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790044161 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792830152 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80257539 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.795455194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797913146 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792080948 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803884964 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792906999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803181942 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.79521365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794535032 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.79298582 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.793204076 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.795814412 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793353585 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.797817806 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.793642429 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.794766668 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.797966319 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.794240712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798345124 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795022945 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.79429463 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796103678 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804722525 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812303087 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.79759646 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795927189 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.791362403 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796708786 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.798375227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.796373095 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794533567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798987208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804726226 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800864291 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.797275053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.795966409 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798339036 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797315758 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794996449 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.79360196 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.797268729 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794645569 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.795994383 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.795818895 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800986147 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.794029869 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797652595 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796316716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.795390351 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807206723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795657594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796150797 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795892119 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.794543273 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.796877559 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798326588 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.794235673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798397139 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794921972 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799498115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802628011 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.800433044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801579203 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798190074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797448402 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.797863219 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796123452 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797616533 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795344215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795692629 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798626123 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.796103225 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799673031 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794234152 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796879145 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.797207989 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794911288 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800313022 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.80371605 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799679989 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794187478 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.795371499 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796586161 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795512148 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798894805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807626381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801824819 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.80682774 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.804089556 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.800163183 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.800052974 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801820467 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.805341314 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.798203993 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.800830498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.798140377 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.80147578 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798968921 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.800833745 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797637996 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805446338 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799889427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799520795 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807932059 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.801791774 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796665963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801513381 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803511325 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.798101091 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.795298207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.796815951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798519189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806698353 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.803515302 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797766352 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80143473 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797763887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.800891516 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801398028 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799077547 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.80219765 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.794672344 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802508039 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799791634 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800490049 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.795544508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.798493276 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.799267044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803764844 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.804698384 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.795176807 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80271136 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.799917378 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.800239976 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799364404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798726798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795545746 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795195726 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799046773 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798311444 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801634355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.80404434 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.800682779 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.801393357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.800206762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800058129 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805013567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.809407139 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.806381828 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796486699 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800171918 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.801750653 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805351669 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800388805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.800354232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803698987 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803514338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799588991 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801248366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799314442 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.804667552 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815058945 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.800089553 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803642143 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803419458 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805754091 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.80063321 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.796328107 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80080474 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.803411411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.803784977 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.805833514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.80182165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810812966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804669802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.802386354 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.803022725 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.805157341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.807354174 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.807408839 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801243097 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.803033664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80806714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.816504446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799772746 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81139384 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828210835 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803018457 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.803624057 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.801900965 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804213714 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.801550677 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.804423756 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.803277571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802839618 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801221303 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802890584 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802687147 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809506855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.806363916 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.802017209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.80177392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803542387 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.803855447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.798264867 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802724393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.802083837 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.802675161 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.802545186 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.803123198 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.805662635 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817822168 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.809609463 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.803608563 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802759172 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.800149579 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808545755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807871298 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813588963 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.808491812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80234049 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.804891013 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.80686772 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803448736 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801130016 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.80582185 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804980384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804758992 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799835949 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.817728238 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810996484 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810860438 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.804770799 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804308778 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803412811 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80965385 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803755503 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804029901 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.807054383 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804945318 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808707982 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.802814868 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803589435 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808753638 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.809929124 seconds)
  done (took 1070.389668967 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80345719 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799902055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802267793 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801209443 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800874901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801442397 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800265544 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801205522 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.800568769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802386182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.80176975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802518263 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801164179 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801782571 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802249484 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801439171 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802493185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802589401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80091625 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801466601 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80213594 seconds)
  done (took 39.555005396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.807340894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.802409215 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801244711 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805164998 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801566965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805050091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803351576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805455222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804506689 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802159952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806019089 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804248248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.801511625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.80057643 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80224085 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805092521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805105231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803337229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80486396 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804062351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805346853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.802777247 seconds)
  done (took 41.406348059 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806641203 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806272102 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.807402142 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.804754821 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806264285 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.804138565 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.806855725 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.805815346 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.80612084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.807872394 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.807463194 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.808516725 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.813766509 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.810275357 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.809251037 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.806116757 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.9507222 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.806965846 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806203905 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808722963 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.802685438 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.815636034 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.803120758 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.804103657 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.806502736 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.807226221 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807091545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.807817881 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.807425344 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.80848135 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.80970962 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.807578496 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.809609647 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811907371 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.806937411 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808828948 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.810131708 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.809018887 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805611106 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.806572174 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817144039 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.821933719 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.80778372 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.817029006 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.808856693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.807122547 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.812255269 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.814214128 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.805802471 seconds)
  done (took 90.48275216 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808093026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.806895884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806115907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808510091 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.809247007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.809268258 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808252349 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808373964 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.806510459 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.805489735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809248355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.806347877 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.804473256 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.808912878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.808604881 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805447867 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806871149 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805671692 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.807008626 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806369731 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.806866174 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809251031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.808116564 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.805920757 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808810078 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.804045627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806109987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.807215673 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.806590978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.806437287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.809016264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809042161 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810936607 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.807548288 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807994796 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.811535713 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.809597423 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.807250091 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.811404691 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.807928396 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809418415 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810491754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.810167702 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.809484473 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807856292 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.805996244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806829421 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.806657349 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.806959622 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.809903932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.811391215 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.80908126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811409814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807470364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810413932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.809665242 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808156836 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.808462705 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.809693405 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.807360215 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.808957002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810506525 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.806763757 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.809553313 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.811213723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.809936035 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.809018497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810408187 seconds)
  done (took 124.688394769 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811018868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.811401143 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813294321 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812749985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811187762 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.810875994 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812362395 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812037132 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810954053 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811183881 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812774206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8112961 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812386493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81244824 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.811813104 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812067794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.812905996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813614514 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81392211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812775573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.814926762 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813927754 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814214733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81441574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814746629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813578733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812265388 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.811508336 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812477461 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812641548 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812121668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81238354 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812912172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.813282168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.813706072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.813479024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813108141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813292611 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.812651313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.812553702 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.812984641 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814246083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814392834 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.813672908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812718241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813367679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814012735 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.815142338 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813186442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812460424 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.814327594 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815474128 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813909543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813750678 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815251977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.813963571 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814257336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815430379 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815711989 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814747187 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814300304 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.814014275 seconds)
  done (took 114.147792125 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814544477 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81564043 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.810909538 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.810035072 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813091675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.81185569 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813083228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.81526554 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816009447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.814400511 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813894987 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811843178 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813308448 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814854897 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812626792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813228851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813062091 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813054485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813915897 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812807437 seconds)
  done (took 37.997322308 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.811251343 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.814281708 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.812355586 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814004315 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.814417706 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812166591 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.814628252 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815633962 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813128721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814102042 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815237345 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816147261 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812850403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813379844 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815371631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813135706 seconds)
  done (took 30.756388127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.813008108 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.815273718 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.815929875 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.81416508 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.812742766 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.814946175 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.81588932 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.81206673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.811976934 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.816090134 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.815837127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.816311556 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.814566839 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.815364344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.815345149 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.819211322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.816335177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.815843511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.81803084 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.817587649 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.815759581 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.8159133 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.819562389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.817468483 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.816961337 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.816060223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.815840606 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.818019801 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.817077862 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.817757305 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.816777388 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.81664501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817719844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.816519377 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.819594621 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816525493 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.819739912 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.817840547 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.820554759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.819432646 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.818674354 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817265062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819040676 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.818206702 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.818016524 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.821203187 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.817430497 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.818023829 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.818328253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.818590731 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.820606547 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.819658229 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.820453816 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821042431 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.817622191 seconds)
  done (took 101.675688547 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819309707 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820756134 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816941265 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821079634 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820169286 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.818827584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.819354547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818113013 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816405734 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.82154462 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.817454529 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819569552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818678682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822841104 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819519443 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820354229 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.819361017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.818594145 seconds)
  done (took 34.486473754 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.816924075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819616924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.82110878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.819130327 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.817250812 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819602791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819378101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821518015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820925594 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821407934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819303342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822071941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821026458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824641515 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81984216 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819344402 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.823225524 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822636263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819229961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818747028 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.822387005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821999394 seconds)
  done (took 41.788096513 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.820956389 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.821855986 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83635603 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.83923492 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.842674432 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.848664299 seconds)
  done (took 12.74754921 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815566312 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822680294 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818843295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820482667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822512737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817142158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817729048 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817954574 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820827564 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81940119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818933879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8229573 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82113235 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820045867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82103306 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821927327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819409063 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818974139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819513227 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821343937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819442715 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82063215 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819758872 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820059048 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819783646 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81826083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821093063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819844673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818446788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821684405 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821950364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819624176 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823984973 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819850986 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822246746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8239361 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819282605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822470818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823404848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821508859 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822834534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824035712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825956241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822700926 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823475389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82102361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822422134 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820919635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822041384 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826487458 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824475908 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821454742 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824287705 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825220978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82685017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82618961 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822859525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822282889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82661481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821715039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821057986 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825209173 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821679853 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82307082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825030648 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823211338 seconds)
  done (took 121.96871229 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821905006 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823408117 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821854362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823293564 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823140986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8228788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821796252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823574678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823164278 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82220491 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82581784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82349531 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822831341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823268965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822988518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821096111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822862993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822937808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822482362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82876839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822785572 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825204868 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823865577 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823577927 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823469098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826005824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823679265 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822813671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824248852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823594172 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824064364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823186615 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823507703 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824738607 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822760977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825171538 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823710277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823664623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82513804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825260857 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825316255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825747578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822473642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824462312 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824333581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824464136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824498866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822947903 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824974253 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823698603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823169677 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825010392 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825531818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824041017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824149715 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82438578 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825273121 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825286422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824121545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827539928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82517864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825197183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828190236 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825646783 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82283163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82611904 seconds)
  done (took 122.131208937 seconds)
done (took 2494.328114727 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857807395 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.80553464 seconds)
  done (took 15.406726697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.993179258 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.944876073 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.827962533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.825424909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.830413551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854314864 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.851653038 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.828212112 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.828764348 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.828136902 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.827578442 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.015898806 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.852459506 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.830393491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.829547251 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.922165817 seconds)
  done (took 51.639257663 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.829119112 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.832047032 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846101353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.834000397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834036706 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.845470996 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.866401771 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.835941871 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.86527266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.842797255 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.899370613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.842312666 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.83192096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.882576754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846260199 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.847137925 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.926016465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.904951249 seconds)
  done (took 35.15438697 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.907654779 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.835193429 seconds)
  done (took 10.492780469 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.854090937 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.884947784 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.858035958 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.825325913 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.841274274 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.836538071 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.825074022 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.853438282 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.873546001 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.847491684 seconds)
  done (took 70.246662008 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.837966961 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.834013734 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.832184832 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.82977115 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.822284752 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.826733971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.831347004 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830276018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.490942633 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.863878689 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.84064469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.838901209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.83214957 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.833636657 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82960918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.858775659 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945890851 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.829595044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.827224141 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.838595979 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.834111667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.888281784 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.843938682 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.830343034 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.862379884 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.488644811 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.841202832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.838798968 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.939066343 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825802495 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.833078747 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.832890766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.836330664 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.209813346 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.09697669 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.834983405 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846709673 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.842602654 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.827326026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.9446635 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.83441762 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.841362457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.559679953 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.081585967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.926413928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.874795883 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.157360985 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.848269983 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.835848563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.862782277 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.836167125 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.836238401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.848750419 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.311845759 seconds)
  done (took 130.173805395 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828432779 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.18029449 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998905242 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828780895 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113475672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040689388 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830215391 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87881933 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830105324 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059759995 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.083935343 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935409433 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827915001 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.829611031 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829704297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827646059 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987143838 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.901519796 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829679193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.82579267 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860722682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072039226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9534789 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.829515263 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858701353 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041515756 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.952412288 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933537502 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.552521398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.828504387 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894655437 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.829323249 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.827778313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.82816973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988991276 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924411494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916348455 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.831713601 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828730323 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828443926 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.584562205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029956425 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926297138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961920731 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08408229 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035691358 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.615265028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.827358845 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.576762286 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994962483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059687591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.060358796 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955036283 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831149858 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.093632701 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829903541 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828638786 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082311505 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063198822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.929895287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829858619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830836161 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827990666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125177212 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.831551948 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928838543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832174526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.830296333 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928275827 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929280141 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065778619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045646246 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863696066 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.159042824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.366275399 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081439008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898398102 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083391325 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.831269491 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830650501 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911154636 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.678670996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087779431 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115882658 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078178592 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870714495 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.554886147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.830143104 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.063248331 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.054550638 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.093953828 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078474999 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071718365 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175987045 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.830843023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.829187463 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.151270339 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959060409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833650063 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183458725 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06366971 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.358171419 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861963495 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138466055 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963051132 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832686368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478331228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.83209926 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063857429 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.874101384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.833825862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832177879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.054504183 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.824588723 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832720771 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.732255235 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89638446 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.835439391 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06823936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836684937 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102527233 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832578138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067253375 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.255337397 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865426382 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006820292 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.079003884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.834473451 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077097892 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.078900046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952071071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107541006 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.744789939 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835941927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121780173 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835139513 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.832098768 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005696944 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.833162867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979959182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.835041617 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127808628 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859058215 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068912907 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835212939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089131981 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869642156 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886196547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.835025738 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967645963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836357764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75401339 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995779311 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836719622 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.834828405 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.393661867 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.834184128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98679315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.061766446 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856546955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911457141 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.500843273 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834635289 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915486004 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856768521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.232345741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.834656559 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.090656344 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.248595111 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835475895 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.833315565 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123483137 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.072587141 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839340053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83360859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.744392181 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.833510524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834126784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019104654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.238919548 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835545703 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039784016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837713667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965964116 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837850311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.908530315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174239242 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83570515 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.835223398 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.834968158 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.838520867 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833869861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045858277 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864203307 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3343985 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973667556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107815416 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.149299319 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.07890951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880856244 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838596738 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101483905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.838259483 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.902181033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.838550551 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859170586 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065772777 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839682176 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049571833 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107947169 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.690633624 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886370492 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.836127143 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838423254 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.835287602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984880122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924332657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838374616 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834968051 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952532977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959738673 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048629861 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.838166994 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.939082922 seconds)
  done (took 895.871286281 seconds)
done (took 1210.729205354 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.835285946 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834072919 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822523248 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.840176105 seconds)
  done (took 29.089687871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.844466322 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841891821 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.841768525 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840840944 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.842775642 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841805152 seconds)
  done (took 12.810426778 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.871813715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836309494 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.840573946 seconds)
  done (took 21.305831779 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.915651238 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.224837506 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.977327351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.295613492 seconds)
  done (took 10.169921198 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.846443792 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841580233 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.841520024 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.843961444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.842377403 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.846153318 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.843030683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.845348247 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.845340272 seconds)
  done (took 18.354853385 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.069821191 seconds)
done (took 97.555789914 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.167382073 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.964782244 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.130230334 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.905081573 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.927724329 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.829856594 seconds)
    (7/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.10853472 seconds)
    (8/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.697860746 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.833764589 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.851687749 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166936644 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236175116 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.997810799 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.937871961 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.830498948 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.199846019 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.914333309 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.846218699 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.978725754 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.954273564 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.113036061 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.935995374 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.339451747 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.295731542 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.982678145 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.219727454 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.298794155 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.016234596 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185529113 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.885576057 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.928204373 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.825686885 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.922676856 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.023502882 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.037426795 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.09270969 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951703773 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.157332799 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.168446556 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.748141859 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.026743443 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.8454917 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.843554655 seconds)
    (44/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.470853174 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.089667852 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.828066805 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.009625011 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.921068283 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.016032709 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.823397624 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 7.475491052 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.856832933 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.981790588 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.949222783 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.507355413 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.935008833 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.846094926 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.185619891 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094025138 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.848245932 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913861486 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.162582333 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.912985196 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.010566988 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.865749371 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.688526733 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.33075122 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.204828615 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.142489878 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.619436896 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.337074364 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.946913852 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.924259683 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.844381665 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.942672793 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.084891254 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.844082211 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.160312398 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.07861084 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.972925663 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.015574696 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.865743782 seconds)
    (83/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.088249445 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.849435971 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.821327761 seconds)
    (86/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.53414423 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.830883842 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.299753597 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.981338594 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.986099749 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.031372834 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.828840378 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.257635575 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174694362 seconds)
    (95/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.867590658 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.826363078 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.979816617 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.84695467 seconds)
    (99/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.922914004 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.96730735 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.000379038 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.14171154 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 5.587282035 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833544485 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 5.70042836 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.867125756 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.843156647 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.617137038 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.98809423 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.845783979 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.209704809 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.897816201 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845999709 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.957061169 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.033139819 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.947528301 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081101843 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250195992 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186538424 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.959843877 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.044328156 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.880796561 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.785660766 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.837605394 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062432086 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.067616752 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.869529831 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.137429042 seconds)
    (129/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.036293792 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947014217 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.834926275 seconds)
    (132/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.19575209 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047774938 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.982179971 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.85732611 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.984209497 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.171640508 seconds)
    (138/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.184010992 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168076737 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.859422875 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.854861325 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.101690842 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.986838008 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.854466734 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.828793135 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.191361646 seconds)
    (147/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.863380872 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029231271 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.856008761 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.302853109 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.937138541 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.872124238 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.214611845 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.870582376 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.481649096 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198864702 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.146439415 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.939075885 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.865601721 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777708266 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.643987417 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.865779984 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.776180976 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.24137047 seconds)
    (165/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.989165357 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.830043631 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.548168428 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.848618404 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.022270476 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.948421851 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007268936 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.837560518 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.116471083 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.852052909 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.134219138 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.958884072 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.849157578 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.854623048 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.214636045 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.036061197 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.946748765 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.162301434 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.537340019 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.878365663 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.757357897 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.954925119 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.939069334 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.831505229 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.947470008 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.08054911 seconds)
    (191/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.243588301 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858035636 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.306324052 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.537864585 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.860833082 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.832034405 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.803574982 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.854084871 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.927280677 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.379902159 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.117180435 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974411045 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.961222332 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.850062558 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.227508335 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.952656442 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.370333451 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.914208317 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.853893065 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.926971794 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.913202133 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.094519636 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.553130254 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254256026 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.028443559 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097379776 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47692268 seconds)
    (218/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.840873284 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.115493026 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.860406035 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.620536555 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.074509724 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.98286957 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.858662937 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.948124008 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.333931144 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.017235357 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.185303283 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.748989386 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.883048352 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.876467709 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.966918641 seconds)
    (233/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945671789 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.956417822 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.855166038 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.005242817 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.125433627 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.966211232 seconds)
    (239/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.833624821 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.040658383 seconds)
    (241/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.878006695 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244892775 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.837889156 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 6.042006124 seconds)
    (245/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.98631898 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.168782151 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.100028779 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.196701276 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.856116648 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997263335 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.885652866 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.011167615 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.949924338 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.95123351 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.063955568 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.064534068 seconds)
    (257/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096933791 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.863200191 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.94557995 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.963391331 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.858195657 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882775905 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.876233383 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.876412863 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.185175178 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.118414942 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.855253202 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.387102153 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.95734306 seconds)
    (270/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091573329 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.878755375 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.915111032 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.591868653 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855808103 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.216918174 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.875668111 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.873815441 seconds)
    (278/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.752548855 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.102453044 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.22413986 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.214211205 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.54331639 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.056103626 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.969026154 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.640058798 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.836748349 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.663379653 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.247369489 seconds)
    (289/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.183029213 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.84274236 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.664099706 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.892790626 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.986863327 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.879918958 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.011041262 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144723674 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.996676396 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.859676422 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.839241852 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.23572784 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.439909223 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.502518483 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.674741398 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084050047 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.85941325 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.183223579 seconds)
    (307/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.303924514 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.099967348 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.15269633 seconds)
  done (took 998.132806386 seconds)
done (took 999.958211021 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.889718705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888669942 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.863490743 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.884169907 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.977553625 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.888508478 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.874981336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.866908592 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.911846682 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.914195377 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.862868009 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.886642362 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.867093179 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.865368978 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.864336654 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888098748 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.180722579 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.898578843 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.883425443 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.874106122 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.882400179 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.862920335 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.915100721 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.887514454 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.868333327 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.867575527 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.869059907 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.885422403 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.978718063 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.867901437 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.868140383 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.877939092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.180744407 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.895863538 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860046632 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885427641 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.878281832 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.874429618 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.869354314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.896661063 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.270984135 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.906289623 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.867823849 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.866582274 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.865906792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.869341412 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.868113214 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.871538727 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894563119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895831077 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.267112694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.929709023 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.875438967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872852992 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.882306231 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.873973202 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.875354747 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897877446 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.892510621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897896019 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.170460144 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.908362134 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874428019 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891060373 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.881514618 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30291405 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.909337281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877056436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277881256 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91725006 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303721375 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.924296383 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874225407 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.888599683 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906245408 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.191527402 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.901133921 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873669256 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882318907 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.871920036 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883070982 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894664792 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.878362082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.874318372 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898149591 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.899238442 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.884967849 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.877167891 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882704109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894563784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.882043287 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884970855 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.876855137 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868336115 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.881835754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877295369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.878341454 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.878877651 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880316903 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.885106376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.277055864 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941725927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.871737687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871715014 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.874573786 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.890719222 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.278002803 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.916466155 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.896672146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922443362 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.87769435 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.174149141 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.910821874 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900388158 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88493918 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.878957489 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.869806951 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175446875 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.303291613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.933820594 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877873084 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.874614916 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901530659 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.877917637 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.875857645 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.193345464 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.907646486 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89928104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001678926 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.886525519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.908942588 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.873006476 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880151043 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.903758098 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90115827 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909044071 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879764816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902717454 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894088522 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.873262105 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888424107 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.886900149 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.877591323 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.881518945 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871844682 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.905174972 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899106126 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897958177 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898172307 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.999450256 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.87408726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.175851849 seconds)
done (took 294.446925693 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948020097 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.874542263 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.97430339 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.87498749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.958153905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.9627659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.871313724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.871498381 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.87097834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.255288672 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.870847487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.872158048 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.869543108 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.871730778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.959160185 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.874246411 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.871707005 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.216273384 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.875486616 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949170763 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.874361711 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.871375728 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.874798813 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.274888779 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.867605275 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.877755228 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.95449243 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874648331 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.224565762 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.871234734 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.870385693 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234028382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.972795429 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.892342286 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.884678518 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.882713053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.96170707 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.879811207 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.959136645 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958654028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.97618504 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915879319 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.873864311 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.873859559 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.87868808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.878252999 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.872707472 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.903700213 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.873622476 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.87357239 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.217968217 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.886102914 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.882552721 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.874318898 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.873620043 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.898537483 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.872724127 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.877234139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971360738 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878036377 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.941329338 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263731225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25657939 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.87708446 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.877390318 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.873737147 seconds)
  done (took 184.785058072 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.945258537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.953547907 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943065972 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.883694569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.926122498 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.945216514 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.883864371 seconds)
  done (took 15.270261249 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.882768049 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877808248 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.928698045 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928259129 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.877445952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.032726628 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876973831 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.888995347 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.874616841 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.904149805 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877880064 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879090921 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.884470471 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871353844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92975694 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.889912698 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.994271779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.878942093 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878289871 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029828911 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885040392 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.875801685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.904551118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.890077011 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878778471 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.884382546 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.45015255 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879831469 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876702164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.880270612 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878020925 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.922127019 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880035577 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.873178823 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.874945767 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991696413 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.87867481 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877688589 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.879545581 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.87459283 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.880205609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.878874042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.879160253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.876250111 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.881133979 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.902159985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.878944601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.879239751 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.879894154 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.8788288 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.905232906 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.87927328 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.876477017 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.877351041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.921984812 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886762578 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882419039 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.877731483 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880083453 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877657531 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.02961684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930555935 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.879283973 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929246867 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879250434 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.879697607 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.880503487 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.880105645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971792017 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.879671468 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93032523 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.878410805 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.041220634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.902852524 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.882498959 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.884336236 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.883919137 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882035089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.875260651 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.889132813 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.876840208 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.882865071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.886786828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878109832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877076986 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.994419137 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.021968837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.878475289 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.895544851 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.889167971 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.87959945 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.926179447 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.881592077 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.878923822 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.938585912 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.998892313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.908316687 seconds)
  done (took 206.678015638 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.886909559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.8902322 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.884550529 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.898286578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.882988661 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.881315765 seconds)
  done (took 13.118354078 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.884372552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.884414402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.882355612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.881449575 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.88192276 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.882410377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.88389136 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884474756 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.887108504 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.882095857 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.883864872 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.884641381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.884460673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.882083177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.883957887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.882729515 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.884285834 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881168717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.88149927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88234721 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.049663481 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.884162262 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883422836 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887781859 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.887106612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.882188928 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.892307823 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.883779602 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.881588152 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.893130591 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.887554373 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.883878311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890253498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.889857042 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.887377301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.887762779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886470154 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.885581648 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.880716878 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.883459725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.884942317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883715873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.883630203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.885383148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.885993568 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893564937 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.888973524 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.891646072 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886232372 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.885503255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.885371013 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.883771651 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.885436743 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.886751599 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.89053645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891531729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.889432169 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.885078848 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.885280007 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.890169733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.885109409 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.886433736 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888223512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.888376524 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.881650781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.885483004 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.889392014 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889325635 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884415892 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.885847163 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.886618967 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.880369097 seconds)
  done (took 138.724889953 seconds)
done (took 560.383206024 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.114204289 seconds)
  done (took 8.911721725 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.040425965 seconds)
  done (took 8.888549984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.4218073 seconds)
  done (took 10.219975541 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.889520172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.911186702 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.896943419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.87900534 seconds)
  done (took 29.399338113 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.883754917 seconds)
  done (took 8.682298759 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.9020321 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.87788931 seconds)
  done (took 15.604496122 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.992185028 seconds)
  done (took 8.790648824 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.887442504 seconds)
  done (took 8.695616151 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.90001375 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.913968139 seconds)
  done (took 15.636054776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.862892088 seconds)
  done (took 8.661804042 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.040554348 seconds)
  done (took 9.92289329 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.901096984 seconds)
  done (took 8.761787835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.909545434 seconds)
  done (took 8.704230046 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.930664897 seconds)
  done (took 8.72568894 seconds)
done (took 161.402113154 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.880220697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.876939557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.878911939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.877477827 seconds)
  done (took 29.308821482 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.916037757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.916707024 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.917521401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.927514029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.919558581 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.915690176 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.909358945 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.909964614 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.928217101 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.919535067 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.918762584 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.919927703 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.916623521 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.90903126 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.91937375 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.919126496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.927809073 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.917950153 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.908527392 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.920646048 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.885256335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.927980733 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.919909597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.883911535 seconds)
  done (took 47.771257362 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.082468524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.957075909 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.038790579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.936327469 seconds)
  done (took 9.810250044 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.936086245 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.936147497 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.949438499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.987593411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.009986632 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.946691121 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.910905617 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.906067316 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.892754672 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.93811741 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.013019428 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.932009141 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.030424185 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.884053277 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.071446302 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.884590865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.883435462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.936492646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.987641028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.001895306 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.885948366 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.93674531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.938841926 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.933112323 seconds)
  done (took 48.530477191 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.882513129 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.891249907 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.890492246 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.883487305 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.885862735 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.884018605 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.892901553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.884776085 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.906076569 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.884315877 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.882421647 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.883913536 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.882828675 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.883766811 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.883071308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.896924224 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.897440387 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.88378629 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.8887776 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.890432607 seconds)
  done (took 39.55663599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.879078061 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.73083874 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.229988427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.134792423 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.878949878 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.882842836 seconds)
  done (took 31.534351229 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.901906411 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.893867131 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.888186028 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.945320419 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030867714 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.895146358 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.88867137 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.900851304 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.936198529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956456649 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.910004737 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.918487648 seconds)
  done (took 24.862979994 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.882918313 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.884382107 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.884635383 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.899306235 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.897320659 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.894872526 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.894922292 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.882063361 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.903807887 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.907597585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.896074282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.899800491 seconds)
  done (took 44.53076831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964162425 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768251803 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327361658 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341949376 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413936588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09122435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881135847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975617206 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.885199929 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153642633 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.172270784 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086125206 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133611239 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671499826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885823507 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.328475704 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173893702 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102863005 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906072862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483190943 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989841708 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467240364 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.542751903 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991188977 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090366519 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015223575 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.14131732 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.838885195 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935383208 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889976108 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891841032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882503758 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154732105 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007552699 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957558866 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892360774 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304292128 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.594098565 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.870697287 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.549682567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.400224169 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002186044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892537496 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885747365 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.818348367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457728381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981209052 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.88977871 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.587921858 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88612164 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89452501 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964975211 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887490209 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702039882 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574706454 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160418558 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.883229069 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890810638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450796123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896278757 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.565542078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.82552419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.980587849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.501296698 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339028786 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.041609693 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.888479256 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889046737 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819268935 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55211828 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998467263 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030547102 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.904024505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534132658 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170029878 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.261816972 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940818826 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166014652 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.722894357 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.826090481 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110973332 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.836565943 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819287886 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.724351498 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81758474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093774826 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914626584 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.459757104 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916278263 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976484315 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898039646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907486173 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89461276 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109663663 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.765575344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887040874 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.138548302 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146556049 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90996141 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981750835 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821571469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.892046406 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141936742 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097695586 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.194866839 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.34677414 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975219104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883254581 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.9001524 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.871479307 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898999622 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.162315192 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948755305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884010536 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005727671 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84189981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125614019 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792886793 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.116473938 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.204197255 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12432725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196797178 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131254034 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953166552 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887536971 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.888445749 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564819051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.502998392 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.111706218 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.883085795 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440677436 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898709407 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.889852238 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821188114 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513991763 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204642482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.969642848 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108468979 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.893436281 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159638691 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820468026 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030793111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.882574662 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.106250416 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530309215 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.95952034 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142590103 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193194987 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.188559345 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89421157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901046702 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981092139 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904622015 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.380920159 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136181703 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.885629638 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885670816 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540504727 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950050472 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895786562 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.892908834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422941526 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161402102 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915290577 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895060517 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.773682938 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.899594825 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95231916 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891252431 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894766002 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407698903 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.398731937 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.89240441 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535509509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107900308 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893324095 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.536409748 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071402387 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.908781674 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159327221 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957820164 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.821465619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.592698642 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.595700193 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892040297 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825266554 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889940523 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896781858 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899064206 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.084397114 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171262845 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939087922 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.499083777 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.993745962 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899914474 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.894733481 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89156086 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388545643 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899284529 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441964284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012170926 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024484766 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.903315734 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821388242 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892202649 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893258797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890109995 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.842250253 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940390313 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.490122799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098649533 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150555435 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.305238866 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904766364 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.507634081 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.004668233 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.910590839 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.145358954 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471269223 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.993756012 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973664189 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.900197902 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.55763537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.62960309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459675992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189290701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206152134 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232387735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.325343876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.223750129 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981911465 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125314561 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41677688 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948088047 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98253244 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8323061 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907311418 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.534288035 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238040357 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902159958 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110888312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171426496 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.202012987 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026121801 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102649765 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925222567 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.752674146 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933124648 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.412998632 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915619345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31590317 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097582686 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98180031 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.157847838 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.979019972 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89011202 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219161425 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925567426 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.598439848 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2526735 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351990351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.32407677 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118521084 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901476487 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335178801 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2435678 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.127803701 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025297473 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827118167 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900107235 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89961875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.884984024 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.87081894 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.743995907 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.140161085 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89869531 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125698207 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.062904763 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273225272 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.802043345 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.894339648 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888234916 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131227564 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.592341647 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056093607 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.241029758 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.468864721 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894105325 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816313532 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816972483 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.585708004 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891793106 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.856871173 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084867783 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.987642129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571031545 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305308688 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202655224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133913146 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.893737954 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152337084 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157242369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.375832008 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903507644 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.980960931 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.13233216 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.563863155 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.115565894 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127080263 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467478143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116326519 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340887669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.842345864 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.890213663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104694905 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.113191178 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.228453236 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071210232 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.60602552 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.898929889 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256035562 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959764824 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.238273583 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084282421 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.990793558 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905702484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975927053 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904061316 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.905572822 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908008551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907407168 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239099241 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.010857925 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.908565088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976428102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908431519 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.465217432 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.906654735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171086621 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242856807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233256569 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960800883 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89790355 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896891615 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829621912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030475709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340939836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169142341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021773634 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.037503174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922034672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.18156045 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197865094 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219533275 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170762609 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.790281313 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.569518681 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029057574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.118856771 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904315938 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.105317088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102752081 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182479262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357149682 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.079254081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095859221 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165331349 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.260018775 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891565465 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477258486 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.899706618 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287790794 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925075049 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.260497273 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153647326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906016004 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023245027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90647365 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.100922901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.34874714 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585069795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251182878 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.757371352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908381541 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180835305 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227239297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208717771 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979382902 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906518372 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.624639705 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035964446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.757525506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.1210152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897352169 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110275286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.609406533 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904579937 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182698545 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205820849 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.891962219 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.777469457 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916249242 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.901548584 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113166097 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105478004 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142399376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901074211 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900461351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.70622777 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176785733 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959749502 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824257638 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.893274533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941252092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126027188 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908942302 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.406599533 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591328355 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167359532 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.805557109 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909930303 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335679276 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282199252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225976267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417161832 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109389878 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.443482647 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.780474144 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271005673 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.890448391 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339196854 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272092527 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.888233312 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431395272 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005515921 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.15849481 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211906526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.898961469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613739937 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.938004965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125613712 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272773156 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839297617 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906897996 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.932030483 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901313465 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.899253993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911545459 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.817325997 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39238625 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.749070348 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395819706 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.903960514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.006965138 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.215630724 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479126375 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020678848 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927133558 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910519796 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.611222906 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.191299614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156477113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.453654267 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.978505537 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.901832576 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899417426 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826173779 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091866661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093421564 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176756853 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.285830212 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.015723586 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900870577 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.109650321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108780832 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.263876734 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042936766 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075875349 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024814836 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.831633988 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.618611915 seconds)
  done (took 1672.806500429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907261045 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.913534065 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.921835868 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941092675 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938290037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914876765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.960373311 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993795389 seconds)
  done (took 57.313021369 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.904742562 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.070636563 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.915139026 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.906525962 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.914883147 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.90632842 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.079061719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.918688852 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.91513455 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.916440703 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.9070962 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.906465184 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.175419958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.933012106 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.90711824 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.888375952 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.923423366 seconds)
  done (took 74.919713995 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909791586 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.135760936 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.936889224 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.908391166 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.097684704 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.909693594 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.902409409 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.968950024 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.913408101 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.319788624 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.204573197 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.915212138 seconds)
  done (took 90.946757003 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.9217213 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.912432951 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.913447578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.913064427 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.913341403 seconds)
  done (took 11.403472869 seconds)
done (took 2185.107280758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.140929994 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095083796 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140809465 seconds)
  done (took 6.059474952 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.053786001 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.105083589 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.222221469 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.228103283 seconds)
  done (took 10.437285402 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.194602546 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.291088806 seconds)
  done (took 6.309324 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.232285345 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.929118323 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289929584 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.907288357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.908259743 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.910506215 seconds)
  done (took 22.556327172 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.910547386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.915295674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.910729938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.913837989 seconds)
  done (took 9.47371016 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.889550887 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.606313036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.89225545 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.90639058 seconds)
  done (took 21.120465792 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.062022875 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.027033518 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.054204773 seconds)
  done (took 7.967691591 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.133882429 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.142268197 seconds)
  done (took 7.101113046 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.074953807 seconds)
  done (took 3.898914119 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.937771776 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.18189677 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.403445302 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.435491793 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.510389741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.744406347 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213840827 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.145984931 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.355238365 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362780765 seconds)
  done (took 25.116539799 seconds)
done (took 135.456795017 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.249959667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944452659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.11771566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.267190418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.146573087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.117606293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127914941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.256130644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.944329973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.933413581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.271983316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.137700252 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.078877975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923492142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.08463138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.923334138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129862083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.268247561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.951512384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.192225611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.145040586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.913237084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.108859914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.92771582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.134979718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.066210296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.457943762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926748528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.092048743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.469883927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.068363789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.334415731 seconds)
  done (took 169.539945992 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910206916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910404635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.911688244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910325913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.444233425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913193447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911697943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912121922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.296957667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.31824836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.915830353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.434375351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915296002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911925942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913131003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912620964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.457937313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914695425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.912382357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.912870026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.914929823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.302754436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915037163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.314913963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.440553076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915374179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912675874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913202356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.91295388 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.913751001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.91576193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911905606 seconds)
  done (took 210.75279808 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.909450224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910143616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910675908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909944103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.91106254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.91228223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909445504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.910592949 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.529662579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.525194599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.910910362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.911364603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.913180921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911098363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.909741831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.909768403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.910044811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.909664209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911705763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.918786683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911429412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.49474304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915930219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.520843483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.923758116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.927331872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.90930108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911942201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909824164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911557046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911111005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911942967 seconds)
  done (took 221.443520038 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.170034366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917308706 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.917496084 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.827475744 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.920727745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.918453731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.930255825 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.166738345 seconds)
  done (took 19.60108891 seconds)
done (took 623.170668171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.389216592 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.235650674 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.095778049 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.938889406 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.312834859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.988191211 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.933974902 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.000096636 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.543468533 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.003867026 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.561487227 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.958804644 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.645100406 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.963032029 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054873743 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.994708221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487356157 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.575255444 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.113415469 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.130840783 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117101094 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.857593824 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.019088502 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.584744864 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.669258468 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.909038873 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.991327652 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.485255111 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.946384068 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.093991065 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69361126 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.237775376 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.95117931 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.937237115 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.992172259 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.96879058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.19120569 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.948759786 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.062364231 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668917084 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.12764034 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.473251663 seconds)
  done (took 104.68301192 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.903346736 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.901901972 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.902509068 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.903359516 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.903392812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.903136373 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.902984757 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.902005369 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.903076532 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.90285668 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.902852677 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.903464413 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.903252543 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.903979226 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.902755188 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.903220787 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.903209801 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.903957849 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.903520234 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.903946719 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.902625022 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.902605595 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.921404755 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.903740055 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.90517348 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.903572282 seconds)
  done (took 51.339557893 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.919611352 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.089138317 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159619441 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.944152386 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.922252075 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.92327664 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.939570671 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.925789801 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.922415478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.92348277 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.022094663 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.926719475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.940502737 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.159175953 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.939701387 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.921096349 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.92035288 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.921855909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.093717048 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.937533189 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.940005341 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.926895803 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.939671744 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.933754667 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.923371415 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.920628024 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.924879909 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.412586483 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.931687364 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.021943988 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.966419846 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944890293 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.357954559 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.169228228 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.978167115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.930292309 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.921810184 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02698018 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.929002656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.921921247 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.94071278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.927307461 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.159698563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.426976239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.937513911 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.923192329 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.419518678 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.036853494 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.963684316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.932290096 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.161540314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.940633456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.922621259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.922337972 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.958022714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.927312044 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.920913552 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.274661798 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934606527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.93991872 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.926734288 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.922517163 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096486217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.931779354 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.087219659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.932095639 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.927942809 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.922174175 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.161233395 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939577332 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.432115123 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.937451334 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.922019877 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023429823 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.092287086 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.447481178 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.935305958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099202429 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.374844856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.947594619 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.930109363 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.400832206 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.95172261 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.93088194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.923039605 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.923042142 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.922249711 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.964665263 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.938601096 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.348057396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.437199561 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.285777799 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.949900154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.938404981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.924744091 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.268109602 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.932350445 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.921466144 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.155151263 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444219767 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.93661847 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.929669778 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.414387364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938111081 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.94077071 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.92943377 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.164461478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.941213933 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.963412521 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.922503714 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.929346845 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.924655386 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.942887153 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.930055553 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.922700107 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.410577721 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.046517292 seconds)
  done (took 238.616669456 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.917990912 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.921481379 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.91804077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.922962982 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.917555702 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.922091034 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.91585447 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.917311579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.921945744 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.916967114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.91669394 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.917804893 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.920239367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.924567945 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.529072852 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.924807637 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.523446612 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.918757816 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.915975743 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.920325422 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.60378559 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.921239803 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.9410305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.915282674 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.917213136 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.917408157 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.91467542 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.920338152 seconds)
  done (took 169.492265193 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.921069201 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103739895 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.940540579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.963346706 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.930061576 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.919273097 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.945805543 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.943741676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.927536765 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.919351456 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.918669528 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.985163915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931973018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.06234195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.954877527 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.952619807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026159373 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.929644808 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.920274674 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.92038615 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.95163561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.91139145 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.984141877 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050269282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.944035089 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.039598668 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926027241 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.922579279 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.921912517 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.041062172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.939021864 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.982493593 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.951638705 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.944157958 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.044852276 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.041416662 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027714742 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954575096 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.926423047 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.918656909 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.918030282 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.903461982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.038067352 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942481579 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922907307 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.022164522 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.939171041 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.922123946 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.930289998 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919565727 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.936672816 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.943056362 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.990511426 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055150065 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.954410582 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.949177941 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.94732741 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.186946059 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.930281542 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.022264515 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.91204529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038788459 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.94580374 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.903895394 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.921358926 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.926415747 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.949324994 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.956797215 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027229904 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.930402254 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023139925 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.957922757 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.930578757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.920249631 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.92363898 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039739553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043374511 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.956645493 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964151837 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.957987568 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.913403632 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.922489818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.90481337 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940425307 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.928478121 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.037019643 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.043593345 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.931418284 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.925494802 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924203764 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.923773261 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.948818033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04930665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.960271711 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014635099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.993187505 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.997946169 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937586551 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.936056086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926820674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.987349879 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.938682848 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.933689525 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233654002 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.993992961 seconds)
  done (took 208.227359611 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.309293347 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970315423 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.979937917 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.238735134 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.266455833 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.85655777 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969296366 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.971110539 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.996052241 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157384057 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.036336131 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.988387557 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.9606215 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946180637 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970974659 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.992923955 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977190842 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.306425848 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073852266 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.127132601 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.960420623 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240434232 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.249214768 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.35562768 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.009741462 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.379480335 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.554090667 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.106175878 seconds)
  done (took 62.792841286 seconds)
done (took 836.980035255 seconds)
SAVING RESULT...
DONE!
