cset: moving following pidspec: 1922
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.681670919 seconds)
loading group "shootout"... done (took 1.13482873 seconds)
loading group "string"... done (took 0.424934814 seconds)
loading group "linalg"... done (took 8.110737973 seconds)
loading group "parallel"... done (took 0.163309943 seconds)
loading group "find"... done (took 1.323783948 seconds)
loading group "tuple"... done (took 2.03860098 seconds)
loading group "union"... done (took 12.824855195 seconds)
loading group "dates"... done (took 1.360687611 seconds)
loading group "micro"... done (took 0.202210026 seconds)
loading group "simd"... done (took 4.441819276 seconds)
loading group "io"... done (took 1.051267325 seconds)
loading group "random"... done (took 8.859665095 seconds)
loading group "problem"... done (took 1.611431055 seconds)
loading group "array"... done (took 19.780558164 seconds)
loading group "misc"... done (took 1.591771736 seconds)
loading group "scalar"... done (took 40.175671698 seconds)
loading group "sort"... done (took 3.072491848 seconds)
loading group "sparse"... done (took 11.987123288 seconds)
loading group "collection"... done (took 17.600162088 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511874221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127869147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131569521 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120999886 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149425151 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121241117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128205279 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086020101 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.914356139 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143998821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115336721 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440516316 seconds)
done (took 5.35892427 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168867933 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089934224 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080571636 seconds)
  done (took 1.317734566 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065193022 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137785347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066345502 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067007309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067149693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066735181 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066220803 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06625983 seconds)
  done (took 1.680427312 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073197373 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06773667 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065161843 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066769607 seconds)
  done (took 1.423694388 seconds)
done (took 5.823716006 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.242379336 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.102322118 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.287739742 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.39578611 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.463695175 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092664435 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075069876 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070765751 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126621709 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347577183 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104020762 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184067567 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091069096 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174385238 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.993647191 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120221408 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084871545 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.123072608 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093090128 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129569428 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.413892936 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078787378 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073602523 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070694101 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06771141 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645915822 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668105807 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133080227 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083375405 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100645948 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116291525 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.633176947 seconds)
  done (took 10.571749361 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096433961 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093817985 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068940472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125605302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09235387 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068691248 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075206587 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067346143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092684621 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125690751 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089675974 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099158504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064827965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067662393 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074159984 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197109711 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079136363 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08007571 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066607705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080468462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10765417 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077379701 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07816461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079373727 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130043106 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170609532 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096524689 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096996645 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06678309 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085163958 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114818607 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127713114 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065037945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064489394 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121903876 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093829386 seconds)
  done (took 4.583273159 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.968971993 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092895231 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104370189 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.626780691 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065530457 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.155457278 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245547098 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072721103 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092039683 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.43054507 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149954012 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.113487224 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148546151 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.119183854 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069755584 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.240140766 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118159316 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.422505516 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068157617 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066850315 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065666464 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068430022 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068362316 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063209408 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070007667 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095077345 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087874185 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.17135935 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948747177 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.252065269 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067571728 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16460509 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084318919 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.358040432 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070723076 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.084030015 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.415597003 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122331667 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064426768 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172169819 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117734075 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065170956 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118606598 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07911194 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069320869 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069437777 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068376575 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075154335 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079039406 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101827822 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068417078 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06488769 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087076316 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165459691 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06551834 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066923528 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063891404 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067614237 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149241951 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065277969 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143770798 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064355389 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068662147 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101463344 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068614665 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090464084 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.102610179 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.347828023 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031857961 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06646992 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.89257143 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078260329 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066434874 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071581439 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066868779 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067706293 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067424666 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07414485 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070606533 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066904496 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108961276 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066399444 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070421125 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066833987 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071516503 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100711006 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065766011 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.484321758 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096965227 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065262908 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.07721805 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105857402 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066001943 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073062896 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067824122 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067226895 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065863599 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067187061 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.182257339 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094716815 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068859364 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113316773 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.024125671 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067450798 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065893225 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071756323 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069706927 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069535525 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065173339 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06601322 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069624129 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068534781 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064872135 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.112021264 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067238358 seconds)
  done (took 21.689770694 seconds)
done (took 38.963258827 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261171522 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081860892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082345705 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082381746 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082184038 seconds)
  done (took 1.831093429 seconds)
done (took 3.063978218 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110537524 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063758919 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101232223 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100122297 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.066740849 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064005403 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098499841 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064128149 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098772432 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100882855 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102757561 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.10200876 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063999902 seconds)
  done (took 2.377847014 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070292371 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08140168 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08319165 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062007639 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071947892 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081945558 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061989734 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080893182 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087978298 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081562576 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081860903 seconds)
  done (took 2.074604512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069707933 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081877077 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.087000867 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061687151 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072858626 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082092607 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062203793 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081506447 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085114222 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081956146 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081796964 seconds)
  done (took 2.070142026 seconds)
done (took 7.74343997 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068244292 seconds)
  done (took 1.271258854 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.539552694 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.595928892 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.068099228 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.088497515 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1924887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.099802758 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.227915785 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.073642211 seconds)
  done (took 8.27566526 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102857414 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06793536 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067689756 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068427463 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067940427 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068595178 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06966079 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068397078 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069355724 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068268066 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068850563 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069638142 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06845727 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067711618 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069768045 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067629385 seconds)
  done (took 2.443281525 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09962061 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096957992 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072900515 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074293888 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071562124 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071041913 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073701351 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073325778 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070258729 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071556977 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073944758 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072486655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072080638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063085033 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073559065 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074795585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069929923 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073082599 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074156441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075064882 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074214006 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063242692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072033277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073291946 seconds)
  done (took 3.112733229 seconds)
done (took 16.324658759 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116302401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076580727 seconds)
  done (took 1.399787583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07044616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071074041 seconds)
  done (took 1.366952535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07720087 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061329114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08307161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073189416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062110012 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061201391 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081489618 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061674534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061464377 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062298717 seconds)
  done (took 1.911255089 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064146872 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071007135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068617853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.070824602 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068572371 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062993205 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066873243 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063499273 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.071125519 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062100565 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0673141 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082922112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066951559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085385131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066422812 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067435718 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069553067 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066629091 seconds)
  done (took 2.471320851 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061901471 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062363618 seconds)
  done (took 1.359249294 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066421459 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062707907 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065522673 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065636362 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062633294 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061832264 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062146615 seconds)
  done (took 1.673707742 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.428293141 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122536369 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.351072646 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069384646 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079177635 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255560801 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063675755 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068425545 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068579922 seconds)
  done (took 2.777439603 seconds)
done (took 14.197266587 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081689726 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084784586 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090480986 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429806399 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092275558 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066974048 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112945999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180215721 seconds)
done (took 2.390862333 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216053671 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.415697712 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.95809445 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066594804 seconds)
  done (took 3.672875773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343136231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085901481 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078133204 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067933965 seconds)
  done (took 1.821896111 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065826205 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071429014 seconds)
  done (took 1.381304154 seconds)
done (took 8.34216223 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064792892 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06344012 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091169125 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064412955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063606239 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063604035 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063736536 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063357251 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063403688 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063028146 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.063197233 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.063283549 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063298373 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063799796 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063533466 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063514944 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063738439 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063857463 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063707329 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063532139 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063385524 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063268913 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063919238 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064352563 seconds)
  done (took 2.826503776 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081746774 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066186649 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067501788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067095764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068138502 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067789288 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067776295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065756007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068098373 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065967795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067759972 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06761617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065372369 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06820067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065422739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067940647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067375125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065906277 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065486136 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067784916 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067372699 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066237676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067623054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067675169 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067757857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067983025 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065648595 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065877576 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067472541 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067963471 seconds)
  done (took 3.284852178 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065133424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060056176 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061323984 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06972037 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059892207 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060446792 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061657371 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059829949 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060820865 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061960318 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061206052 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.06031591 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061459647 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060097374 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060080692 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061005685 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064313548 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07842773 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060479236 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060206305 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065559051 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060164937 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060018284 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060477258 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060978718 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061000233 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059781687 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061186576 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060398347 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.06113942 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.069416803 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063936017 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065115562 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06020802 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069381108 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064648951 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060497927 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063866816 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061793592 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060192054 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060043926 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060324547 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060093936 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060021304 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069374069 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060508452 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061476838 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.061086376 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060690416 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060160281 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060307042 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06235946 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065803241 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061807416 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059829903 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061164956 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059639382 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060813514 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059935467 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059750706 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060155153 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063166116 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061953149 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061533763 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078679415 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062165935 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06932774 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060223122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064026548 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063667196 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060959038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076499485 seconds)
  done (took 5.761988699 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087567532 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088475115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065519919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065017772 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061141179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061244968 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068751517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060863958 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064917297 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080717933 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060749231 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065130014 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065289533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064722318 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06087433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0653546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069620433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061310143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060871251 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064589186 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060857961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068670263 seconds)
  done (took 2.74466222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142820439 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066658774 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105370978 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077376217 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069547052 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077162673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066475148 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066912292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06674438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067058121 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067099987 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066677981 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069383623 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066981243 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06719326 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067430611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067076245 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067222696 seconds)
  done (took 2.609501692 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078345251 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066263812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089221253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065691293 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06626125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06624151 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070309207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071283856 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065717474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066288356 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07110893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065689987 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065748339 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065833316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065601325 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066205883 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065342562 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065930779 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07080749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070691636 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070811978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071523717 seconds)
  done (took 2.785008009 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076066434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065261923 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080057288 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066380723 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060567713 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060564145 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066248633 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065207212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06604796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064533201 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0652788 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060850938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06699187 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065201672 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067335414 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065565105 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065204275 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065497112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064770083 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060844055 seconds)
  done (took 2.583265342 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088219261 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063954965 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06401686 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082517547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064078511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063722244 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082422189 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063809761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06425007 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085211135 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063606029 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063847939 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083181311 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082377284 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063593802 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082485209 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083246713 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082561543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064001689 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064072366 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085762756 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064079022 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082729886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063764305 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063796615 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063732065 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063643949 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082834266 seconds)
  done (took 3.291383072 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064474483 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063146087 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063250638 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063886345 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063367823 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064501673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06390813 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063671203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063394683 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063885415 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063355663 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063558978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063228263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06342398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063669308 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063953653 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063481172 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063970082 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063305878 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063670965 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063806261 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063589832 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06338146 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063659327 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063710486 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063373611 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063939884 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063797284 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06360023 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0640154 seconds)
  done (took 3.181303381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075255559 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072345175 seconds)
  done (took 1.420161687 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06333901 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077009587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060445923 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071028787 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070025779 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064471424 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071026547 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070032 seconds)
  done (took 1.812358139 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.068996802 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091772122 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062630373 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06350269 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066460111 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122481143 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0776092 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0728943 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07835975 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064489386 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062911532 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075171159 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061818005 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07448204 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06429188 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070510566 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068939923 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074029233 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074155109 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060657309 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073678528 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063169393 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061079005 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063304143 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062382145 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068322143 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077394536 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073851083 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070421307 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059756068 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080850558 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061049225 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062319409 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070179217 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.066243427 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061306663 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09751063 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061436165 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067367147 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061004057 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073217244 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081405865 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074940517 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079100411 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063033096 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063457932 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061008186 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063496753 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064521353 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069921672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061255017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068208779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060814412 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06278534 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071188616 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061491909 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067605495 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070174926 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073648302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071027007 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069518544 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07568924 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069361867 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070496246 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062279425 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080096045 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063233184 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073226025 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075302529 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062602863 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075005887 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061095571 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059619495 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06095457 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093568028 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063273207 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062846822 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.06101671 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061546479 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.063014211 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070025617 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067513768 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06787216 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065122164 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076863 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069838136 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060784168 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068986183 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079050078 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064202435 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061014123 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077160605 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063936263 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060379767 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078710055 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070001061 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063054835 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062008842 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064317406 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074445123 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062629035 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059709333 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068559756 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062592955 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.064083028 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066324174 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06844445 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060707775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070511597 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06701357 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.0629058 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059806128 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064951593 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061922471 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059546326 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06947557 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060543005 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075332477 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066836704 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074365955 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074035707 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070528171 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07545669 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060269741 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058703254 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07752029 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.201972912 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062727208 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079872034 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060614929 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070790984 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06024047 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062109056 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069089006 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05907013 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063744716 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061544902 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067714496 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062926497 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063574035 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065101657 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069386563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073336153 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062814886 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069239165 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061973847 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077091699 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070746064 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065646347 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066086538 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061859595 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073289898 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067518546 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070403872 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060964125 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061529626 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061061516 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071329974 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07065323 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063261906 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070141088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06531542 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061980519 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061490432 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062581964 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064299907 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065807243 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062182287 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06830918 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069457528 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075282455 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073271862 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069589344 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060128457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060542571 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063173728 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061198413 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065481951 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069933952 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075990557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072955169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081212756 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061376931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070630662 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06339282 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077679271 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074013051 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062442182 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067027403 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060143033 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063349147 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070225687 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072514207 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075183547 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07585791 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065718844 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065215746 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061017593 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075461593 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061819419 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069210095 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070236292 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066639019 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061111365 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063288348 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069912617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065615063 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061576262 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076339872 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068466345 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061219936 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074831371 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061577683 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.07220569 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061224193 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064660594 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065767335 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063918722 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070003065 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076121354 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060005322 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061854811 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076915683 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063707471 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063002312 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068995198 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075896472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065573804 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06849841 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071556756 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070626484 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065362122 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070351905 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06224478 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070664772 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06506776 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072580814 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060883037 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078666352 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060129216 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.0753272 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061999472 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.072235303 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061988813 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070379913 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061967462 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077225036 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.06263247 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061766307 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072508669 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059656519 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069346709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060298475 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065007391 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066534132 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06915092 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062206075 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.206588431 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065101133 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071303054 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066784678 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070729296 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.071237598 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06635566 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061242874 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069406235 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072964458 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069373536 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063471198 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063699935 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062936308 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070874047 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062954285 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063233015 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069524015 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065887353 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067163638 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063704475 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063771558 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063457003 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06955807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071108357 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079060245 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069585102 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068324638 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070799286 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061127433 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076318645 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060935272 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068651078 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06039466 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068677712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070767684 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061819954 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080628497 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062945875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06899803 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074464951 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06985469 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064610583 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079513998 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065768568 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068961078 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069109372 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065929566 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06783844 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063203217 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068986344 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0707577 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071761453 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062181948 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068515976 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069537712 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063653557 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071044942 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063666813 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0690158 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063346376 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060863207 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06582712 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073135719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065822912 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066239876 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061580064 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060482738 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061916089 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069732641 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065988011 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069728241 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076161696 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060306471 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062481263 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061001827 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067632607 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079166065 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070990921 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068256668 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065854447 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06050923 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063492471 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063546187 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06199393 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065463738 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060321095 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060955716 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071735339 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063343023 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065103159 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061551458 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06282008 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070056757 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066771326 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062154171 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067465733 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.06083179 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065897198 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060750895 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063696519 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065425245 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060777037 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064279458 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071265621 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076781516 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067355281 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069324743 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062045668 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068727488 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076066119 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070116598 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062166667 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069685837 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060106248 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079021159 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069931907 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068739204 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070176517 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062006935 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07737686 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065164295 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070625359 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075939837 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061905887 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068519731 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060132212 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075602179 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065124883 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060208444 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06794316 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067645541 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.206185238 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074285651 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.06355165 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07045571 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068531246 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06559176 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063625076 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063477545 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070090233 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077319277 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062781311 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067102484 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068898681 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069332673 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065840152 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074005682 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069600606 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06278739 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063481514 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064749521 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062672944 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07355197 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061935689 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065579194 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065721637 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061084526 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067280306 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077112342 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070495491 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071260472 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061395076 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060698109 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079688542 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064345647 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06619205 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069130687 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070091863 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074367982 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070707481 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078686197 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062782535 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066790822 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073766179 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062935664 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061442669 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064596666 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064491997 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069798229 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071233887 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068124423 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063631357 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067415895 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073793295 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062898111 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065693513 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.067137226 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06250848 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07165078 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069244738 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069783933 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062950574 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061608856 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064387731 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069712023 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06802801 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070053457 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062653868 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.06981454 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075561857 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068567576 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065549993 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061399205 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065873642 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069894799 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067221136 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061298815 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065974714 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064736234 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069944057 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070601826 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065919949 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060944059 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078345026 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069658847 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06996074 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063664126 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063691798 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06218101 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060915933 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072656948 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061100686 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063467015 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066293679 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063514747 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078702798 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069170039 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076937041 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062576267 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065495472 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061036116 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070427 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06596709 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.062273316 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071530919 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06098835 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076734219 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073351532 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.070826772 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061150849 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065703999 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069040267 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075534891 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070676207 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069739545 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065258298 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070804922 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063501391 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072135175 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061162872 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060037026 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071072715 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068838579 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073372318 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060739262 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071291998 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062932119 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068472614 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069095783 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062648229 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062757081 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06232218 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069706768 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.204908721 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071881927 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067338421 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078914551 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063780457 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072706915 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070183449 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072922148 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07490612 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074232241 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070018112 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06250673 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068348447 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069700022 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062930334 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065635725 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065633179 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083828983 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063444826 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063472581 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076366925 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.06994727 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061740993 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069393166 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066049517 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071433778 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062934951 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071475713 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066820518 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06297209 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066106381 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065839425 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06044517 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061242689 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061422125 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071459536 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066073433 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062258049 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080912328 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063417956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070002692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072692479 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06774908 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.064161127 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060267984 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062729662 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073250163 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076574725 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064141896 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069378597 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063296584 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070357043 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060432236 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087667709 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068920169 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069099208 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061195069 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061886833 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075642383 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076299701 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066003886 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07059724 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070098015 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063582689 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083260875 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069646552 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062926483 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072605118 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064481197 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061110233 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060633417 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063377771 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074509443 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061507023 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064712395 seconds)
  done (took 42.125596369 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101880898 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062784732 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061708525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061156863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073618518 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062670963 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061075788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062425037 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062605856 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064603587 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061402896 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061134975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073603566 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07622386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073219865 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065829116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061235216 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062360832 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061271363 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062264606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07264728 seconds)
  done (took 2.786965212 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069815383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077886544 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074047606 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07916388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0701421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066258744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074008976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066710699 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074846864 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071940389 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074439071 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06629711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071621489 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071992318 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071747136 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066753463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074322743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070202117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066240835 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074059488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066467255 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073778361 seconds)
  done (took 2.929189016 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063356964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061563409 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069226219 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060972735 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.06067669 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064789118 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060410128 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064531438 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064655693 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064946442 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068908786 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061368299 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060374436 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.0664492 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.06055326 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061587362 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105498117 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.06217184 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06165288 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060833576 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.067367308 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069457994 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060848473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060911634 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06470774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064599083 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060888634 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06394327 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061484207 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064940847 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061715595 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060391157 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069376934 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068876306 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064641517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064868885 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062621131 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061678632 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060820069 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060599822 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069080682 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062513398 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06117896 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062438403 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069992909 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060728356 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061019964 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069740769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060685711 seconds)
  done (took 4.516814758 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07467123 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112709593 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066995932 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092753067 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075405364 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068553022 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066725779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093623915 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062311686 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063039183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077118721 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076815915 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064608496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066405358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068782747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064390415 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065648218 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063807375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06801925 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064152803 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068090462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068603033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076275988 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075815877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066267526 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063464332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063882664 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066538916 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075915449 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068754452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066530881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067427858 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076486875 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06914162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066064806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064212317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077080814 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064945469 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064316357 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06281534 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064049099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06632721 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068701513 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077384945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065193865 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069283824 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064707611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062314559 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0763885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064569448 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069452051 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077680593 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066170795 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065173227 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066753223 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076481329 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065372029 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063200661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065643343 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07576999 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062657817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06618033 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077283312 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064312666 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068850617 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07744184 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069662587 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065856154 seconds)
  done (took 6.251609847 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073596561 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094177849 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073130235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073806725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07272117 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072821072 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072632467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072943397 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072518069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073111259 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072378416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112687952 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067917773 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078178105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072723202 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072361533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072821312 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073158326 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072388171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072369815 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072858413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073257825 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072710092 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073183686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075601727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068033804 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072453 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072278001 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073538658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073000666 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075967199 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072800772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072726216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073546683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075901557 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072830811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062437764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072652752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073101813 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072715681 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068365842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073483183 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07287915 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068425934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0728162 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072489713 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073350262 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07586822 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081970381 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073887103 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073171228 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07355345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072891509 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073203975 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073670488 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082017428 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073692751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07350621 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073028037 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073876568 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073567015 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081700594 seconds)
  done (took 5.989912919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078659786 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07027528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081852441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06397611 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060932013 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071796616 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061363602 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061121905 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070011761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069958665 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07213155 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071631119 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074133228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071775691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07170741 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074339541 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071391074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071694931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069670577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072096361 seconds)
  done (took 2.793623259 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075017727 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079496864 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067435749 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071894417 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067271586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071562681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066332273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066917213 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067662534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067355397 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073112514 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073079065 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06786372 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071766639 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073099587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072574823 seconds)
  done (took 2.502270219 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.069470206 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07116123 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069851937 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063209216 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066496707 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062029433 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062779274 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060903936 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061570482 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076052271 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062873018 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074194587 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062357767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061673613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062008223 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068448734 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061877033 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062755385 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062757778 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067986922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069381305 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063857583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066739367 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062809321 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068120167 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070044167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064474741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066555412 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062866682 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063395955 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068515122 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069950798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062528321 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063200081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061550233 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062503873 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062889117 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063034368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068891173 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062669844 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061124949 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067776695 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062757151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064239652 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061738907 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063414863 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062529673 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068626927 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062972078 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067898398 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062751177 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065036132 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063305124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070100566 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065597566 seconds)
  done (took 4.953750625 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07805778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067123962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061046939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061242537 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067483157 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067291269 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067030748 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067121576 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067416526 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061299405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067636183 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066107384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067336295 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066855108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06750786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067009696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061190195 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067021192 seconds)
  done (took 2.581377472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073875114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066713796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071577229 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066209081 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06676455 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065932448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061792379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061583702 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061473997 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06641079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066298355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065637107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061641556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065809839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066185744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066411291 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065604476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061935811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066244035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061808597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065978465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062047776 seconds)
  done (took 2.812751788 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091123719 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085671545 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127122051 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.0809814 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088805403 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072480507 seconds)
  done (took 1.924050852 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093072617 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10618162 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066155949 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066988998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077113966 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070204588 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069952511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070325569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077438744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075276982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070291739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077312588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077406436 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072640316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077197746 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080376456 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070559261 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07028565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066349733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080499541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070616257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077083244 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070319924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070339472 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070398764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072571293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080471018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075079157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072801664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077557931 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080603182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070403192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077197871 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075786424 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066905536 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077713021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070481248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080272099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077592189 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073057644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066634768 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077361061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077240893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072572936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08064083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071160229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072880713 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070795447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070972413 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083422646 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077738149 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072827925 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077603731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081652224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080721031 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083216414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075427954 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072915954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077472182 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074975261 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072162371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077224892 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072394475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075297029 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080037272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071980205 seconds)
  done (took 6.353384915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100374851 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067419894 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070508225 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075470075 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072517422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070416855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070603509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070564138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070699351 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066847955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105932915 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070706187 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072873732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072592955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07035275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070250522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070281695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072253127 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067152335 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08329296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070912731 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07278732 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072505821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072554053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075463642 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080764011 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070533443 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070090582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070200732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069941132 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072891676 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070408045 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072240637 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066866629 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072305932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070559757 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070091058 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072375426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070218758 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077361019 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073049767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080800435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070619817 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07073838 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075311493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070288862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070336603 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066890951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070345212 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067282702 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075334801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075248065 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075480435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072610515 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070511835 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07097179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070452694 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070489255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070829228 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080995266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073002558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071020239 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083522173 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070605336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070987494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072791692 seconds)
  done (took 6.230354914 seconds)
done (took 128.298011326 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212166884 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182137621 seconds)
  done (took 1.761425634 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075698605 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098471731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076165414 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13477077 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070394443 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105884952 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103792471 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074741559 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071135481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07164784 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071819626 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074392812 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137483078 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07018861 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071295704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074559011 seconds)
  done (took 2.7699521 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107728531 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188766307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112399587 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069455673 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106919176 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.0773482 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069279273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081303706 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073258024 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073025212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077090885 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075108488 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0724199 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075147917 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073062443 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076896581 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072237467 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076986076 seconds)
  done (took 2.954216344 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096306863 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.087283195 seconds)
  done (took 1.580758878 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160038802 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103936836 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144893768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.329113327 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.139009399 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287338351 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131847866 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129496068 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113762297 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124878027 seconds)
  done (took 3.055469775 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10484617 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170947143 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311591994 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122093339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075829727 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087872497 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123650881 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082139034 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08130277 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080733645 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080936632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080228654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099496536 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077321943 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076696768 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077415747 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102703097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075838591 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075833819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076727586 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102464951 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070341108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077328601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076072953 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07852815 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079307841 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071559115 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06969856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076434045 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075930798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079288065 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.085105604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078493276 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104935737 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074368209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105805389 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07537548 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074485413 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075545986 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074368956 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078466125 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078448389 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079282834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077123804 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070940118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075195811 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071180666 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069578879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080368411 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071461666 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079984802 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079195361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104389828 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070872733 seconds)
  done (took 6.174380278 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111793375 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107460198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070942789 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115441725 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106518669 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070396539 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107539183 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101396052 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109269097 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070129187 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069349398 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069223428 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078565969 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081916189 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115855493 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108257457 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070698228 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070441849 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10977165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110092699 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069000536 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102817634 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09925626 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109597122 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068876054 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070468211 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068508251 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069177766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076120465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077696385 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069152516 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07848045 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087612009 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077397958 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068413729 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068561823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068654142 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077799756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078562618 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078288492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076847176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068331922 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068829703 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069349277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069844136 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068056868 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076420726 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077841817 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076879424 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068771634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069225329 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068564928 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069305329 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077634094 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076384861 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078758435 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078376581 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068628982 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068945414 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070580963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078857662 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078455936 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078308502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069645117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078885476 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068717506 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080370161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08375089 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068681044 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069087371 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068819443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068670479 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06896861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076115008 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076369251 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069302812 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068981654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068400414 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078865331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076803443 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068738235 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075505168 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068084064 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068491301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069055771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068892727 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075701464 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077710789 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069798281 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068517592 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068300316 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068373647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068172936 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075812285 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077393367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077792962 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076671608 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068967244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07633184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076622202 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069267101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076311115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068529049 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068628249 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068583484 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076051668 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075621533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076701059 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068483944 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067635238 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07527296 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21165277 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07008884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077776782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080094707 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078230327 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068941842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083373949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069358345 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079272795 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068051838 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079825409 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069666277 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076917088 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069111573 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068256638 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069014017 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077212234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069953281 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068912801 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069364325 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068907787 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077199522 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080433857 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070212967 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07728142 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077094122 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070576451 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0770557 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068866791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078216507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069004179 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069668707 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06847377 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080131149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06890085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069225652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068935954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079675395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068845314 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078627077 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076631338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068208002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083342392 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079505959 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076881391 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079753796 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07037659 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06904504 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068854214 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06926636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076085251 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077913401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069794396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069008856 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075999318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079803164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068589532 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076663493 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076808921 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077141726 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069309539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069431215 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080105217 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076815134 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074878638 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076407265 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07772061 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069215951 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07624649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077003984 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068900588 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084387239 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069435985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080837688 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077502669 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076229838 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07725572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078677674 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07965634 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079858761 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082343816 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068780228 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068889557 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076866975 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068899726 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069035326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077067244 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070918393 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069348201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082304669 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067811653 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077219202 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068478652 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078184566 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068638156 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0693857 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082294493 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069556162 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069069759 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076480864 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068858136 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076133216 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079548909 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076380797 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068769418 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069038297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077064283 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07702959 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068125918 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067986724 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068550964 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074927984 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074358398 seconds)
  done (took 18.495242293 seconds)
done (took 38.201320688 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212175018 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165235429 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200505493 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119225679 seconds)
  done (took 2.196521992 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.099840509 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100283422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.080598395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065521832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.085356936 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065690376 seconds)
  done (took 1.938326868 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285313549 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20052544 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183494536 seconds)
  done (took 2.105677857 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223685622 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202477317 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.487304753 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300419593 seconds)
  done (took 2.753831723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136394058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082649243 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064265162 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075618753 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.114893452 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147054724 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092118119 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117155409 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076385259 seconds)
  done (took 2.406944203 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.137012679 seconds)
done (took 13.005495657 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103709428 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075396889 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115989903 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075543838 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21739466 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072021924 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.210907145 seconds)
    (8/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.077719105 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068334529 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08207681 seconds)
    (11/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.175887929 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087383835 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07661464 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106430304 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.240161339 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077878327 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077623349 seconds)
    (18/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.412491382 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089457993 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07495158 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1862514 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.247131915 seconds)
    (23/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.086264706 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 0.261456407 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.240012562 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241318916 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087133445 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070031648 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077731726 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17564203 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174664338 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083129293 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211270662 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171222088 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074150577 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097354637 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074187085 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063934002 seconds)
    (39/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071893121 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.186581563 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.221609336 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116819162 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065546719 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073107746 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066696738 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06548161 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088086458 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078258189 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.153097709 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213028399 seconds)
    (51/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.25562651 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.172497614 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065326784 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065002366 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199947035 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064517932 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.066731762 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190941242 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090104408 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078134691 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.151756578 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065391036 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075306656 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093435367 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215678672 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064238876 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166345636 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211150667 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073902283 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064560542 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161706401 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09455929 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.14977222 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087696934 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163974372 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064158347 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092550933 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075854318 seconds)
    (79/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073282097 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063701571 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.321401001 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07860694 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067043152 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066870939 seconds)
    (85/309) benchmarking ("sort", Float64, false)...
    done (took 0.137888352 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096236314 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070106415 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074877064 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129836687 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163317235 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.154000733 seconds)
    (92/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066732669 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.093664786 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113735156 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193896614 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218403256 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066607646 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077258555 seconds)
    (99/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.147101763 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098504526 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082370738 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072727633 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155467156 seconds)
    (104/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070530287 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128040241 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065914982 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065086973 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074491147 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075441551 seconds)
    (110/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.09719011 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140809767 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074565192 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.248590747 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194419 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068795177 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074450128 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183120794 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06640951 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074196359 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077784347 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072822648 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06654312 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074998011 seconds)
    (124/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.155923371 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073137559 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077873235 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064969267 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069275306 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072774507 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090880175 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078279765 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073829384 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121741394 seconds)
    (134/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068417728 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065740498 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07561627 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076097388 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080366449 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077203282 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079382565 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064778785 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215994451 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068499775 seconds)
    (144/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074598984 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.149218046 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07762394 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.074017004 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067881571 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066475899 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066239757 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07405608 seconds)
    (152/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.076088276 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064314385 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064922128 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066229465 seconds)
    (156/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065720755 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064602728 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0640411 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07500453 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144457843 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.15358431 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150404007 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06483555 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.146133266 seconds)
    (165/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.06652009 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.145222402 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132047217 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157847134 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065775763 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065620817 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065214358 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088138533 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138621174 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065245461 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148998598 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06524035 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07024904 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149516908 seconds)
    (179/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.203402276 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079309076 seconds)
    (181/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146387107 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.150997486 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06896115 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16118642 seconds)
    (185/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065151706 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.099611617 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064320805 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066220076 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17683115 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076995201 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065766408 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086620399 seconds)
    (193/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064471928 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065694874 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.285401212 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084698253 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066696307 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068200521 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136148053 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094777329 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.214743126 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066774026 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075340382 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170683651 seconds)
    (205/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065483684 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073824486 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073235409 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 0.174217397 seconds)
    (209/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080350679 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065560844 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064968955 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067176497 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073459903 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088865445 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065332955 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0658191 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126212714 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079089912 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07811198 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077876118 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089236417 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066029636 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145693383 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067116211 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065594574 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065319394 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09350525 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181129839 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07401425 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066475396 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127364473 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067471199 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066346074 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153267232 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067027593 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069447951 seconds)
    (237/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070460826 seconds)
    (238/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065777549 seconds)
    (239/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065486874 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.214557217 seconds)
    (241/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067446794 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066666312 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068664884 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065892222 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065860325 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067077045 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074665935 seconds)
    (248/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.172356783 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067155819 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078864846 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089042002 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064589825 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147968203 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092773808 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067782506 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123215892 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067040514 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137241566 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068569026 seconds)
    (260/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065433614 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092800183 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066930837 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072976464 seconds)
    (264/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.07832396 seconds)
    (265/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074015624 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066869762 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149688134 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077620262 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066055827 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072639097 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067127718 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07369584 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092756817 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066660446 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 0.136618479 seconds)
    (276/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.0670751 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123244818 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072779976 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066573272 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065659182 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06476357 seconds)
    (282/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067121323 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066820987 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171163905 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067133158 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077023768 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06558364 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.145196501 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0661927 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066687804 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064548765 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066821491 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066220647 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064644154 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066063652 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066462334 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073303954 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067978054 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07247188 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066941688 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121783596 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064792239 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065183584 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066520604 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066117512 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066715501 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089863517 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065378914 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065492836 seconds)
  done (took 33.481691517 seconds)
done (took 34.937675541 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087324123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092996594 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07456318 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.088126197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082998557 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098395904 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075222348 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080761501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082400671 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081030712 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080666877 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073541479 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076090145 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076141405 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073882923 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090633848 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081311641 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074508654 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075565825 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064948839 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074893057 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066081426 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065158783 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072893162 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077683251 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073252119 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07592443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075451399 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066609996 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06670039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070753063 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075296266 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068664339 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078309378 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073940319 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075084316 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076043307 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078858148 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0653442 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066406631 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07695908 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066478965 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075065731 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072662993 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071501416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073398345 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075432598 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078796679 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090466855 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070716213 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076984861 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077458626 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078597157 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072211411 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071427508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074740115 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072408371 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090250702 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075235171 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070442307 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076592608 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076054439 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072796401 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074847178 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074950397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077732164 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0783013 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073358207 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076885087 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073659878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065857206 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074587501 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070322308 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06599222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077760694 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080391359 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064569078 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070228207 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074608956 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074850854 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065701024 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070358518 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064803277 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070797241 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070192749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0725328 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070902174 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073626758 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065090257 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075537493 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073912523 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074220015 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065151256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07826216 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06551987 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07215643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06603854 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065912877 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064882389 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071265809 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06586286 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070128588 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074344601 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064432942 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070834155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079765439 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065598243 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073646007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065174341 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06531147 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07723907 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076993623 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066198959 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070629797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064672463 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071616759 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065174754 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065605086 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065856247 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065961825 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070335642 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066473777 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070274388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071730743 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078384461 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065732916 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070326789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070674744 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066384869 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072391532 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067446919 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067271104 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065250682 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079791301 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069948086 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065536584 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071070016 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070047932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07397982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063665994 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073950762 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071188094 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.211090151 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073507383 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065640445 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078650208 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071418398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070744505 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065325611 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066209975 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064659745 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066026792 seconds)
done (took 12.789482307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067657551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.096776561 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.075506186 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.083839342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079536538 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067228799 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07119711 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.085170601 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069464721 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086952973 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088313774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088122484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.095403258 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065412078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066769991 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066970592 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064976882 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074125281 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.083037755 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088929745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.097392277 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065805477 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07560567 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083304421 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077953327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084016579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067636538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067583908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069310264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085607536 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091499333 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066186919 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067164995 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081561474 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081085484 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074642014 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067374647 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071059272 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067250349 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066372921 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068057696 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081828315 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070910433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073478287 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067221101 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067396697 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066969594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070855736 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08033674 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070353176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.075036644 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.079649435 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068998139 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066496466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065202095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.071140322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066778718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066812853 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066836045 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066188289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066790569 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068884501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067429032 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067139993 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070261644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06965823 seconds)
  done (took 6.393086412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086345646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096423953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084238313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084279726 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066270632 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06681337 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066945079 seconds)
  done (took 2.10144853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068288659 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080321858 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084034767 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083966663 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.076384325 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085999837 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066948982 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097947402 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066288381 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079191354 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.114701427 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085098626 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070017243 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079162808 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067193109 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.075223032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067131891 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075302277 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075892793 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083744839 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071648618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095247887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081257502 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067350045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.089189336 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.072206692 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066296078 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067096899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068017757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068107741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06818423 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107163454 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.071564288 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081752139 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068059216 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066567265 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.073479679 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070330012 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.070081515 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073538976 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072870326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068128281 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065554501 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068034534 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069675255 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071083032 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065794765 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067935396 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068080477 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079445732 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066289881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071744421 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070571371 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072396654 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073258586 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072073886 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075144704 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068196081 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079231762 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075225017 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068026659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111152431 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075956134 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072744586 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075817569 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.07136163 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071996629 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.073102026 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067893817 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069358313 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068116447 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075849527 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066450854 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069102121 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070343353 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068741348 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.071779372 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.084220785 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084665168 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080658144 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068865656 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068208503 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071758212 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084336857 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072450043 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067834561 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070363945 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06594278 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071377725 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068558456 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073329471 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06814873 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075293388 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069721277 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071425002 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076655535 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066539058 seconds)
  done (took 8.742219525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070866567 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068563326 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069811884 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068173768 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068020524 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06851166 seconds)
  done (took 2.000207803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092609403 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067860316 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081837134 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067897394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10396852 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075343654 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075680522 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077347713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081463623 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080631403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.075884055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.078382638 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.075089434 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07001938 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.075076041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069315808 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.075027686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07127521 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080079665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069610581 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081944719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06952504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069967127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080106925 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070851995 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068447609 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068447011 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079977887 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08010562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079752408 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069216339 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07103406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075806238 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076633122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.075446127 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075599827 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067198139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073555687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069743014 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070638099 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.077524129 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069690694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070028851 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073769667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076693994 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076112248 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073680168 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071808172 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074843379 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073547625 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073602798 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068688813 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070648985 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073577615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076132687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077197918 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073913599 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.075382013 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069260656 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075872599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067889275 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070945494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076814601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070578982 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072072096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073952896 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076264899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069728689 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07003883 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067813741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074113973 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067855485 seconds)
  done (took 6.896646659 seconds)
done (took 27.670025567 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.999382055 seconds)
  done (took 2.525651893 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.577733987 seconds)
  done (took 2.145347563 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.712489738 seconds)
  done (took 8.274443006 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.307959316 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.343468669 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748601946 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137060271 seconds)
  done (took 3.133278012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.733440868 seconds)
  done (took 2.30751679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24247286 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230315573 seconds)
  done (took 2.057116871 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.356952857 seconds)
  done (took 1.922790331 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.164033848 seconds)
  done (took 2.726065403 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238585455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172857232 seconds)
  done (took 1.980905363 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483748057 seconds)
  done (took 2.051566828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.497544823 seconds)
  done (took 6.068962605 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247159928 seconds)
  done (took 1.859617937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241829018 seconds)
  done (took 1.815726654 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727694447 seconds)
  done (took 3.292621239 seconds)
done (took 43.739516132 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084605766 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08727269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087710337 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082559488 seconds)
  done (took 1.885684207 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075472447 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070918609 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.075353229 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074710254 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072604898 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073851296 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074346996 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070651334 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072287957 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070482224 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069638752 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070604179 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073772997 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070551578 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073619804 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074857503 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070783048 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070614126 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07361293 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.07022564 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073550969 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070912614 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068926261 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069920819 seconds)
  done (took 3.301548747 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080839468 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074237847 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076469976 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072831486 seconds)
  done (took 1.882224953 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078141968 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.088013347 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.089617789 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.095514197 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077491823 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077953583 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08582667 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086672045 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065819711 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.089935407 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068774137 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067546866 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067168875 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.089105576 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.085981592 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064354982 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065436526 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077747312 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077162153 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079619246 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069134496 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066046525 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077484588 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.077328511 seconds)
  done (took 3.44533763 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081763287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065805679 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081339638 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093507012 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096310695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066003313 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082111541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095474493 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.144085002 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066366246 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072045958 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066169355 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.1091807 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066431153 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08310387 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113760727 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118030546 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069946543 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100069435 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066319883 seconds)
  done (took 3.325076035 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078740465 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06992987 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071218732 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066073965 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07780245 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07456921 seconds)
  done (took 2.029382538 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069292762 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068295328 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068481512 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067809888 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073032218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067525333 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066512219 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068245568 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068596229 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068016536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067645543 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066815769 seconds)
  done (took 2.402366846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167120733 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070691987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071619787 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06982974 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072175105 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067206672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083403918 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06996343 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087407462 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067660994 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067550457 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070019414 seconds)
  done (took 2.548814347 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102543728 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133986641 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099109296 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074465894 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176299619 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096227208 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093481994 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.125951129 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095618686 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070764279 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095918036 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140171943 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098533521 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.100874574 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083737381 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128312966 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112959096 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090491093 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116483736 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084174397 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072838653 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135663009 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071283939 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094840965 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103862439 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.099951776 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11317181 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136830882 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086226568 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.092376514 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085438989 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075787563 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108741093 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087263702 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.100923561 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0957648 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100648346 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087482583 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088510665 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124462741 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158217804 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103438207 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103157349 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138545497 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080938364 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111494284 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083354659 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102008381 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107363274 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096034918 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077476785 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094820585 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109321757 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105037583 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.084157738 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084370391 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121647125 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.101015285 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098965602 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081622939 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109673478 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.088441932 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110769289 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270826991 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145319624 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1065493 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141334836 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128745474 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098195702 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.092887119 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09488961 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078386364 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113735966 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100939332 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141405361 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112104088 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102359129 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.100609041 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084585767 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111238056 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118235654 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096265555 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097718255 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150720684 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111611487 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092772241 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099253506 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.146693171 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073983088 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151811974 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091998164 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125994553 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099128256 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142741398 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094548917 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086373379 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110189933 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106561881 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092296914 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106163091 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087238389 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116905354 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095299847 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104892965 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084244368 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093506059 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089047855 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.1004983 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076862616 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106974145 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118602553 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116858787 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077467415 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112112111 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088961421 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079949682 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095513143 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144046028 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086237507 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077253544 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155240118 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095306823 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.120086758 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112226228 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.0863516 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271713865 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142370855 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095693431 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092277198 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079894676 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160699129 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078908046 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123880132 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083807019 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106618197 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11022469 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135773336 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143319445 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098593812 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080945398 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094728813 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.110469154 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090359287 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088802365 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079473238 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112298389 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129954128 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.104293898 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083872396 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095507555 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071380123 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117658235 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078460815 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087333998 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098885942 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.090691716 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.09294404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147421019 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.086992683 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111520763 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101571934 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069086146 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09468298 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157679799 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085909701 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11514056 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121503111 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086926053 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070317482 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.099217155 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075321699 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112281366 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096403594 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111612872 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080757086 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110337773 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070517409 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076092955 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132721729 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105282265 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092414917 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13731543 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109323918 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091280899 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.106829519 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099467211 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097550516 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105230241 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.26455904 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110685345 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.077289767 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135114113 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094694415 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080652173 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089581631 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0818433 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.081229612 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103500349 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118698331 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092376986 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106026346 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106841021 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093136482 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.114434397 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092210722 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082156723 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13595979 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07867659 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077478636 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09136364 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.110613037 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091885818 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138352241 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083409337 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140766093 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096034343 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085027249 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118943995 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070773747 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071787079 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083839372 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095530693 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120027037 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082153352 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080779168 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122771232 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136688389 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101207373 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106116715 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071109015 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093739263 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139316944 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11883612 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084158178 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114126673 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087844358 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134426757 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099674837 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125351224 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110117136 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115778465 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.095243403 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084629128 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076199306 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091154384 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114960981 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089392523 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084589648 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.070189691 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07743984 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09653826 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093726511 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115072139 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090290271 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138783877 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075276721 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102959975 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108203531 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108051023 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09108434 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096240101 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093844265 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092881996 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092852439 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093405409 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074293769 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127150716 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103858586 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079452227 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09049749 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094554006 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107218187 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108937107 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110607169 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094266673 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107039132 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121262613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096088552 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082700608 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083527709 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088940303 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082669937 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079190618 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099322947 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108060027 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096250116 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106398481 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095130621 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.094190973 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105227919 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091759553 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087741317 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115362047 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148553704 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102237575 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10162132 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08568524 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102917448 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103640358 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111689646 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106367692 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105268489 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070092845 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076493106 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072553272 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106860748 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080499725 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117680147 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07641788 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107138014 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095116957 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080274741 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068225074 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101477113 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092741505 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082757045 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119428474 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113973125 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074225035 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090981778 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105524954 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083997449 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121703483 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099182292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099931611 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074237877 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09238758 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076078234 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.378439733 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106246877 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083367632 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.082985942 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.07634634 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115757021 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090554586 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117184098 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095138034 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108331132 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128964495 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138448517 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093004182 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103222314 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125323399 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120820674 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.087696221 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119145775 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143175882 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.127242867 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085610373 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.089150472 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111907634 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111643443 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107662482 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080016976 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083392266 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113604539 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119293711 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071363731 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088934051 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073386671 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.087804071 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117051407 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10000889 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085800524 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122745692 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078305045 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11198626 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099598692 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127547293 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127035762 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151375903 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101423452 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089342426 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080542073 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129727339 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.07387211 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122746493 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117117922 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091444284 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071629059 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087752528 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099678797 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.631644044 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113686602 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079677564 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141197835 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090480757 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12112397 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088417074 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.1238661 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09368731 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106919418 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095077605 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288377736 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085577889 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114320075 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.182196826 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115025068 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112530131 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077232532 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.090134342 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076285102 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.081659599 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084382428 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091248187 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114457373 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087779554 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109887054 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082894397 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111402002 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094400771 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09228823 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.103071893 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085105597 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144178897 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091255544 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126294586 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111102048 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081953248 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077713509 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.09026185 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106020242 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086023879 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099106639 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082871736 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079285268 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15904453 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106083696 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088795852 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107301186 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.096493591 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.089998778 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096087292 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121926709 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114427378 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07619399 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.091651039 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107728938 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08235335 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078441315 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101162543 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072146463 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092814583 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103283978 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10064036 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093762872 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107322464 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081412193 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091217566 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114001419 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088991915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080519275 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08000474 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079640773 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079188016 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10742351 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113514995 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118173824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113096623 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095140477 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097572132 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.082608225 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.231261225 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239950349 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101848983 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110038059 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078820467 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.137215249 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092030115 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091548195 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10053622 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105957279 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157499289 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077446632 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113742262 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098011528 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115337088 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091577125 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111227127 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099012636 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095570578 seconds)
  done (took 52.021432291 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.096038737 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.154065596 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.164031105 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081160608 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094805732 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119525202 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209285549 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192669467 seconds)
  done (took 2.857419284 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068797627 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083786142 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106715192 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085263973 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067327246 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068542953 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.213400429 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083954584 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067430946 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105851489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078034376 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069940644 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435550784 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067784 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068512505 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077061604 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068381399 seconds)
  done (took 3.542283819 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38210111 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601606925 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34602005 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073834168 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.017381352 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087594865 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.292300813 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135035982 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080609506 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534877424 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373894903 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130633117 seconds)
  done (took 18.789220309 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077720421 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075990391 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079936857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079719798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075509129 seconds)
  done (took 2.112926861 seconds)
done (took 101.755424475 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083861509 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.175183999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068881469 seconds)
  done (took 2.008217312 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.085283106 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08337589 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083341493 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.081277206 seconds)
  done (took 2.072002408 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076140548 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078004801 seconds)
  done (took 1.888717847 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.251744655 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170000898 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095819901 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084954124 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081659554 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082675083 seconds)
  done (took 1.993759731 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073474486 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072885129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073058978 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073170019 seconds)
  done (took 2.024809002 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069113252 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067507602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069255659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072866168 seconds)
  done (took 2.01351094 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085169552 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085259973 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079681291 seconds)
  done (took 1.987675807 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097958737 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099948238 seconds)
  done (took 1.926730116 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082086675 seconds)
  done (took 1.817962069 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091802969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100708157 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157281112 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115970093 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.155059907 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139398948 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.080149509 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.081720502 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076229074 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074406283 seconds)
  done (took 2.808893796 seconds)
done (took 22.87098165 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080343527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371403788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361536148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089085932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714545707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358179188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984292467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094269528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102534717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070134917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087024342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649423864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977471247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331481045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963391078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329215951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652616269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069854836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06893443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070101319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969695631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068878134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069681696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069538673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651777583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375478473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0707412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325708897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069464667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072772002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35769951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07162635 seconds)
  done (took 16.305227342 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072217466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125153454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074259715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086568932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071763168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071028559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072946624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070257276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11276993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070001883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087429359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069478085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074128583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071550346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091103636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070392375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071850539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071247461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070704751 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07510514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089400856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070065204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071641147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070895959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071050594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083627802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071951973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070143499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070671516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073196282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073907772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072054354 seconds)
  done (took 4.221073669 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12474095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131384901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074833888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110686376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123228425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071516888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154480779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094945884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118412176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069992879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087866839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069674239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106948427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072394304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092026692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070869027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072465158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071036257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070477803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071363894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090252751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070234656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07154927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071198001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071347038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085947527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071529818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070224406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07068182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07332683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07448538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072045788 seconds)
  done (took 4.50497824 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071111372 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073379112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081221693 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082362038 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067920854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070178669 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071510456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068070113 seconds)
  done (took 2.343284544 seconds)
done (took 29.124783949 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080479615 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068524443 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072340966 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089772221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074770889 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071974866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065985928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075693503 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072557218 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073235523 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073883066 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067803251 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072178552 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066697006 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073652666 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067801608 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074863576 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072528178 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073573137 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07457156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070289802 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073761169 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076570824 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.073213076 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07346942 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.073105588 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077834561 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074022198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06842499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071259449 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070115098 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07948093 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075911067 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.075657823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067988392 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068102074 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072377446 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070080641 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07505214 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077870731 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069668979 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077962184 seconds)
  done (took 4.790895081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086721444 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091958239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084247442 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084447715 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102743859 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084890498 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088861026 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08112956 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07907438 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087867447 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075187773 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.083083907 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080645756 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073751602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079367141 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076138067 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081864387 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075705346 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080443314 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080694208 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089353455 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073884618 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081045346 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0820611 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075765948 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08217082 seconds)
  done (took 3.908067337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074442787 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088128805 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094324292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152980383 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114743154 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083186251 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082854362 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097221629 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101592191 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068863188 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073084798 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095404333 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09690476 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075364406 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111189769 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087040459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084848745 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071863455 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076292546 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102508004 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091176376 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087651235 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100304056 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087614729 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068231288 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071241751 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075560311 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08308478 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07580294 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080703769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072999804 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072339822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069047519 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080261489 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072951085 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067203329 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092991177 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080918055 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08245749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.113880357 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078291682 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069835621 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098124004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133702525 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068287664 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071653405 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072122253 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080636312 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069545595 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098853655 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083779259 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068302433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068820832 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06974018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069760388 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084613777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070359144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070518281 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080236073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074770736 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090843609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074042728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08906928 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068107758 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079415276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069369017 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06965252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067362516 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102259482 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075277724 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120611998 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069579467 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066597293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080711153 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079512808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075221616 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068161366 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087267806 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07996287 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072654428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080033673 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07117604 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071767056 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103057352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068392088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067348628 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066374102 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071252431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071466107 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06889679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082359992 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068034815 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071454726 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083575773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068203409 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069048594 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0714783 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07044508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067689906 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081984061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072641846 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070126198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080370126 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069605201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071745776 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08299457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076102211 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06774421 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069863644 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071443151 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070347471 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073131767 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07177219 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070556726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075123707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07620981 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07422949 seconds)
  done (took 11.111855962 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171484762 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160721285 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072070744 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153557211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077985137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.074899703 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154415462 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09040924 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070159243 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07089276 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069270355 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.099767072 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096547527 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110519466 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075503522 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070547347 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094394715 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104145111 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158064051 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152774479 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095101703 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07758415 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07266378 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071819512 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071004759 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078556296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089274415 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079053431 seconds)
  done (took 4.66228515 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079468262 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096284853 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073966548 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.081838606 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089768182 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0698522 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072181535 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071307238 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084939899 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078598848 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069687476 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074551707 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073246004 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072395834 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070567518 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076189109 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077287456 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068821062 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073601369 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075129104 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080456979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096559518 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074724226 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069612455 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072153404 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069472952 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078537421 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081714539 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069923559 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.085983023 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066966687 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074445418 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085297987 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070717304 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069491426 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070349076 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0697132 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069941394 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070526458 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068394422 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067951411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074695707 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068581882 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078136447 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084145375 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077422715 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072109612 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072379423 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072505626 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066581101 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073209766 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073328414 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072485835 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077995556 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073762068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072515681 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074108507 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097075796 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076444844 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069288613 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069139155 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068480001 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071915213 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079917175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087488403 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071888825 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068716625 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069935316 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07591255 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08450195 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06923415 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075040889 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067007394 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070177166 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072235668 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0727996 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070960845 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068192002 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069520411 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069741519 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070044125 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069448503 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069306311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07303647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067428226 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068429005 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070499349 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071217852 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078263523 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068860833 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073309856 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070964953 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068894748 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072599789 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075339541 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072856111 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084131996 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080553259 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070062889 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067754954 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084012928 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072177245 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069013666 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076339274 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074488905 seconds)
  done (took 9.593152725 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095125162 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071046357 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089549889 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095907426 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081120314 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075179295 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081270822 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071162984 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087455815 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069115757 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079040577 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06866188 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08204118 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080768562 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071737612 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081079398 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072600411 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089677504 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085245272 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068584777 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079758843 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083012643 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083194794 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087239964 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086817361 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087698429 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08305072 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07251067 seconds)
  done (took 4.080978611 seconds)
done (took 39.894202217 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.834794407 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.024812532 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.83721789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.032628348 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.89592931 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.173982493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.870328164 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.828491098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.027749764 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.876604051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.056438926 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.370846488 seconds)
done (took 66.659361734 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.873073619 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.996104832 seconds)
    (2/2) benchmarking "String"...
    done (took 2.089932835 seconds)
  done (took 5.849447262 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.078888094 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.656553518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.095000093 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.829111916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.83205589 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.268260047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.630477538 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283360242 seconds)
  done (took 31.358036289 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.951108564 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.059672637 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.53262452 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.532391392 seconds)
  done (took 15.879490852 seconds)
done (took 64.88830405 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.839761399 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.827452946 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.902952762 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.855556326 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.836316352 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.829652685 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.827987634 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.829235679 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.842217719 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.079972058 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.828012771 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.829086832 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.82999527 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.876505432 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.334275308 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.877478683 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.841798388 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.830600623 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.838139609 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.005976905 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.830815807 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.830281794 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.326752906 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.022856735 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.447006657 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.035381821 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.28855353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.241375894 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.837258101 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.827850184 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.871806783 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.061474052 seconds)
  done (took 207.146241621 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.833087766 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.868499279 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.968103994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.876939823 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.336266149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.01055306 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.9340433 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.380800192 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.835227759 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.843034993 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.12076265 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.827435313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.160118487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.781792398 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.868102238 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.838524715 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.997176967 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.148700758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.867463859 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.979358786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.85333161 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.997756042 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.955891823 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.093652996 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.846611243 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.926285447 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.850882808 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.858999997 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.017052365 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.981246913 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.834763563 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.846049774 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.003193986 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.704203793 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.83412192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.840052314 seconds)
  done (took 172.685563728 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.018964342 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.842073458 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.833754964 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.890002272 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.956199452 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.835141077 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.506189615 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.839232475 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.83437021 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.966838475 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.836870355 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.834644202 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.834554018 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.835474133 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.847791418 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.908156618 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.832307004 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.849832915 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.837347845 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.860876361 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.835475254 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.834776127 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.835520744 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.836461574 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835306978 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835089906 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.835412639 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.146524146 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.077710547 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.832853798 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.835840214 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.833445996 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.843509571 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.942904723 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.836658336 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.927025502 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.888030963 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.95579905 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.834002876 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.053782612 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.906783856 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.832417718 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.835530008 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899810877 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.845756187 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.833759818 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.837678847 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84292749 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.90264863 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.074004962 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.837836835 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.956984114 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.837284025 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.320640958 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.83755122 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.835699604 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.835973779 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.836276475 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.429165604 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.832921158 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.8378164 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.842960992 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.843555713 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.83788542 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.837821578 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.224588531 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.903420272 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.061898756 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.256182283 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.012714394 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.886463038 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.02652883 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.836754695 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836258693 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.836593682 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.839923389 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.836868729 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.841276494 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.998677965 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.845737226 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.960539788 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.914173337 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.955786436 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.836690941 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.849771912 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.675081943 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.907903756 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.872343912 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.666769472 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.837573244 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.210884252 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.605065779 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835024685 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.838318649 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.851622092 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.833477538 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.838986349 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.839934481 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.923094561 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.837326786 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.960008234 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56069442 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.388360485 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.835033644 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.840073534 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.84585265 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.920151047 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.956437143 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.839100805 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.838787226 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.909285981 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.84154435 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.842289122 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.985712642 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836782977 seconds)
  done (took 408.929592316 seconds)
done (took 792.602492951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.425753842 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.399505099 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.519755402 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413094846 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.393317196 seconds)
  done (took 13.920203728 seconds)
done (took 15.690821512 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.855496133 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.84637173 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.903886519 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.922514404 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.853337271 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.858386496 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.923706136 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.855816124 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.891157342 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.897006556 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.927039678 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.922147899 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.860862618 seconds)
  done (took 26.28759507 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.848366031 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.99644009 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.081582304 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.881840263 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.84737026 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.07978252 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.907147624 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.988580982 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.993334505 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.093795478 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.083215375 seconds)
  done (took 23.576638717 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.848452022 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.989188973 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.082432209 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.883964177 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.846358281 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.076991293 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.913030045 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.990074192 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.997667617 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.080766476 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.089274966 seconds)
  done (took 23.579452709 seconds)
done (took 75.216405192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.844183982 seconds)
  done (took 3.61514041 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.860961252 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.006775135 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.843914093 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.840857256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.845396802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.845086379 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.841893802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.844674506 seconds)
  done (took 16.700517773 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.844606186 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.84556628 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.845405753 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.846384893 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.844486448 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.845306547 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.845799353 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.844811456 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.846148095 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.845374454 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.846855383 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.845140302 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.844736886 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.845683191 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.846211699 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.84381428 seconds)
  done (took 31.299797906 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.84668937 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.846062091 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.846863792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.846167823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.847642511 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.848359244 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.849124822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.847501724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.845599213 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.8459012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.845442378 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.846941742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.844053319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.847043359 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.847281346 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.8461334 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.842956913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.846835927 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.852131447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.845159461 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.847988076 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.845398025 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.845991602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.847668545 seconds)
  done (took 46.094831038 seconds)
done (took 99.492453933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.6072195 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.578381571 seconds)
  done (took 9.959255435 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.849098939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.848607776 seconds)
  done (took 5.475931405 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.846316887 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.846579083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.848331729 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.848488333 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.850304282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.845986418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.847664384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.847349342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.847868295 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.849093845 seconds)
  done (took 20.253435675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.848639698 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847932346 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.848020551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.848016708 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.84817914 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.847969068 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.847767647 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.849919347 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.848335171 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.847717985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.847384301 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.848693115 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.848842954 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.847903641 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.848306111 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.849398683 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.848306062 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.84845541 seconds)
  done (took 35.043835434 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.84786833 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.849188575 seconds)
  done (took 5.471636802 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.84843393 seconds)
    (2/7) benchmarking "second"...
    done (took 1.85028353 seconds)
    (3/7) benchmarking "month"...
    done (took 1.848608673 seconds)
    (4/7) benchmarking "year"...
    done (took 1.846719643 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.849222651 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.851332852 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.848949491 seconds)
  done (took 14.720624703 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.850465492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.005968475 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.054420358 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.725640868 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.851184203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.853461711 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.171053211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.853714824 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.857789053 seconds)
  done (took 20.999562301 seconds)
done (took 113.699349064 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.648841688 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.846339675 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.107536433 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.919772532 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.865657772 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.144857168 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.849170029 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.487250686 seconds)
done (took 42.646379032 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.937970538 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.845200454 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.874855359 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.874676776 seconds)
  done (took 22.371090861 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.851505143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.191187302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.872688604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.674909638 seconds)
  done (took 22.392324878 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23134555 seconds)
    (2/2) benchmarking "read"...
    done (took 2.192698076 seconds)
  done (took 6.207285445 seconds)
done (took 59.689857985 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850682257 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.851269497 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.850754429 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.850507526 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.851743699 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.851833107 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.850908196 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.85232557 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.851089317 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.851796698 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.850571838 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.85249352 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850957836 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852036647 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850739663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852598985 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.852764115 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.853417595 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851759687 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850532887 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.850913641 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852673971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.851828122 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.852292814 seconds)
  done (took 46.21722821 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.853589167 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.852610454 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.853803551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.851684074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.853622573 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.853032804 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.851380724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.852219855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.852518129 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.85434209 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85382539 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.853168433 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.85373123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.853614479 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853854095 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.855066163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.853276044 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853747559 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853905203 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.853997652 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.85274851 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854593889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.853215288 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855942839 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.853692365 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853873168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.853699101 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.853468546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.854522705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.854006673 seconds)
  done (took 57.388479854 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.855517859 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.855628883 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.854657354 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.852615619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.853134285 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.855204091 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.854890488 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.855541639 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.85634173 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.857528062 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.85543156 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.857126216 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.85601921 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.855918935 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.857065602 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.85714253 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.855982361 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.856873322 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.857550085 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.855979073 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.856535847 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.856070159 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.856519314 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.857411576 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.857284418 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.85785101 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.857335165 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.857280832 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.857979076 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.856391899 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.856945517 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.855905686 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.857412449 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.857449343 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.857272328 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.857148452 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.857445469 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.857641609 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.856823291 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.857914065 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.857301014 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.858316579 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.858102599 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.859295418 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.858861902 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.860333959 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.858518857 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.857727024 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.858482964 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.860224241 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.858207148 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.858149527 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.858448125 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.858152939 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.859131351 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.857182015 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.859043332 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.858971114 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.858531189 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.858856382 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.858486645 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.85815246 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.858790375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.858527337 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.861051729 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.859774484 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.859657289 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.859339537 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.858758304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.858876487 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.858628218 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.858231869 seconds)
  done (took 135.522561154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.860436228 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.858939937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858975374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.860066852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859810977 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.858779964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859295901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860516935 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859676099 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.858939779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860491886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859261663 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859251493 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859723988 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860782063 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.859860722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.858931495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858430384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.860059636 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.859659795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86143492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.860065488 seconds)
  done (took 42.700471982 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860672612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85924922 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.859598378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859996833 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.861624603 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.86182976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.85978808 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86090639 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860761573 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861731908 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861492163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861255128 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861425348 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860881243 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860334727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861396949 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861398008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.860430501 seconds)
  done (took 35.282522183 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.860635721 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.8611768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.861138648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.861264165 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.861372853 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.862407239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860869875 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.860684474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.860625035 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.862705007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.861490798 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861693355 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.861015517 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86274263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862128613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.861890869 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.863174412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862297665 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864113968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.864707027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.863151387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862627905 seconds)
  done (took 42.753010102 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861305677 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861765248 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.862547065 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863143772 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863019895 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86216221 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.863557816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.861065827 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.861793506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.861582268 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862995786 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863913682 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.862337525 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863821708 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.862159529 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862489823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86300232 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864345181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864725391 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863045456 seconds)
  done (took 39.044965293 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864601086 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862800915 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863355614 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862334194 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86303124 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.86174424 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863351316 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.863109782 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862419895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86404872 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.86267559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.86312914 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863245934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864488609 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865721168 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864192553 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864046349 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864303704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863682079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863391387 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.865540067 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865299595 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864974251 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864641175 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.86501463 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864560303 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.866472526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.866211561 seconds)
  done (took 53.983864762 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866830611 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.864433153 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.866173675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.865779789 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.866390358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.864635452 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.865650796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.864635026 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864027068 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865169283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.863808289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.865559792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8645145 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.866178503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.865220348 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.864742054 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865063816 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.865716538 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865000799 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865183697 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.86461383 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86511737 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.86542311 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.865140483 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865301805 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.866687953 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864795788 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867044735 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866390851 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865984207 seconds)
  done (took 57.754051081 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.88737582 seconds)
    (2/2) benchmarking "in"...
    done (took 1.886237674 seconds)
  done (took 5.566498685 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.866354415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865379832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.866168479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.866588388 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.866447773 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.866682304 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.866646997 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866639617 seconds)
  done (took 16.723850973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.868059507 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.870889498 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.868161363 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.867556425 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.867584559 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874757058 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.868691223 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.866897776 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.869802592 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.86791674 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.871478082 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.871047671 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.875131997 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.872912592 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.869107176 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.869344067 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869285678 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870336882 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.870173193 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.868522118 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872294503 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869158978 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.868775843 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.869265268 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.868711631 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.870930927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.87951511 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.869719537 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870071056 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.868869877 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.875906734 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.869711798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.869042765 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869574756 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.869363954 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.869921953 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.877207843 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.869592493 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.870239367 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.86961937 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.871106883 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871024205 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.872891529 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.877990673 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.871209611 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.869554685 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.870372762 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.869599338 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.869809758 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.873617958 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.878850684 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.870015138 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.87049064 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.871929181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.871938259 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.870975302 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.870607032 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.872520025 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878663586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.879908371 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.875320838 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.892103852 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.881092926 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.871240228 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.871394481 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.882355765 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.897995025 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.874050945 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.872743269 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.871600492 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.879238123 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.873055854 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.871864758 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.871890233 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88481796 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.882064551 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.873400375 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.871353152 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.871722209 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.871043867 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873662326 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.87229105 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872584574 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.871353806 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881552702 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.898323923 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.873192731 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.872084125 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.874786757 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.874095716 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.876771764 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.874158412 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.873233184 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.87318953 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.873941649 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.875474721 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.873664747 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.873138772 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.872408086 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.882300263 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.874607696 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.874221723 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.876107385 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.882402127 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.874233437 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.874327492 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.87409003 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.874734398 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.882556471 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.87559457 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.873995613 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.875245557 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.87553713 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.878471362 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.874084453 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878039437 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.883538405 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.883048854 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.875588963 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.878322131 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.878359279 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.876048423 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.884509699 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.900595152 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.874870069 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.879191547 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.879822352 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.888859124 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.880003428 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.875689176 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.878583007 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.875639487 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.873773245 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.877199335 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.874316498 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.874770845 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.876461018 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.876263056 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.876356595 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.875781724 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.878294973 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.877199224 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.877602275 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.876644797 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.879791728 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.875123784 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.879231495 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.883675659 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.87717804 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.876952226 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.876193732 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.878481808 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.877345073 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.877589432 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.877361905 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.876232328 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.877102968 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.878089929 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.878453067 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.876876036 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.876981366 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.877728084 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.882455205 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.877486846 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.877735311 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.87693073 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.87655539 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.876962208 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879089541 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.878333879 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.880405485 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878845928 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.883154347 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.877979651 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.87866187 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.878722812 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.87804337 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.877439239 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.881262437 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.889843457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.881067039 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.887762453 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.878441736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.888144369 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.87794773 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.879438925 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.877880594 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.878241295 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.879137539 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.878288056 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.879896384 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.882536949 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.899750662 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.891330118 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.880618411 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.880215368 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.882995599 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.883317286 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.884615063 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.878134697 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879401189 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.882186021 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.878965737 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.879265947 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.879693787 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.881753955 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.880886705 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.880346738 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.883140346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.879628639 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.880543789 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.88097134 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.881511723 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.882003968 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.879354305 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.880570585 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.881318132 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.88150826 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.889236566 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883172036 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.880307078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.879549204 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.882865962 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.87991699 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.880539995 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.881702875 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.884288545 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.880602781 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.88099743 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889862121 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.882391775 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.880739586 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.880923075 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.881166295 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.882580076 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.88147907 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.883741124 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.889205167 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.885454903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.881433501 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.887212936 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.882138274 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.883760716 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.881790478 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882649341 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.880673136 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.882454784 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.881937028 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.882311886 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.889485845 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.88176125 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.882681334 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.881994974 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.884904879 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.885347906 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.88509687 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.88238884 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.884932067 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.890263754 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.889260562 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.885604018 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.886261441 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.884917282 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.884383866 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.888244837 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.884833632 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.895858787 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.893713596 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.883482594 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.883165834 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.882365417 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.886479565 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.882550405 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.882944134 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891687796 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.884448258 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.88458723 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.888238272 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.884503306 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.882108819 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.889985472 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.886201941 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887495822 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884887543 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.884516293 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.884399951 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.883660729 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888325494 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.884425608 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.886462206 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.887966635 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.884638822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.884223491 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.883661805 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.893786897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.885522007 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.885116361 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.892233542 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.885430162 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.884629773 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.886516981 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.884067902 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.885776008 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.884719519 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.884013424 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.885793617 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.884618032 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.887025032 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.896956803 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.889089854 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.89440522 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.889160466 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.895741284 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.885299503 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.885768318 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.885281517 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.887618539 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.89351717 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.884759079 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.885934277 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.893900547 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.887557612 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.887871311 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.890201422 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.887256334 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.886952235 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.885397428 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.8884088 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.891569968 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.890824107 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.886968893 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.887571078 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.887649696 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.886070642 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.891250274 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.887271971 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.886549598 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.888128153 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.885298322 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.886935502 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.886451905 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.886840219 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.887010771 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.886462712 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.887450036 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894260877 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.887637332 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.888903373 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891535692 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.886944695 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.896945869 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.887417934 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.889866239 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.888326366 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.888090588 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.890362505 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.887049531 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.888566762 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.887927677 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.88828803 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.891236426 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.90040462 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.894867728 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.89389693 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.89063898 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.889594417 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.88975549 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.89826943 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.912968092 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.888638664 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.889841436 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.893335796 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.895823024 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.892488825 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.894646525 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891866281 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.897669647 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.891226219 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.889853886 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.891193728 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.902686444 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.889954225 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.889936505 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.889249969 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.893997543 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.891410371 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.890489414 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.890277976 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.892269564 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.890874124 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.900534926 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.889388714 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.890585445 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.889784192 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.889560674 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.889332298 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.889069569 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.891209531 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.891076331 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.890607427 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.889843987 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.890175171 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.894823147 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.889682981 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.89365476 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.899963737 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.890544299 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.888495116 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.891724542 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.889057747 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.891675054 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891128445 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.890190305 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.893416406 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.890333969 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.89224651 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.895058852 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.89980523 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.891520619 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.89006108 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.890743302 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.895106562 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.891067 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.890787822 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.892526512 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.899806599 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.895484608 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.903866218 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.901308203 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.891499118 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.892447218 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901078194 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.900369225 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.89263753 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.891990972 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.892898678 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.894815321 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.894751586 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.892912593 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.892938509 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.893533674 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.899254431 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.892363883 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.892453156 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.893027785 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.892371933 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.894540086 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.893446939 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.896688298 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.892515693 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.892351842 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.891154978 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.894538074 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.893623776 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.894764455 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89292341 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.892625853 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.894057461 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.892960599 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.897014948 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.892978736 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.893083606 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.894374133 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.894215827 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.893144606 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.892752472 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.894383989 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.894039539 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.897060762 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.902186431 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.894492986 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.892100939 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.8949482 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.897889349 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.893321108 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.893574307 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.893856852 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.894813528 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.903671055 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.894979032 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.895747185 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.895644996 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.893319377 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.901326511 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.897417403 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.900158918 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894939039 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.897595477 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.896260333 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.898020607 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.905893113 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.900025266 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.899538718 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.904574603 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.900310183 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.898171934 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.895721306 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.895638388 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.895946143 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.896426743 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.899072009 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.89518822 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.897453286 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.896737756 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.897785979 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.895339688 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.89800462 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.895549772 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.896931643 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.899438247 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.906132198 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.906101471 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.89721147 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.897439598 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.896466783 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.897966056 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.907723404 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.895416201 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.895355397 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.895784532 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.896541452 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.897374533 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.904006515 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.905025994 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.90025355 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.895852522 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.902011678 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.917706406 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.900029564 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.907700605 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.931391499 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.900393205 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.896478044 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.898310534 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.897803619 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.897000504 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.899197251 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.897358788 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.90424921 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.898627383 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.8970694 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.907061128 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.898362852 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.896829589 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.897311155 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.899524163 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.904913165 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.897287212 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.906635208 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.899014561 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.898393835 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.899731582 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.900808127 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.897497995 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.897171526 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.899065604 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.900419747 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.897419477 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.898672064 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.908031137 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.900477723 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.900360317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910514611 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.911700144 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.900955439 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.899701989 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.899423239 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.905266907 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.902157997 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.899069769 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.903261089 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.909289316 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.903361076 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.908644 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.900155111 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.899883813 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.899813047 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.899663536 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.898860645 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.911752826 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.911507085 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.900714186 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.900458913 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.908119527 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.901809855 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.906139478 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.906805708 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.901006412 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.900723367 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899948859 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.900135481 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.900494262 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.901929172 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.904750752 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.909778558 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.901652734 seconds)
  done (took 1126.474784739 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.901561396 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.90151149 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902239736 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.902591368 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.901397879 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902665933 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.900870264 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.900669516 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.901362738 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.901522381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.901822225 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901271186 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900306799 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.901317824 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901247121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902933714 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90186976 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900928694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.902495025 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901458455 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.901099964 seconds)
  done (took 41.760904971 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.901579727 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.902468993 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.901902857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.901898445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.901256574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.903119861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.901182445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90162159 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.902156163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902253497 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.901166573 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.90227976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.904008875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.902859868 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90209594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.904189393 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.902602775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.903135058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.903341375 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.902355979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.9034398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.902752102 seconds)
  done (took 43.682716282 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.904000529 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.902767796 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.903968891 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.903779464 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.903878842 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.902773822 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.902669655 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.904797673 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.90406486 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.904906818 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.911967949 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.912148276 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.904817227 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.907491198 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.905232997 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.905170115 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.052171937 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.904548761 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.90352471 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.905394768 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.903714526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.912225813 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.90628933 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.905161153 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.906210867 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.904217489 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.903624032 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.906663522 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.905136089 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.906003561 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.909537949 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.905530613 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.905694386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.909055336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.905333081 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.907593501 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.90891372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.905232508 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.904267349 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.904978017 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.915349765 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.931212731 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.905214761 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.905306796 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.912026514 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.907073975 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.906259848 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.910158329 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.914994482 seconds)
  done (took 95.414366233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.906743532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.906348128 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.906164909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.908593677 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.906104029 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.907634016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.906336236 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906722909 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.905631552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.907821256 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.907302803 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.90823498 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.906859512 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.907491101 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.905799076 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.906855037 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906434979 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905236429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.907956652 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905752518 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.90667684 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.906174602 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.907215499 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.907583529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.907086319 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.906484668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.907468323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.906636013 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.907471437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.906668202 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.906882021 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.906270583 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.906971258 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.907876596 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.907266983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.908516177 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.908193971 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.908057076 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909949577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.907931179 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.908666731 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.908293426 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.90779155 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.908214352 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.908062488 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.907782833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907555731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.908684609 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.907721289 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.909223433 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.90900246 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.90762459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.90840008 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.910568624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.908762908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.908690734 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.908109684 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.910261834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.908974102 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.909169105 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.908698746 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.910507961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.908252673 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.909553001 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.909606878 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.910346894 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.90799286 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907571306 seconds)
  done (took 131.560962461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909235602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.908019289 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.908951768 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90852985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.910802676 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.908830947 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910157797 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.909645392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.909419981 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.908767682 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.909665029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.909483083 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.908185161 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.908913616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909660007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.910536974 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.9101696 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.909910601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909708265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910585714 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.909963507 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.909800768 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.910489284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.909237399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.910790518 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.911590675 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910457885 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.910747084 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909691961 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.911228212 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.91244194 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.910834059 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.91180497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.911731973 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.911511278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.912053413 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911174447 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91047703 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.909944263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.910948559 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.911293912 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.911633774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.91248709 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.91071749 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.910581839 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.911240977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.911557805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.913348544 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.913299771 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.912224572 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.912310824 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.912896223 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912535414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.913037646 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.912743479 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.912204671 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913026517 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.913682651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.914229661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.913715799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.912828852 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.912959808 seconds)
  done (took 120.316700221 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913134536 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.913295448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.914575847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.913597548 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.912932208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.913905235 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.913032694 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.914536083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.913105544 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.912513202 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916019133 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.913836419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91472391 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913699258 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.912669947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91496739 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.913765118 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.914646911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.913149062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.913450777 seconds)
  done (took 40.113745974 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.913418106 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.914134761 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.914778378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.913296102 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.913800299 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.914232075 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.914178348 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914868807 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914501469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914617032 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.915351877 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.915461005 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917168781 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.912258244 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.912324595 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.91282138 seconds)
  done (took 32.467577841 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.916106001 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.913212427 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.912930265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.913037082 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.914112698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.915704554 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.909797977 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.911374385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.910829318 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.910564524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.910925232 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.910279854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.909756411 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.908762874 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.909989742 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.910307193 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.910989772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.910634295 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.910315324 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.911250057 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.910650041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.910860203 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.910451511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.90936637 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.910323601 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.911830895 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.91119374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.908927825 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.909528121 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.90967391 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.91022834 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.910489282 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.90825174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.90857084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.909479003 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.909522882 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.910044244 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.907627612 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.90390013 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.90664012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.90493975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.905558926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.905698742 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.905277017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.903639293 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.903476632 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.903775291 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.905722298 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.90371589 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.90383134 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.902578916 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.903072779 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.90602971 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.900269124 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.901324593 seconds)
  done (took 106.817403916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.903997161 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.900048311 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.904028025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.902959039 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.901631419 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.899668944 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.903093925 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.905252255 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.902160647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.900900445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903869261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.903096345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.906310685 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.903171035 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.901140778 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.900472651 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.900809829 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.902887357 seconds)
  done (took 36.073004464 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.902812769 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.902500255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.902159863 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.902947477 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.906682638 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.902184192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.904370585 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.901790975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.901734652 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.901351055 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89850831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.897191055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899536439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.897202536 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.898989401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896467386 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.897549481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895769826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.897125661 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.896415662 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897481461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894794996 seconds)
  done (took 43.625817332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.897877298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.897431055 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.911808974 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.920620674 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.916639912 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.935302759 seconds)
  done (took 13.301904663 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897056593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897479477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897631234 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895191325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898000165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899394666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896922301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896329931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897068116 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898341307 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897498324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897704462 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896924577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896214319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895780235 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896912021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900607846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897454333 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896856877 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897328001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897876442 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897239422 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899186735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897701958 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897285633 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898584749 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898170401 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898163954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897928092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897611648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901421293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896684598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900998187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898443838 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896475839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897620752 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89751634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901019374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897848238 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899471962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899663783 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89735791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903466543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899654026 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901267203 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898710551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900018382 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898834447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89963225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900832385 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89786247 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899008918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900208827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902319811 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896011989 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899252137 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899479192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899686118 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901749521 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901415048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90012261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900660165 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899455758 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901167557 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899727834 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900192072 seconds)
  done (took 127.137998337 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900325556 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.900415592 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903987491 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899449853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899554596 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898618703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900904811 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901803238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89865607 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899885794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902645636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900567566 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903092464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894667503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895696904 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895015172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895338346 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898132105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89385728 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8927853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89381267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894067166 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893169256 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893876971 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892477296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892820481 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891915972 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892694887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894632447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891788448 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89139469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891653263 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891975375 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894570717 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891893587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89078525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891045841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891017724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891884682 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893076747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891028982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888904229 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89054392 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890676481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892220722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888403766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888784466 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889505153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887569843 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889826767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888678352 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891445716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88916696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889023219 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891895824 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889558846 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889728736 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887826176 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890421464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890370194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889574902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888334492 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890321637 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889138809 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888222303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889388655 seconds)
  done (took 126.784048049 seconds)
done (took 2620.25147651 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.916823517 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.992520755 seconds)
  done (took 15.722684392 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.053151109 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.004224623 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.890749359 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.909903196 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.886968148 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.910739881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.885771815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.886423571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.88810949 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.889503002 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.889594785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.07237944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.890305661 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.884263848 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.886507188 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.979525122 seconds)
  done (took 52.626372508 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.890655085 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.890913444 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.903024608 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.891948781 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.889768018 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.902537182 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.922548263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.892757392 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.927042378 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.900840432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.961036312 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.899729558 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.890457188 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.941943124 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.902449837 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.904565552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.981490392 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.965065877 seconds)
  done (took 36.268892811 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.971863681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.88776017 seconds)
  done (took 10.678236985 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.920024199 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.907941966 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.911763226 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.89821159 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.906766977 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.89454549 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893218502 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.900823031 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.911101798 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884202024 seconds)
  done (took 70.8431555 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.889104597 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.886837996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.887284832 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.882367305 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.881920303 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.884555443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.883053596 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879323365 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.575210131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.918859269 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.891447299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.892032248 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.886740139 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.885455554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.88176685 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.910389072 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.994079124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.884356463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.881448444 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.888805113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.882360785 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.948832702 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.896528916 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.881919055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.916781886 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.570141989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.891038345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.889732981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.013283802 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.878522553 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.881053953 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.066732145 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.887957333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.345693805 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.158668503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.88474638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.890903201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.889812225 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.880129822 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.02483628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.883664246 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.887874875 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.797667383 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.131052496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.967074408 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921495087 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.214101909 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.880078741 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.877200408 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.908931729 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.880879311 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.878691113 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.899799571 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.39057825 seconds)
  done (took 133.573766472 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.877173488 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.222338499 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043273479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87777627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.158104733 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079286318 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.875350237 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921576141 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876517936 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1027103 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124290787 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977494569 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875652824 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.876887774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873483376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870208647 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028680311 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.944046405 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.877182795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.878036602 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902372892 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118724565 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998869286 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.876579568 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.901875987 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087922696 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.993793643 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97893516 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.640621583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.875114472 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939404759 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.880699471 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.876809294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.872019363 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.034710871 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966758391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954341474 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.875977324 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87392834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.882794047 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.536653823 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077468553 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968986532 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.004205017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124900547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076967608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.65568874 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.876264681 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616377689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040328907 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.104127014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104080173 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994350227 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.878370941 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.138625882 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876611414 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.88446148 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128042108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098883332 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973691279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880378711 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.881221373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875924527 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.117591978 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.876710224 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.967680904 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878600676 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875568743 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974216511 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98079033 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108229431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087035043 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.904154766 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.220101615 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.3900215 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.126261349 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.943050617 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124393323 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.882244977 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880155663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956507512 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.721982553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13051445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120386999 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120323659 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915014797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599771715 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.879211857 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.109393006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096904951 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.137389178 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127218612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.114531287 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201274674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.879724747 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.88124137 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.141273654 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.998017703 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879366608 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222655005 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111268368 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.440227307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90719096 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185578919 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00736252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.884221142 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.509221157 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.88325974 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.110031887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918951137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.882432706 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880878964 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093895155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.865416 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874396522 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.530775924 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.939049788 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876616631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108215054 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879000346 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14645486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880763169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110768454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.406613685 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908768014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.049673905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125990753 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.88004432 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121299159 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116411486 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990285546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095060295 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578923289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87932004 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167680364 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.884404755 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.88236102 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045988525 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.881290945 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02358334 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.881988965 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172219543 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899343952 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111182277 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880141361 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.129577155 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.909040688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933643629 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.881813154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009685163 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888600357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.705706032 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.04188417 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881528775 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.878919482 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.424946621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.886700245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025718703 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109347159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898930656 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.951553576 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.540006002 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.880200878 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961362212 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901487461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.264912709 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.881212693 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.132563717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.883468652 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.879973632 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.879853934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113292504 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.058302777 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.881676942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.878278286 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.79527949 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.879812748 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.885116597 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059653474 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.249965746 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.882729 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087925716 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882563131 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012470657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.882858868 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.95992641 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213905658 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880763306 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.88144655 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.883914781 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.881848465 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883519238 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093802758 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906533705 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.415421721 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.019424943 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156601078 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.189447988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.123430464 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922859747 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88201387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130569006 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.885040389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937645697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.882556679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900837715 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108661295 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885864464 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087912323 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.15010399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.762061837 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932585159 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.881422637 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885141036 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.882284434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.026328356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963834417 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.883736978 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.879972222 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994279712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00069202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090184862 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.881535446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93049256 seconds)
  done (took 904.65492455 seconds)
done (took 1226.183266775 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.88307145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883281343 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882856598 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881892752 seconds)
  done (took 29.338089495 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.887838594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.883531363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.882585943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.884405422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.88254488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.887064801 seconds)
  done (took 13.116495353 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.909317784 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.887378865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882008583 seconds)
  done (took 21.48694378 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.957149222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.290080979 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.027266874 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317743 seconds)
  done (took 10.400607457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.884855557 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.882660751 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.888355696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885858696 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.885065551 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.885713096 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.885143533 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.885874578 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889420328 seconds)
  done (took 18.784071187 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.558330802 seconds)
done (took 99.49396194 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.525168457 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.253856811 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.403496739 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.605035782 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.16186269 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.971808235 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.903342047 seconds)
    (8/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.355997909 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.99819332 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.905540339 seconds)
    (11/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.326626548 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.190909924 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.921638528 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55988229 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.905445901 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.092990292 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.988489968 seconds)
    (18/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.124196311 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.904960776 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.671394642 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.997766962 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.30117662 seconds)
    (23/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.612058533 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 6.900748718 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.905794949 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.70161047 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.328876355 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.964903147 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.990780247 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.398212705 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.979123208 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709918287 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.179319544 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.161596077 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.98145232 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.920026058 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.073396142 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.453080703 seconds)
    (39/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.984449688 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.153817797 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.901173254 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.542703247 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.264992059 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.041166044 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.902447493 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 4.103207395 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.726568038 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.328871911 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.121982184 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.905122433 seconds)
    (51/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.737082997 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.104857946 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.202975677 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.067765825 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.219955014 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.116378576 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.530844201 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.29776591 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.039978375 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.145048525 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.032114553 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.058080032 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.924926607 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.904192858 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.912327274 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.999948532 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157487061 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.199842816 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.93734059 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.0486245 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.171373393 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.92902234 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.172277436 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.785831722 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.02428253 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090230469 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.523123968 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.932220292 seconds)
    (79/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.984229825 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.064218205 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.263940025 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.929216493 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.092784431 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.293494401 seconds)
    (85/309) benchmarking ("sort", Float64, false)...
    done (took 5.61279823 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.9241962 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.905947368 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928274376 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.032903772 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.163086668 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.940465268 seconds)
    (92/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.01068935 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.279231085 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.029874713 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.08785254 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.235778541 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230698471 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.306607964 seconds)
    (99/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.553291182 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.515800872 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.230535672 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.92805016 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.908122191 seconds)
    (104/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.045349343 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.031127067 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.284335745 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.292628466 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.996683863 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.500435331 seconds)
    (110/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.035112994 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.908962763 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.987219043 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.225800752 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.236431229 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.05042652 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.93108521 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.906444972 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.170232344 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.935276175 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.26041134 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.154854103 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.906988184 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.93269473 seconds)
    (124/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.440774099 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.046652223 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.914385941 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.91240036 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.970141075 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.114415034 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.806148028 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.002389198 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.226539759 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.911775929 seconds)
    (134/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.845316547 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.276425526 seconds)
    (136/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.916425599 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.938874998 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.168894186 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.165916333 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.395247405 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.003171216 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.244665724 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.406314211 seconds)
    (144/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.068012285 seconds)
    (145/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.237441087 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.278471331 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.059976275 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.910724476 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 9.653138184 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.010519508 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.952807478 seconds)
    (152/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.040493926 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.006707055 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.01136427 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.178156675 seconds)
    (156/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.156830331 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.013307895 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928363091 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.921050221 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.910971528 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.195035582 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.938437866 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.021039383 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.404744231 seconds)
    (165/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.122022989 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.040023445 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.010950598 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.014900625 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.232161661 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.219871761 seconds)
    (171/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.021302164 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.966203548 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.915693213 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.373804033 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.910188013 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.1409309 seconds)
    (177/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.04727302 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.091065079 seconds)
    (179/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.682068474 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.001141151 seconds)
    (181/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.064668615 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.214495191 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.970541381 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.01209482 seconds)
    (185/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.610613874 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.90842468 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226977797 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.915866184 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.432614447 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.913775044 seconds)
    (191/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.090199242 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074593822 seconds)
    (193/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.282512745 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.230862938 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.046682761 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.501110436 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.410402163 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.544253889 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.103828901 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.911593305 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235293232 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.915507623 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.626801855 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.910463381 seconds)
    (205/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.667432602 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.978033837 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.916070334 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 4.875633077 seconds)
    (209/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.822576501 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.101268245 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.101751677 seconds)
    (212/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.050060009 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147228295 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.858566575 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.06079001 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.223036549 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.021150398 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.576749853 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.597519624 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.23142265 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.804673473 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.215188794 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.916426057 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.91495703 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.18491642 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.065203465 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.707526332 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.917639345 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937751959 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.914508411 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.984830097 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131403477 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.914118597 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.995065792 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.012917618 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.979269387 seconds)
    (237/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.002092794 seconds)
    (238/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.308257621 seconds)
    (239/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.399230587 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234138139 seconds)
    (241/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.252617096 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.914763124 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.998358252 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.633722447 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.297279804 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.330025978 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.93429632 seconds)
    (248/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.121631785 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.17790023 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.410218743 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.936408579 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.049314782 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.067872233 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.694931579 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.351774937 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.721752505 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.102939414 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.04314726 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.916874327 seconds)
    (260/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.454588303 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.685963909 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.254357917 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.931461136 seconds)
    (264/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.046285866 seconds)
    (265/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.939387514 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.208239749 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.017905104 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.919458141 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.141410283 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.932139632 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337523961 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.938016567 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.592184251 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.923836186 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 5.577214848 seconds)
    (276/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.382175007 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.922181465 seconds)
    (278/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.989157687 seconds)
    (279/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.226160127 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.275521143 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.072888968 seconds)
    (282/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.700596721 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.994895323 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.916909574 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.008571142 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.823943813 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.316769557 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.074666157 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.922220588 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.165780434 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.054477394 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.920088948 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.317311977 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.22670115 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.736711736 seconds)
    (296/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.144721168 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.945484069 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.991258604 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.929532597 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.910400736 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.751146217 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.200085404 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.910495068 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.286264048 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990925435 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.12695801 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.811474988 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.12964604 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.218716979 seconds)
  done (took 1026.345577163 seconds)
done (took 1028.239135652 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.941663105 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935388661 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.916422043 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.940232097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.031752396 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.960772065 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.930297446 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.921763408 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.967627981 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.968468242 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.918863625 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.955382089 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.918934514 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.918291632 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.917546107 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934050999 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.227438202 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.943967025 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.936328316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.930782298 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.937533394 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.917868736 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.969751715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.957837597 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923013992 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.923561158 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.922372642 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.938189134 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.03081674 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.924607846 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.92272677 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.931310214 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.227458534 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.941647322 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.916030216 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.938463937 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.933350938 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.931524224 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.924304765 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.951963212 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.37090374 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.921289256 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.920583896 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.921823792 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.92000878 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926732671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919937286 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.930649925 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.932347432 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937973498 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.362144949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.939032208 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.923227365 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.921021115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.932530465 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.921005751 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.925127085 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935609164 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.942228093 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.934654044 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21685704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.951458913 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.926196414 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.94244499 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.928836929 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.40239565 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.922508076 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.929919738 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.368088245 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.930487914 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.400928422 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.933522566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.925153797 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.937090844 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.952178945 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.22816409 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.943072486 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.920371566 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.92978422 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.919617165 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.935033093 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93685193 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.931365363 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.923748069 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940705243 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.964424378 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.933737308 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.922711764 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.934845079 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.942684326 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.932679942 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.934569846 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.927008808 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.922607319 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.937008127 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.927088823 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.926872081 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.924192311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.933890865 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.936073421 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.371106569 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.939958152 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.920814689 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.922567722 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925374221 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.937925624 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.370724828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926140366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.947240413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.971855574 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.924646494 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.219447553 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.951272001 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.93986933 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.936307759 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.92694624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921748873 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218326476 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.395504797 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.939982497 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.924234886 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.920765732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940848104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.926581069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.922164138 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.22968417 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.948648008 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.937003567 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.046937592 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.938809135 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.956268372 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.923517936 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.928149955 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.970122532 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942267259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.957109603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.927614792 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941185535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.943179303 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.923311889 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.938520503 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.938121887 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.923829884 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.934248625 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923033423 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.971241285 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939560568 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938144767 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.94802135 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.048708863 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.923078928 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.220053867 seconds)
done (took 302.145806377 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.001108734 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.92247259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.0458033 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.922899033 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.011458253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.994449806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.922170796 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.92426673 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.920736603 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.414520618 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.922290012 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.929209031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.923256288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.922854549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.990828172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.924049712 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.922397757 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.372135554 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.923022862 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.003959353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.922869339 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.922696845 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.924435402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.419029051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.923727956 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.924302471 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.006585522 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.929346087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.372150803 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.923689015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.927560953 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.37190573 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.009558987 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.953703624 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.933894338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.933859506 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.015966582 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.940371152 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.991065289 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.992190939 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.048573778 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.958193504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.930151418 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.926594161 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.930906678 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.927724083 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.927344456 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.963024545 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.926212671 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.932855982 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.36684104 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.935025437 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.933304365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.92727644 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.927537571 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.954267108 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.926684181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.927349593 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.00699786 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.927926424 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.993404946 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.424930192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.41818788 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.927872371 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.927165406 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.929913656 seconds)
  done (took 189.02400326 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.994359699 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.000011435 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.99296433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.932941202 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.974512433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.99574599 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.931680927 seconds)
  done (took 15.673431332 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.934240069 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.926735338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.979120503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.976584367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.928483912 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.10901325 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940286587 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.931747003 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.953353798 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926922787 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.579327851 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.974566531 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.935170458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.927952567 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.939998329 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.980986449 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.93020584 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.926466113 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.036561944 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.076009789 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.938644917 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.936176096 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.953570927 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.941124587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.927800524 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927991012 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.926769174 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.935484833 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.927413566 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.925326474 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.928036353 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.978542411 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.928760892 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.927889267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.928809786 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.9279838 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.927883787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.927782978 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.929412882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.924082956 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.927790892 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.928187392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.928466115 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.927732257 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.927841173 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.952159621 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.930381372 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.930003614 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.928476243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928796406 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.954339452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930797567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.929024776 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.931788639 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.975484682 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935884848 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.928108324 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.927948147 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929403481 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.929712247 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.928234051 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.078013063 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.978202586 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.929661751 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.977934006 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.080429418 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928895531 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.928071154 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.929676298 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.016610253 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.92728587 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.977835193 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.929065569 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.041844597 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.930630002 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.115607934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.958256494 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.932881125 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.931231856 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.928941208 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.937028701 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.930149786 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.931829679 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.936187899 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935798642 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.931543514 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.929670396 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.933062896 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.939297039 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.92999501 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.982656565 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.930158517 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.92878702 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.064281503 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.934879623 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.039423971 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.958029542 seconds)
  done (took 211.739961688 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.937758609 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.939824285 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.932489504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.947050773 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.932732729 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.930924226 seconds)
  done (took 13.475249351 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.933827062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.935497527 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.93130678 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.933983498 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.933873952 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.93429566 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.934732203 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93582481 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.937392206 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.933235036 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.936686646 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.935310807 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.934490915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.933323893 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.934980429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.934574883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934419634 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.93464696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.934157879 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933780341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.140520455 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.934544444 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936378257 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.938759944 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.940035269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.935848587 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.946976254 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.936098635 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.934369113 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.943423189 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.939730336 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935500545 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.938676856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.940425375 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938654575 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.939035045 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.937910194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.93738347 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.934997595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.934949132 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.936136776 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.934947596 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.93353712 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.935961409 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.938721651 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.943417083 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.93966535 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.947982901 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.936059488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.935308361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.937189472 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.934242132 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.936716585 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.93560498 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.940994733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.944111496 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.942691325 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.938372702 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.936262726 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.937762574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.940081306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.938287725 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.939431467 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.940534169 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.945140996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.934541698 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.941366208 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.940044412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.93764034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.936924646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.937756952 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.939213047 seconds)
  done (took 142.54890868 seconds)
done (took 574.326233331 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.022307446 seconds)
  done (took 8.881604434 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.131051282 seconds)
  done (took 9.088865168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.629102756 seconds)
  done (took 10.492953032 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.943895972 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.947786881 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.947159545 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.942333815 seconds)
  done (took 29.655087732 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.258100581 seconds)
  done (took 9.121466087 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.952103833 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.933803646 seconds)
  done (took 15.824418065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.021417046 seconds)
  done (took 8.884388421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.15676061 seconds)
  done (took 9.035132585 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.963139028 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.955218259 seconds)
  done (took 15.801105762 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.943036791 seconds)
  done (took 8.806514191 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.510689914 seconds)
  done (took 10.463004747 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.950660198 seconds)
  done (took 8.863314489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.977206269 seconds)
  done (took 8.839273793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.982198615 seconds)
  done (took 8.845174301 seconds)
done (took 164.463945394 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.948438184 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.936410335 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.93480696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.939814575 seconds)
  done (took 29.620181715 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.974371139 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.975687097 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.984058894 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.975186426 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.96610725 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.965145541 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.975785876 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.975473652 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.966408181 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.975594034 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.978955475 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.972457138 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.974653543 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.984956133 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.98675435 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.974018241 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.975109151 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.977499069 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.967729254 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.984163425 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.974140002 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.975261228 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.941395494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.943785733 seconds)
  done (took 49.206897962 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.133688119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.012847946 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.094844388 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.995402807 seconds)
  done (took 10.097838057 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.942786795 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.00546045 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.99133641 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.987676993 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.991959468 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.044619666 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.994199787 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.079497694 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.070038334 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.066290525 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.949555595 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.963409757 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.970362242 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.987834553 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.048443703 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.942843038 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.944322094 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.057893879 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.005341555 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.134824778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.941647952 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.995986516 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.994700662 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.993677286 seconds)
  done (took 49.968176992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.943621905 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.954751771 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.95016425 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.944070398 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.946286263 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.945249127 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.952448316 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.946341083 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.96643246 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.945968204 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.944347793 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.946283703 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.952319557 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.946185891 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.943907955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.959016242 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.960004938 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.945731224 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.949305377 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.950739179 seconds)
  done (took 40.859463518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.942096068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.79128972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.288073797 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.195325217 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.943134836 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.938414304 seconds)
  done (took 31.961939175 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.956204941 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.948153501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.945533903 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.003135108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.080720067 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.947753425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.946191143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.957557355 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989311326 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005728649 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.959744802 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.974142111 seconds)
  done (took 25.580414154 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.944905569 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.942974204 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.942921813 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.956366384 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.955861917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.953165235 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.951017381 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.943630993 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.954648646 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.96222263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.952212763 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.955721331 seconds)
  done (took 45.286815441 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.649466447 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01605849 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940859327 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.816923397 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409566401 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493297546 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.834932872 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.660940375 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410111939 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.870401173 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146481472 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.94402827 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029719209 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.944428583 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216732691 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.356509386 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137828541 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184389375 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.709488417 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.982795162 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.14951456 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179380485 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.230933454 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946233879 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943996475 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.076432376 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.521648999 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.768674859 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979534346 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.37694474 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193772439 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891473758 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002425129 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.948638745 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.95755412 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9480276 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949915751 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216134263 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.077028593 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077603144 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016843821 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18677127 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94828771 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365386489 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.64619479 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.283573242 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.057328997 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946513719 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949934715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945626327 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874156521 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030939056 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.948238618 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949789205 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.645770854 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945446788 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019602166 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.94855782 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150365104 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.75402477 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638579764 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.945099847 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94848944 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.50307501 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050081829 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.055855732 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726782353 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326513113 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366366188 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.042322737 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.948519007 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946101984 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.191356894 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917997689 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725757621 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98376385 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084383375 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.962050992 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584992118 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239058889 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.420079496 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.508295633 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865517887 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224798335 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755808008 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937624691 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16078032 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.832428514 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874529783 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165712446 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978910028 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950611385 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211636863 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728987735 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054976283 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.958479165 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385900998 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962461513 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955786526 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949619952 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163632058 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455880453 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983304452 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06646055 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963336461 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032616231 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876090105 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.959070909 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.948910937 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.852702077 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951872348 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948294534 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.993236001 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.704070783 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995996548 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.888131235 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951006927 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055638143 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989018149 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.898142847 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200657404 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.252899341 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.616835622 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973866894 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.078954507 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.364862801 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175273253 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954154967 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164632424 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491549444 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.392649823 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997011263 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241124963 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.0114704 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243781871 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384024181 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02643277 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.740326599 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573175154 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.165108313 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966676436 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.949302235 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952476375 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953917869 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885568173 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.63273375 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.352756526 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.115387339 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163036646 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.388300231 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.935528879 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.94904106 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255865533 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086066994 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955564551 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.608203013 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.467113992 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.783314434 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.974351877 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199786893 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.23562052 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.915277809 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962857032 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028635215 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967663015 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.965837241 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.352346648 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313045075 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.952289706 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.954524765 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897132692 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95339996 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.957206155 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.48744368 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923572625 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95285788 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.965152926 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.828533188 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026240816 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95503843 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954359306 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.489590971 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458283451 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.958130972 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.624124959 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.087687319 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024890742 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226939988 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.350963047 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079247911 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.654455617 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.399923571 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.062469865 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.652976827 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880238275 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.951792377 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.892721901 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954389254 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956281603 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959213508 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.144438252 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236079097 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256101276 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.411819094 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.018595144 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156892101 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.682877997 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907882059 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.954758366 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960730237 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.959178294 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953704941 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.470770704 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.195276707 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.059674697 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982858732 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95957895 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082141166 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.965605848 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881350698 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.960288429 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95797789 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.494607915 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.98619739 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.907830265 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.318060435 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.802685042 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083571153 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002811277 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.970264227 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96380761 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.6881389 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.998601093 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887457554 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485195233 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994275224 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.743398153 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444895055 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.515641503 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271232574 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279049494 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.289223693 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.031157056 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171240338 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047703482 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014387177 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045758669 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893231407 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.882256358 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.619606001 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285868278 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228635742 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963317375 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17297595 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742268878 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187625434 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988963259 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.745591293 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271006513 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936858028 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976032281 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.422838025 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066801923 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041596948 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961210553 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.917386924 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296258709 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001228328 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.663629606 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974514141 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312202961 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.491312072 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028526526 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.379596661 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177013434 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963510178 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322072194 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26819558 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.999832468 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.965967171 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.955048736 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.173232541 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546099876 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.825355241 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964063128 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.212202151 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263903641 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.868175473 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.963481777 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214518204 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220907387 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960836172 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.340089874 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32604736 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.065290362 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021075257 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188775612 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744179509 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266047138 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520306347 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.455236809 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963313431 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888547947 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.663583174 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.165068682 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.969969172 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937581053 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173380739 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194157591 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643584676 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177016129 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205166573 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.972822635 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232263233 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03954638 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.058262859 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316781919 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.3920618 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208977711 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188546883 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502790637 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177582761 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438690055 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.131319228 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.967212235 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169766616 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17866447 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.17781693 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.374968358 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136007549 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.675093654 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.969365429 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.173351281 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268448452 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024390962 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.383702059 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.133925315 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.042604832 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971470487 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028019691 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.969458208 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971890273 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.371675177 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493877313 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.976236722 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04195095 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.088411871 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.475923395 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.964938913 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.969939303 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235535681 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324525516 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310334329 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9487598 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.964414374 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966097176 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093489359 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.890269401 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970173337 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236850775 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.96855504 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476433776 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.11290825 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979564604 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.312864477 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352075435 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734091411 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928064785 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969292587 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183808206 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274264474 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.242238825 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082554333 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235636764 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308122404 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.998048148 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.383498855 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206946355 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968061176 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.84018491 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970624399 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099950981 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.168859606 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243698441 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.541527256 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691651398 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229696922 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816118153 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968731814 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.693095348 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230309722 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238967817 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019241515 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030823088 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971597228 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502819014 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.688390751 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098753356 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.841701524 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891134331 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.979248911 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302782852 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.209643224 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.676498641 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97188901 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245386071 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267674839 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24117991 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.020436729 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.894806853 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181195666 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96825279 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.977259039 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233901899 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180829886 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216422654 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971070032 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975233691 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.773652724 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894534352 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.963710683 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022518898 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195460586 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987549314 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482495484 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.666597111 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261701791 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015119374 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969918089 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241985612 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.47720069 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527964392 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969436426 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183822355 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.992374145 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261688354 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.969662705 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.544460229 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272397621 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.96675305 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.604767811 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.213003694 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236048075 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899181668 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973257287 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179966144 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.87030105 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967145919 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976104046 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501252693 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201718053 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.702489669 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525224315 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.969019718 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.971988689 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.553491682 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99930925 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513133173 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989723135 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986146353 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48638274 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.658527308 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.252076424 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209674767 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.602673553 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.604290809 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.969342516 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.967486493 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97093995 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886562638 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14930698 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.15671932 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248731506 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001329773 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507220283 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003424502 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.365159029 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083722613 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231442408 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007982141 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489152815 seconds)
  done (took 1706.033538745 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005376257 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.995153386 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.028666411 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.002249938 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.987425478 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996269772 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.023205359 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.990167084 seconds)
  done (took 57.921750457 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.978834492 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.990362501 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.982923858 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.978828156 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.985095186 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.980572564 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.139086084 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.987347037 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.980060322 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.982300259 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.97772823 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.974883369 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.258827856 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.995077491 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.978577729 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.978526325 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.980262477 seconds)
  done (took 76.033141935 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.982369386 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.162177875 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.037711674 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.982333616 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.872963724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.988566217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.877665218 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.014527406 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.982646636 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.171401131 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.273781528 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.02457966 seconds)
  done (took 91.274554538 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.986343186 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.98073907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979874396 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.984456798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.982467149 seconds)
  done (took 11.821954789 seconds)
done (took 2227.598776573 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.223303799 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.043736197 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077815454 seconds)
  done (took 6.024120379 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.128213815 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.171917539 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.289701941 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.050860336 seconds)
  done (took 10.549027949 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.280137434 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.350122146 seconds)
  done (took 6.534207228 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341360341 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.986323627 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.362070549 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.98435227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.984284015 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.983661285 seconds)
  done (took 22.861149509 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.98286474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.984361877 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.983885131 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.983435705 seconds)
  done (took 9.839214504 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.981770151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.721107292 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.981812947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.991637701 seconds)
  done (took 21.579730952 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.137690469 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.09908912 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.126612898 seconds)
  done (took 8.26686569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.204660396 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.097017804 seconds)
  done (took 7.204711857 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.126659299 seconds)
  done (took 4.030237506 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010691453 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.253590594 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477538601 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.510066759 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.628902331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.729691994 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.290606813 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.213305577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.394979958 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.412635023 seconds)
  done (took 25.827133921 seconds)
done (took 138.535372185 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33554854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996783098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.184084303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.348519316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.204200881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.182289175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.199214055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.340354768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.010505543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.001508523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.340880452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.201639241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.15434708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.991777167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.157780805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.997115054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.203619412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.343335803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.022086036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.239024569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.202301436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.994753541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.186498526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.000228133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.203281412 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.140408713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.53497244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.995161419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.172940265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.543576213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.133176388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.386347326 seconds)
  done (took 171.855120246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.983980516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.995782827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.981269183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.981075862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.239281024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982581852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.981279512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.981773116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.237321583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.230354353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.981355333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.240325225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983822362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.980484054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983969866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.979810242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.395369421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.983260364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.98337095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.980777913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.98585787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.088890947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983607289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.101404943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.383833316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.982090523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.982745136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.982178256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.984912202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.981226129 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.983561041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.984649776 seconds)
  done (took 211.421597159 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987929629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.983402258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.98510446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.985401205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.983681912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984901745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.988112555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.983574755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.72466967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.716889051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.982905427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.982450224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983959688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983905578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983941125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.983100469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.985808662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.982755599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985678609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.984828809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.983720701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.715076617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.984896747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.725256637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.983689917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984707419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.984633805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.983486787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.98279283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.984040467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982559065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.986064766 seconds)
  done (took 224.356000413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.227858899 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.990447425 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.992886684 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.025339619 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.991241498 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.991563343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.998492142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.236630171 seconds)
  done (took 20.364621568 seconds)
done (took 629.915530624 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349096293 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.182445613 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.163408953 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.012065197 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.278551851 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.057301657 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.008314443 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.072330355 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.862851196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.081513671 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648831907 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.025141249 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745891703 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.030250907 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.137798626 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.065791054 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.5880257 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.688328909 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.152859446 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.112629266 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.195736161 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962094997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.083899317 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.89661502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.663512187 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.993796078 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.070077306 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.598878306 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.019446659 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.172214131 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.701681158 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342360473 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.020142822 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.01108946 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.062144144 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.043009385 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.270573306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.016606134 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.14422184 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.756435026 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.08998868 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.757659286 seconds)
  done (took 108.046607044 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.001028452 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.99794078 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.996621225 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.999012672 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.006006952 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.995999207 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.997179538 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.997503012 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.998476892 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.999074322 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.997734137 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.00726543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.996901636 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.006966314 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.995679896 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.998361599 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.997962637 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.007766864 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.000864954 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.997896381 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.998283124 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.999346165 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.993148207 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.000060095 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.99739681 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.99898865 seconds)
  done (took 53.911152592 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.991402506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.155745786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.237149976 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010984028 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.993460165 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.997073005 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.012423573 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.996513983 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.996209969 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.994993506 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.0856715 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.999555665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.013050799 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.238322155 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.009399567 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.994795805 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.995993528 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.995081543 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.160739551 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011443207 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.012995019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.997201742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.013174586 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.007670902 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.99694174 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994550109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.999015162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.476167588 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.003188328 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.087664504 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.035180389 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.014856705 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.441206989 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.246196118 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.043023607 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.998307558 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.994341118 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.094195092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.002097013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.993754412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.013472731 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.999744739 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.240779139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.516076031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.011882274 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.995722457 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.488931976 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.101408657 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.033071539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007598665 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.24390924 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.009907384 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.997811448 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.998074175 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.033711173 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006816696 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.997236907 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.359315272 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.009161258 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.016683266 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.001271853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.999617275 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.171076689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.006341717 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.158137701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.007826062 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.002934127 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.998197652 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.244242783 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.010374628 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.534185267 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.011660234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.996473374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.092718139 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.161493019 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.511458548 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.006643638 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.170727969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.461035114 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.018358686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.003059645 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.467374727 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021853912 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.001314896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.997631749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.997077318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.995407815 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.040310637 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.011488184 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.440896868 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.531014303 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.3767461 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.023626252 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.007362555 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.99827295 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.356728373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.007934512 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.997928979 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.23226489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.538765708 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.012629536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.010867393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.514615407 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.014466691 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.015578047 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.004768376 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.252750711 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.009398558 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.04378482 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.998317073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.005637836 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.002872923 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.017143004 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.005997756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.998851118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.509107664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.109717472 seconds)
  done (took 247.479252046 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.997960448 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.996082662 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.998084132 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.996337981 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.997340127 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.999995894 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.997641926 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.998849042 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.999645188 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.999171523 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.998209106 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.998592251 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.99776165 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.000599571 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.049196609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.002058597 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.605704861 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.999297732 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.999174079 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.994322431 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.637908435 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.001446866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.999025051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.996861827 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.00055626 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.999851954 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.001896447 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.041942857 seconds)
  done (took 171.230804764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.000607424 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.110299998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.01343674 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.029267647 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.002961938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.002053838 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.096349123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.013506364 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.006157959 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.001574166 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.000383742 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.05879772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.009152563 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.094444133 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.024668148 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.101460815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.098909705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.003071072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.000688091 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.001048212 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.027800315 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.006474225 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.061050654 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.118468688 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.014388182 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.109578507 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.016371775 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.000431728 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.002189299 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11169493 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.014722202 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.061489966 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.029838762 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.01675285 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114949045 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.109613519 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099584504 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.099114305 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004523726 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.00331747 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.002344333 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.003244484 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.111262279 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.017794382 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.002141005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.11532074 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.015392274 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.003442762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.002643703 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.002610119 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.015196951 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.018427177 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.065572019 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.127342486 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.035626569 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.024284597 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.098224386 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.121800432 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.003562085 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.098456014 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.007039426 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.112983993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.01892682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.00785534 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.006248801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.0084878 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.033501277 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.103571683 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.102434056 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.007684454 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.099668379 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.035333883 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.008933047 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.004313031 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.004035165 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.1130424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.115719776 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.033660575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.038993363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.030726028 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.011819651 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.005784684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.006422963 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.022041555 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.009497741 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11366601 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.116068777 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.007448885 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.003976899 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.00266574 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.004265845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.026986337 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119308129 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.03619569 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.105893052 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.067725179 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.073981696 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.016144533 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.016869774 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.007673339 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.067639759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.014497505 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.015340186 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.288377778 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.066745378 seconds)
  done (took 216.621174754 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.381569807 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.043749605 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.058136682 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.336864281 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.386664459 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.972035192 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.04102781 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051887243 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.081672474 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.264067856 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.119598693 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.069012617 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.028459657 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.020393667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.043766731 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.079494088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054150676 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.39891369 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.260160524 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.553000464 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.034536578 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.315570114 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.37886408 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.63549615 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.092485682 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.448316625 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661103578 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.203368829 seconds)
  done (took 66.944196368 seconds)
done (took 866.146322401 seconds)
SAVING RESULT...
DONE!
