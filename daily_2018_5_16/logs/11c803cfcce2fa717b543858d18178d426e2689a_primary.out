cset: moving following pidspec: 15539
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.653612172 seconds)
loading group "string"... done (took 0.551012327 seconds)
loading group "linalg"... done (took 9.229891256 seconds)
loading group "parallel"... done (took 0.179232004 seconds)
loading group "find"... done (took 1.518236044 seconds)
loading group "tuple"... done (took 2.186555254 seconds)
loading group "dates"... done (took 1.485217112 seconds)
loading group "micro"... done (took 0.216560756 seconds)
loading group "io"... done (took 0.595085148 seconds)
loading group "scalar"... done (took 46.786534805 seconds)
loading group "sparse"... done (took 14.255259527 seconds)
loading group "broadcast"... done (took 1.244985219 seconds)
loading group "union"... done (took 11.056799662 seconds)
loading group "simd"... done (took 2.883296395 seconds)
loading group "random"... done (took 10.712202402 seconds)
loading group "problem"... done (took 2.320793844 seconds)
loading group "array"... done (took 25.665655331 seconds)
loading group "misc"... done (took 1.165882115 seconds)
loading group "sort"... done (took 3.988466017 seconds)
loading group "collection"... done (took 20.31779573 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.669979511 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144827244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.225207526 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.358345632 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.225700274 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148966605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156100079 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26879855 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.232786212 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22387852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128089679 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.559660054 seconds)
done (took 6.039973125 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.247136953 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.250524307 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170731866 seconds)
  done (took 1.056180179 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068827781 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.168626538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089775823 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106346358 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105755601 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089170163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104709936 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104936416 seconds)
  done (took 1.409580018 seconds)
done (took 3.425492511 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519533481 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.904688526 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.585401686 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.15848981 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312025257 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317013106 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327713731 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215509732 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.085398076 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.103056942 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169667229 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.444156411 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.435858538 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.031357853 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102568537 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094047869 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.125770437 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.804013329 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.071720576 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129873169 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.561036526 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191100002 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109277249 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112769747 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193031412 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126318969 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173337925 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.087908669 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672345948 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.124361412 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196469368 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.076310828 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171742774 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.239812474 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213884091 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.087098743 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673098486 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194126476 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095194579 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094652125 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.713388952 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123549438 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.161217855 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098680335 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085785551 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181662235 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112857916 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.087574582 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094122388 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094811375 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163040195 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482111801 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.087004986 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.152424398 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101614969 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.729436739 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094169592 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275611056 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129507162 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099895632 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.070186236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098760644 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154293142 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089412592 seconds)
  done (took 20.489881016 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.152095697 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161595011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0712402 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153605423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138555833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07366134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09481216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07250179 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123208917 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232400296 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136013744 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.161047301 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085423826 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080154666 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.139800578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243963757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096836352 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116148964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095993236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085569438 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137182499 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.105137256 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089437961 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105826138 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16239593 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196964379 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10067517 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115436738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093951619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095538626 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136754467 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157959478 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068124777 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094755811 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181547806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113659521 seconds)
  done (took 5.128695651 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.217768059 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117707092 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.21240269 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185849244 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12440211 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180780249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137798077 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.289174511 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295805863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174539624 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121856069 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089896292 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087846307 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079641839 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.089567074 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.534050401 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180681783 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143807655 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.143947843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099472925 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094755374 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365266075 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092844015 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093221194 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079603751 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088493568 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20228836 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099861698 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142457831 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096163001 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0825292 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126762592 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197331955 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108690778 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134599373 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092242729 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07591048 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210785417 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108034666 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086452142 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105835253 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127696039 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12738121 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093487748 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08758398 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.232992297 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075734395 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118844789 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.064686154 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206335437 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.164210957 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07606223 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.313116899 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108722387 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08243299 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092895362 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075527955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.299541697 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111175141 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092824408 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074786375 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097417299 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072516542 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.802570441 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107803405 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.863471742 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077984582 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160706461 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100393294 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100931066 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077198192 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096617853 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111242631 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073564084 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.088638539 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074605059 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087980677 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080775925 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114913145 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077487236 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.090421289 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139878179 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103734842 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091605643 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118657337 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095971256 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071109724 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122949945 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090399144 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.076419209 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162821427 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102088087 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.148823421 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113565709 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096001989 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120430539 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089729524 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.203061244 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076220098 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117884413 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092841351 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105992775 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090879829 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107472346 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075351088 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094622961 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071803814 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091326927 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141456551 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087038325 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074113386 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099463496 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074121239 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105979093 seconds)
  done (took 23.415967561 seconds)
done (took 49.67042079 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.504442026 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11585919 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098050198 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114534572 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114929401 seconds)
  done (took 1.664147231 seconds)
done (took 2.352375329 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.38684942 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200707389 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113054756 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193961931 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081320498 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.220620686 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189385149 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10649007 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217119221 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097087591 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196567822 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098140253 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098084726 seconds)
  done (took 2.914945522 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092613055 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122039257 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093298432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10829603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072617897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110360692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091947199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127351357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089072911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10198584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073211421 seconds)
  done (took 1.767948655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088817319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115503001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079857161 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10422358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073785572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1038205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087855037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121602005 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087805128 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101914191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073344783 seconds)
  done (took 1.731604288 seconds)
done (took 7.096133349 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.133045076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.997705658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.143485943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.196415825 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368889905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.246457899 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608734394 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.180210345 seconds)
  done (took 12.751627758 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112409584 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094665918 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079721784 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.139300979 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095815949 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078220283 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097380266 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079973121 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095509193 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083206225 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095699019 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081283749 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096229417 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083321084 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096291738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08094405 seconds)
  done (took 2.249334952 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117379069 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115592345 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102514299 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088456849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100665452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098570542 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086407442 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099853765 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082085457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098858825 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08839486 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103196919 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101452982 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082270107 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100769095 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089777003 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099731944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089141491 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104844703 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088686028 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106106443 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102256369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089620046 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105597087 seconds)
  done (took 3.146010723 seconds)
done (took 18.839184083 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173135232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077490169 seconds)
  done (took 0.950537213 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142801779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144415994 seconds)
  done (took 0.992567156 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107171975 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093457331 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141261393 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11446932 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081850605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094926888 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11875159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097636918 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080772585 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097617031 seconds)
  done (took 1.733864039 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083442429 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097955462 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091991122 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.146348291 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11052526 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084954981 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102303157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084635474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103931222 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095342346 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09072327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120334048 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104537093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.107986822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102348137 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090537344 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11063241 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104115319 seconds)
  done (took 2.537021881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076941853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080468836 seconds)
  done (took 0.8644353 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083984006 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09436259 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084073886 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100111755 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079520646 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096668936 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081087452 seconds)
  done (took 1.329849383 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497987414 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267774362 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358143399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.114358586 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138607052 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360950725 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135768949 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110517796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110685447 seconds)
  done (took 2.843651833 seconds)
done (took 11.956243519 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086005132 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222093054 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.62930792 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.100678428 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094330178 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.138291639 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314494311 seconds)
done (took 2.296515476 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34207225 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152849814 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085558629 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079070103 seconds)
  done (took 1.367058184 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072790933 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102453203 seconds)
  done (took 0.890614886 seconds)
done (took 2.975176649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075786971 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075045325 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092860318 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13077337 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076282965 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09592371 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078459951 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094551643 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07829833 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07711898 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095280882 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078111164 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.094112247 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077444567 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093903075 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077701036 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093334055 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078526226 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092125074 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07897172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078834664 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093526058 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077391739 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09391215 seconds)
  done (took 2.830986575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100334334 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096463648 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08526781 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102417797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103343768 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086855228 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102625079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081327577 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102656618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081147203 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102457557 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085428548 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097231841 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103672551 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082096227 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103289799 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086254768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098540423 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081180364 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103400194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086383472 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098716883 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102621414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087368372 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105076827 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087427287 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098181456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082475815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102833708 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086334448 seconds)
  done (took 3.539393224 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084892524 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072325221 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093693284 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08266066 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089951552 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076779093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092160094 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076682672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097827441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078847259 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098528491 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078997653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091419076 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080292628 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098628886 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082004293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107291043 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076857459 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091546632 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080941867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097735895 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075734715 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077730556 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095626382 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078409629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093766926 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079270284 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096352745 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079587716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.094457262 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081685022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09878966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0795938 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104845586 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083625033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094940456 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084424801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092267848 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081337479 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075628689 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093971846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078289213 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093709989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087530466 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096442463 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080453907 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093327243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081985324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096699915 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084301681 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09264297 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076468726 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099104344 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082619713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100381933 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076783125 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079899275 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093586493 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080643072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095923992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075618462 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093806127 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083949511 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097332379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096772375 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104240961 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075922112 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099456103 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08171261 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.101689689 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08383611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108809813 seconds)
  done (took 7.066764813 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092264028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105269716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079105511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095797038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078354601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095526203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088939185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09701344 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081632608 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10783981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080874649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097713359 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081070067 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099058645 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081284288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098531825 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08884309 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098422096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08016654 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09901302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079729197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105552441 seconds)
  done (took 2.73376733 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235173572 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102092125 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146600496 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094769481 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118493894 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111975776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08289749 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104110856 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101202556 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090838163 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107678492 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084062649 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121042608 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109636603 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09300337 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110591982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102118086 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093108909 seconds)
  done (took 2.732852103 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096011731 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097097075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103258204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098557651 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083124439 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100884331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107677376 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.100333077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100090122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082648899 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111329125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08276367 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101048916 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082217721 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101382151 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085292797 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100671 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084195294 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110427707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109515602 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090616468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111550739 seconds)
  done (took 2.868933259 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096705467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09614135 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115065785 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104939404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08175626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099891836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106055695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08414344 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108801786 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082793106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101274421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082444092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109331934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083869815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109272096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083471421 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100382119 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083377759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101287679 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082213417 seconds)
  done (took 2.639096328 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173583554 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095568546 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114376278 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129488357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09927458 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114182223 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111558461 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114945304 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115469675 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114843796 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116436357 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098411773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128055267 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123881562 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098669121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129190319 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129274428 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12975506 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098449005 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115300488 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131323301 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098208945 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127622729 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096146668 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114659867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110844183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121042491 seconds)
  done (took 3.977250042 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078065437 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076382761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094398771 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076828425 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094454809 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07851409 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095299179 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076985473 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094698312 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080475875 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077700815 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.218225817 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080183079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097625282 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077703643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096519749 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077804133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095176509 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07710009 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094772648 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077277028 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077495249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095122979 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076638349 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097332852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08032772 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098224177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080383259 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097778331 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080050565 seconds)
  done (took 3.429477973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089504363 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104920459 seconds)
  done (took 0.928739309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086323406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115702204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078245877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096197002 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088905039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096247787 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090522009 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105697401 seconds)
  done (took 1.490303479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127423786 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146359881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101592111 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109338295 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127419491 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139120552 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141484892 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101415022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08080364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089565934 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138736191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07482396 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.099901875 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081169054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099329261 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089794295 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095859264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08934594 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103502455 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080999378 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10215649 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09022816 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102328128 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088486383 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092310971 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08656666 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106087784 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109503018 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080753874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103639997 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080650125 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096823815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083203648 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101602065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079180033 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.145604311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109773153 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07971241 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101467722 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084684469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10701654 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079482819 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10387584 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081088879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103695051 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083053388 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102452529 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079451454 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.093521441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07643606 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099498752 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08121436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098064081 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087609558 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.1043824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110420097 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080932189 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093971618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0793997 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09618167 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083783232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097622897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086418562 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101068663 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080676088 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100963963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084071491 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098058657 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082054442 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101225379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086722911 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119621991 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103520047 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085058389 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102907872 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08051442 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097634439 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086497603 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101260308 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085282722 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102064981 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086883609 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098827462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078960882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098006887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086595809 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09864002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082669812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09091983 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093244602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098757014 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079928716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093975296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08181395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099671236 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084173452 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097650989 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088132685 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100161638 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088590737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106719906 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080413568 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109221599 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088270041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107890894 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086640585 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.145546592 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103444737 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082654669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104201067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088575462 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099191156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086444567 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099827542 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080668207 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101822995 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087194813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104143388 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080831047 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101714327 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081550587 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102968704 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081337046 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095419276 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077975818 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102983344 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089658499 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104301327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099314145 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08208462 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082033128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106560782 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106848669 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085491007 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107426745 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0853027 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099720542 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084127241 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106177771 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08937657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101738755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087705785 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107549993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087603505 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104383263 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090033151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101397794 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07942895 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107785926 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08295715 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102607978 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093890374 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102963436 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085508564 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101400209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111534609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085262488 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107710744 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085919364 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103408592 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089057536 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093609183 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086054299 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103418209 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091735716 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101942741 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087912916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100527784 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090676604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098012111 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088119935 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096300253 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080685076 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108199551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085243339 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087472836 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102815178 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115410251 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094095999 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10441835 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083298216 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100444293 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083692542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100312426 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084336866 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104828192 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08534336 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101728731 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.082147762 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102971638 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077458068 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100041257 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083390249 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102822405 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073573818 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097926721 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073399243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102116806 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086791598 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10154467 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085971052 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100304313 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084221327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108443439 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080771235 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102520797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.075463716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102986562 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089603479 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106052639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085843369 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.103903781 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099646498 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081016343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108654526 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082010632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103164171 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082115592 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096586539 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080625441 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106184156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086710345 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101028965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082554862 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106317796 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090004332 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100493493 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076710498 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103152591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089291859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096737895 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093460406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098005984 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082692358 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110804962 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076224848 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096976458 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105907053 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086207932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079668583 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099264799 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081972974 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105396258 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082222899 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100883068 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082565516 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108175648 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083164936 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100013967 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080124063 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10109 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076373666 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103032584 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087203431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104912243 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084085087 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112527838 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104307644 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08625399 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108959804 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084392277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103854116 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087371882 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096051239 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085936247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097144139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077454999 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099212298 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074774789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099184927 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080446792 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103612457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081653824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10243055 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083810113 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104568067 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081105753 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104188884 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11381493 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076917098 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076438364 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101502156 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102045489 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080525642 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097920235 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080566572 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105017914 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087512613 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106789715 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076426614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099064556 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089211781 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101363766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090744445 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108140424 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090933941 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102758765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088003832 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105209986 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093436559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100810869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087861297 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106777244 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088623964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104441875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086695109 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104340189 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080744109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104638379 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091419232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101489579 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088734768 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10531905 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08653537 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103574088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080854817 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108632751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077729824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106253509 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.08031225 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095074825 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076602798 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10424164 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084957888 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106237212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.078627166 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10098631 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086219014 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102213538 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079304649 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110719881 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089488029 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109808295 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112041513 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076089489 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099052652 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091568475 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098918059 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083365183 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098941545 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07903675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1053623 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086295998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103754991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08267587 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095405494 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079907813 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105787859 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082812325 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10241109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08546254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108250324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082737617 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106226687 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090777922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108580785 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091056445 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108704111 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08854373 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104341247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090606219 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104284096 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082260268 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100744937 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087493658 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110330431 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079767962 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.109102653 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090428802 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103456347 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085037948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105875183 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081768643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101578961 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085725409 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.100162406 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09185476 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097793669 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081362858 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102845282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086558543 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095253027 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081155951 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098552558 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087409464 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101318811 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084647994 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103030563 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085053172 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100838846 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085446984 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103021899 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085550497 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09499785 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087623529 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106108994 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081875687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098967083 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082265528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09949029 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087082955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.111472743 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085536777 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1135256 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090563021 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107093903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087383648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110080912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088656222 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111531505 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078386067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103533626 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076273297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106296973 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083008405 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105477191 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098429572 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078331503 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084927733 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104110867 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084880958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106086836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106049621 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077003708 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095398705 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08313782 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.099878766 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091613837 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099114723 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08278801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10159105 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082532155 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098919475 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088150443 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096683488 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081404669 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102977658 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084451881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096130577 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.078085124 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102414132 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.085147846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103820918 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083884718 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09732725 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083894457 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105127914 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083076389 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094839638 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081567285 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106396466 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083523582 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099258852 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077744444 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110138029 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086204222 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107700538 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078962159 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10387759 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081686341 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101844652 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086862349 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101252985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10299866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081972219 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104215996 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091140901 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095734515 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07846217 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10979323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085038506 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107793719 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082440494 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101467884 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088262673 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107123656 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082752698 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096674626 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078413354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097690818 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07868437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101063688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091769739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102297577 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08139904 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103015362 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083942509 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101503858 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082372798 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09745763 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08925091 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099815077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088743139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096856166 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076738856 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101351113 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086511367 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098608167 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080887637 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099250522 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082686363 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097102519 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082508671 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108621356 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084165528 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103688596 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084424015 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100292443 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082884995 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110289442 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080503997 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10012896 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093944961 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10631093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085522636 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103408977 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089032456 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106280647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082299044 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106099359 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100264277 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07925178 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105985778 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088243606 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114058721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083771479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094567515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085904072 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098544646 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079671676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106970337 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087790196 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106471048 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084866987 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100297988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089158794 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102078919 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084262762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100614285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08271847 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103824728 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082450329 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103856329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08036741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106793018 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088729893 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10590704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089520084 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.096042521 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092005105 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10792657 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088093157 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100673604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078399534 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098049277 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083100315 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107196142 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086305528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103275939 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084565404 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103010668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085861624 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103672914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082156639 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106908153 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085976257 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100452271 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08674771 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099222184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079368542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099854533 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086693311 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10729383 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087431927 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112211794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08770802 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103292072 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082677601 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105798634 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083675235 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10538633 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084950062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100311731 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077840162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106835854 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088939774 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104155987 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087286652 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110036396 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101622723 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087802968 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109455963 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08713234 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099645047 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085550709 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102038161 seconds)
  done (took 56.991824845 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157827847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09054882 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101998484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083432121 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131119616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085369479 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10251117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084965191 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1043361 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11619607 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083222932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082285403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124618466 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132113827 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129670071 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116868038 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083613535 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104239393 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082654405 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103456621 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105309682 seconds)
  done (took 2.987151397 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106972307 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121873855 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120354817 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104154265 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113200988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117917825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099996492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117514278 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12205113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114588355 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103697851 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117452556 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.1153698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096186278 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114188272 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115481695 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104321402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112511517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120008716 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101420332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115230561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120338863 seconds)
  done (took 3.25893843 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091577025 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085191072 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107711862 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.101317252 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086089712 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081870237 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111177958 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082067999 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112826766 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102453483 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080449138 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.080794361 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103933542 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082018195 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100770772 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082179276 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111742004 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086616949 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107667268 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082249669 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118914326 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101345613 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083802555 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.098942638 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.097096043 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106379016 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084102702 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10455257 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.078698232 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086198559 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102160179 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083526331 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105809197 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098856733 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.07832887 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085575874 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105262481 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082205297 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102111073 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080321863 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103290756 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087045116 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109527587 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083038734 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102380309 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080559894 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106414872 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082715843 seconds)
  done (took 5.304472565 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120535448 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161402531 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089174254 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151707905 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124523111 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097033926 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108162288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148817052 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085736507 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109981529 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128222286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127190094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091507984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114272946 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09129259 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10950927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091724598 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107949909 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115929982 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089538222 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115489417 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091343914 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124143172 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124211843 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111677901 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089460855 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108949084 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093718153 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123963622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117524156 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094063782 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114963855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125290895 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092602506 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109457045 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0896116 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127588254 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110867596 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089817033 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106744835 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090211891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113149316 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111042618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108729605 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11101978 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112852589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090839902 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105684772 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105357047 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110585913 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119222388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108540056 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111937788 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110913784 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09402562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125689554 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089808166 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10885744 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111025602 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.105339996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108059856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092591903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127149617 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109250877 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097749828 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127084376 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113126753 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092090955 seconds)
  done (took 8.367580359 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121445428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115649927 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127569573 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108795449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114211262 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113144659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095604868 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11354201 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093479934 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122356703 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112149857 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199873647 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090529952 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121180418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113941531 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094031291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114555646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093283025 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11429597 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114032564 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094542768 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128189073 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11365978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106966894 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129031774 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108778899 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094088326 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115203432 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127646813 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094684999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130326342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114031759 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094719779 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126726153 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130161391 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11305548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086960688 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113589003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094749121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113589833 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091349956 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128101952 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11408288 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09031824 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114532445 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094479254 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127968724 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130773417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120524357 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103432371 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114469792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128142639 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094822913 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114606695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128425708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137624772 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108101318 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12783419 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113702585 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106803429 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128065957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136404869 seconds)
  done (took 7.875554088 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084546374 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083467073 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10477845 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084302376 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104119089 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083436362 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103540453 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084153424 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103046729 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084214588 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103217507 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084532152 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083107168 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103397607 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084618015 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10390759 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08427775 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103464031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083691451 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10425421 seconds)
  done (took 2.655720395 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097648759 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129645352 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089027434 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116765857 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086685254 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117873121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106118541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089030846 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107624452 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09021973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120052284 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119727731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088480405 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11641934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100268647 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116079275 seconds)
  done (took 2.488317176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111090144 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129645721 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167730635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110379404 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088878065 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116607148 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08804934 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.109057665 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087430392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113513281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09203092 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110918359 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088021421 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107733668 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087372258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112227767 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086341459 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112071717 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089109836 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165127185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.115522929 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090641162 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110162998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092258996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112954884 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114546593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095195044 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108757694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090114694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108238541 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091430449 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117757925 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086616148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113542513 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087233366 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110087547 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086999436 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108476135 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11184765 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087569273 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107894136 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091640041 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107252605 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09099906 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105523094 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089202705 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106588456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095248806 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109870968 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091617147 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107818723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094773629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112845783 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098198819 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117443934 seconds)
  done (took 6.539164234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102254632 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108450261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102104297 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105327138 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088755472 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111433337 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088823262 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11144374 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089956503 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105557667 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090663977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111157889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089986365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109762466 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089364804 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110872875 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085475978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110179683 seconds)
  done (took 2.617127576 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09389054 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107471199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094356913 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107818979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08807039 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108333822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086182619 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105656203 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086796813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106848695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088818515 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107116522 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087190021 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08708104 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108005727 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087682514 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108764273 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085187636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108251465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085870351 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108753865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085653886 seconds)
  done (took 2.940554623 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10510491 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167014853 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120435399 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181358626 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.08738943 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108747301 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119410026 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088223674 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129331944 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086950118 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107178346 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086183537 seconds)
  done (took 2.196722656 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116513731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147573749 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088095193 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10900539 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120362029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095408968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114364643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09464331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12513143 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1294732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093706273 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127489384 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125476347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127949855 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100161015 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121302028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114208297 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095713173 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109218079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137259918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094513026 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126626929 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11393312 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09485449 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114620497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108641223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125726452 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130883551 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114721548 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10569792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120661891 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114923428 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106868669 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13230193 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109293016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106431236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114356877 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138156182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099385199 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129459476 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108016533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100026255 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126615047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124010237 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125410495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095096325 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124274458 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094765464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116240699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144342435 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120858964 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107799354 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12265404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127939242 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125601532 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145912704 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111613246 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12849662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120104162 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133192729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108259558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121674222 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129152466 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131763278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101093472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128366431 seconds)
  done (took 8.531069332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133825391 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11135314 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094379231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132105159 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129481698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115644789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095496701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115377382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094501135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110733744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165370203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115636934 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111424352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12904098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114675289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09575913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116573044 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12909405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091211385 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145306146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11585764 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107906579 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129338338 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12970148 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132662334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121071652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097052619 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115477686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095277355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116237579 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124944307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096372521 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128907347 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090141462 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129073599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116168463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095209849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125137668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116369592 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102335875 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129240776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137644102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116533643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095548432 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132243752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115713068 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095166295 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111033288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096110549 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112836872 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132332308 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111677653 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132504114 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12941384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115845224 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095780068 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116463601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095509665 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116408675 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121089755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108472691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116293551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146242322 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116079652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095701309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130245916 seconds)
  done (took 8.468529467 seconds)
done (took 156.173552979 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128724514 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.168840006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147832854 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168118668 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081508632 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139502883 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116124266 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148370896 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103401797 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082808365 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102895612 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087408833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168899934 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083535074 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102088243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.087485422 seconds)
  done (took 2.727170546 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17662659 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338126436 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121901414 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.092065967 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113348425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.085833802 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113577578 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113653209 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0873199 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117257959 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085427681 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107436936 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.097138022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107803035 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086588691 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106323602 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117803503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085868154 seconds)
  done (took 2.977281633 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111026077 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148099106 seconds)
  done (took 1.081892964 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12057323 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18834006 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318528153 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154008286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115878776 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129920803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156997154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.103026593 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.216084121 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107404887 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127868688 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109136927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115869402 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117036142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.12188299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089620401 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140101003 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.099842434 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119260714 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092095507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132508753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114628242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096657801 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120700357 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186402192 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126750352 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094407814 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114394859 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091181741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119311952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111114118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107711738 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128080173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175353457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.117374959 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172263274 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122348819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109999748 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098613898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110930244 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095477115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115915522 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130777783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089403564 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113756456 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100804502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115428548 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115103525 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093256927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124488891 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114121904 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092894816 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16865132 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123451174 seconds)
  done (took 7.606331331 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813934146 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151906824 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087683425 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.955529517 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13885814 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125295322 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.812259692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111053936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27009984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.81814491 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126001865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101320301 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250224942 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284991364 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175258527 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358434532 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690612496 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124173753 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118095691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159175442 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121610363 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137622915 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113605244 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456397295 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091531811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107658977 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098312672 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122782021 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171879346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108611566 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094243965 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214299026 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.276675581 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220418739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089727864 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107859936 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087054889 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177847701 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289218416 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240190332 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.1799055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106104625 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086995057 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118568762 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131479659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083791611 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195194396 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186515196 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.185559068 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114107081 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101033761 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121746379 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118236557 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172450472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084043736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357767374 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361385198 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109204741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119626061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103927075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285988933 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108097759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248286425 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118226312 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.233112935 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108580078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808057172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180077315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087325875 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121345454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118316806 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096050973 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117886806 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174830674 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391355979 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121249892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094146745 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108248242 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241987904 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110065744 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08689819 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197294856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090431342 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121003345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102098173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123067353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.183220621 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.282169266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101249461 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121232418 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115676137 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102655193 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110205827 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224891176 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.239158337 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169614232 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.250088581 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09808683 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196834996 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.179830918 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115959994 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184529231 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117142925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104313232 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117803433 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236841329 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148787251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088654412 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116104998 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099536767 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152870869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113357229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118785286 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181233897 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474257342 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199140707 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084762335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112910023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099776083 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194567938 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0978213 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283685296 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121257586 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179886994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118324269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085088739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119805526 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175578908 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120081729 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098920837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119361397 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121388257 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263890656 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240858057 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100885156 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256735401 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18464351 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11740133 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186504521 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120387416 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183826675 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121801561 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096571653 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112180583 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802965217 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102862096 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121416854 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115572256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200290367 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088529909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109855715 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088067539 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105345384 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797109204 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113397835 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084602825 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110709455 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095805917 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121189702 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119384398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09545916 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193835402 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254730102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1032446 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119565143 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086874057 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.194756799 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.089613206 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110058714 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088490392 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108315109 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099780705 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115784374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088991203 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207625026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170670622 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.243804684 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567946589 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087425239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109189756 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253644452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088368638 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3277289 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120452863 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.247483808 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183077611 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105424441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357851233 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182737784 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201038488 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089778273 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204832922 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085955562 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12022752 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174597063 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108660263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097393378 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169087832 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126873558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122968686 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.180590978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087669805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263338358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085483816 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.181037049 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112729382 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116814025 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307768755 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110513657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127011477 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174284694 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115132692 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089544248 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.753262301 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.088574594 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122588255 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095923541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.24358636 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.199966249 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099996425 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12268508 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124110429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175552417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226810372 seconds)
  done (took 45.421602302 seconds)
done (took 60.631641079 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307880554 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273357151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.332300984 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204458057 seconds)
  done (took 2.04410399 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.224017459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157992024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.188132882 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107855988 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.196151975 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085781366 seconds)
  done (took 1.807268994 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.522233723 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.400866138 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.362620252 seconds)
  done (took 2.138488446 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271144368 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291270765 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334599799 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.48537773 seconds)
  done (took 2.341151391 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.24869095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133711954 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103697364 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.180182715 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.241177959 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.188909494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150498773 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.161183276 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131623683 seconds)
  done (took 2.437177563 seconds)
done (took 11.618517482 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.294330942 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.313125141 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.309572915 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.350620156 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.161687699 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164442136 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120402866 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.309810156 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119225659 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.169338167 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.314901226 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.225226383 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118124616 seconds)
    (14/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.166295743 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277829055 seconds)
    (16/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.309939193 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.285144132 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.222504921 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130504086 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127878514 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092145827 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.181503182 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.257509727 seconds)
    (24/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102456316 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.15476625 seconds)
    (26/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.333495906 seconds)
    (27/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.186863182 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137174425 seconds)
    (29/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145537413 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.204336963 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162383639 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.177732015 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216777602 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.323003188 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.208181782 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.257663448 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096025875 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.223671662 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.232381606 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204304311 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080006029 seconds)
    (42/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093895758 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119078971 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115381175 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131625931 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.207009546 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127737548 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079628655 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201562091 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07861597 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.101552403 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.168863088 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116973621 seconds)
    (54/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.17548918 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219159989 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.119373132 seconds)
    (57/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.193883696 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.20211599 seconds)
    (59/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.157278771 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101497583 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.156633909 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.219850869 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118882783 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131374601 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.173566012 seconds)
    (66/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078383164 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.114495751 seconds)
    (68/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080497788 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116465955 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.188451617 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081148563 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087288845 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.151029229 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118903691 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112314155 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.173511618 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095129965 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.157098459 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119183382 seconds)
    (80/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093347461 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207936075 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116470482 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.153651492 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104584028 seconds)
    (85/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095917068 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.240443412 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112180657 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094893195 seconds)
    (89/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228710296 seconds)
    (90/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.102140161 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10766711 seconds)
    (92/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116198351 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080451239 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125819544 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080173994 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125584432 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089420644 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117893708 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22485916 seconds)
    (100/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180791337 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102796288 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092687019 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103112828 seconds)
    (104/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09686598 seconds)
    (105/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077669394 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102575989 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095429951 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113163166 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095789864 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120115129 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079690395 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102193481 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080470528 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118764578 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079399933 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114888676 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080808933 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078447883 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.193896874 seconds)
    (120/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.204923286 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.207608877 seconds)
    (122/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080142161 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08050142 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120692062 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078961832 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118758485 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113658598 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13640595 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08679815 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120012363 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087718686 seconds)
    (132/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.102361091 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08671726 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116605344 seconds)
    (135/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080736775 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118391421 seconds)
    (137/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184241733 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.223498038 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.175865782 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080398815 seconds)
    (141/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.101187381 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081162544 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119162489 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080911302 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080822518 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.11579634 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099680183 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101618446 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081625399 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087365842 seconds)
    (151/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11871318 seconds)
    (152/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079185162 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.110666144 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096575746 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129456259 seconds)
    (156/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079219678 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101803667 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080919315 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092733704 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.103319483 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08185561 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118163143 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11371822 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119383512 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080112967 seconds)
    (166/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102992681 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080571882 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078892416 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.114871337 seconds)
    (170/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080672924 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115858443 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089438043 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079140222 seconds)
    (174/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.108757812 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089056942 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103434882 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086059242 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.134675614 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080799186 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079815138 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112346442 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080231037 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11925427 seconds)
    (184/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16056772 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1205601 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07935836 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121490211 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080140738 seconds)
    (189/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103085337 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096472853 seconds)
    (191/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.108445034 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091686745 seconds)
  done (took 27.243683542 seconds)
done (took 28.101226157 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225402962 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103742715 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122376015 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097683116 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.178617194 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124759345 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.106522309 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126241399 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126761006 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095973852 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110542202 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106076774 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121492567 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178569127 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101584367 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.114728917 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091588973 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12765179 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10621492 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132186785 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.17922752 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090424805 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128302099 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.113730995 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18010683 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091454885 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120591245 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099582035 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127503414 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096222177 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120082298 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090838716 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130116575 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106695852 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112603562 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095307227 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112096291 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088397398 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119534791 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096494406 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128653512 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.096599171 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122857928 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089651649 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120887945 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11839777 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090382243 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124453288 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088771907 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120161732 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091940707 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130966329 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095063871 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1108493 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088795422 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114160664 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103671681 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111611 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106772282 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112050351 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091068168 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111897491 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09741569 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112830263 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095397262 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11379714 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095594607 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.121658215 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093364428 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114973591 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089396842 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118411533 seconds)
done (took 9.120368581 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097010016 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175685983 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.18156356 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187637969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147342029 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133285408 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11142179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143461367 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.10635324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139552789 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151035153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.118227985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215824911 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104151574 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132421281 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098244301 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130022082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122500402 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189727807 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11643422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149614149 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126718748 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127223188 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134773404 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119807195 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129773964 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122912666 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097422204 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120698078 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127911819 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116360758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121022703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097716925 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135071306 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130695498 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.10416779 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133334198 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097354958 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119270553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095668604 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133771737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129978794 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096575929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.133158069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120320983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105998594 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12745186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104155241 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123011399 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.099292868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123490518 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149055084 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.103424297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130861479 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.102799789 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126707439 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126086062 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102987754 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121260643 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.102813982 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119071042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097936836 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123342894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145536599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097802991 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127160865 seconds)
  done (took 9.176001645 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116963781 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155290846 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129921876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107418156 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126733501 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.086504783 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110399658 seconds)
  done (took 1.73672167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089242495 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184232415 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181895049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184086658 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180986702 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.193142489 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135124718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088053845 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148872732 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123859128 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183153989 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213874019 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095793493 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130914566 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186177055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08742811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210610687 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089013517 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124221006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184501123 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104565081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142841227 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104137218 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114036366 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177525183 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091202 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263191295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106705615 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119281254 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099687088 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126715658 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.198660409 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178568664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128959608 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094289981 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.181900979 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177973971 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125269052 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.193290974 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094419437 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.17809023 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124412919 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101542324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12694169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09945103 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16485114 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13014485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12645614 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100337965 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18503815 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127201409 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.179694338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.097467646 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12452719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.102034823 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127029761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10886839 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124992203 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186663747 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103579424 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179488293 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180040422 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.179229387 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179901431 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136465361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.180254837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.17828844 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098635554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124355618 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126019215 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.179755939 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100594021 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127916809 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167261407 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104790019 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.180275042 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.180248121 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122704048 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103798437 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11890627 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0992893 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114419034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168127308 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100280891 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.364756069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1108513 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127986433 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125942192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096015588 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139907164 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.101162845 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127531657 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128970725 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100740374 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132387025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.183901384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10135035 seconds)
  done (took 14.638483762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093402437 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.090371612 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120578721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114167402 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091013126 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114934421 seconds)
  done (took 1.550532496 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120831925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127336374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112533174 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1284766 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183335013 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187861618 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.189089531 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123740624 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.120108268 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136862512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.18909214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191065418 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.188390117 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104733384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.19076931 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130753917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.187828845 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126062352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111723574 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124507028 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.109254364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130585479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098598321 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.176262541 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131178824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129834178 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102854571 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136579604 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110272461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124342236 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12974903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104542709 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119925857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099375491 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.188638148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121802848 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123049276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109213678 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129992539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105451067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190050641 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125342128 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135092805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.108839091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124486978 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096348897 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.133374902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12596954 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.188968192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107740844 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133143699 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103637863 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.13073723 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133465491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096680184 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124220439 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.108775333 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.188590509 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131713906 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122339735 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.104626788 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130640017 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098775846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133732417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104939021 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150481837 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121639937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10402994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123926059 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103898652 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.133925388 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128192404 seconds)
  done (took 10.426495856 seconds)
done (took 38.42643417 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.154552893 seconds)
  done (took 2.074733236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.899847354 seconds)
  done (took 1.82276347 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.28729853 seconds)
  done (took 18.241585574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.545829809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.631883201 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.918757551 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163285734 seconds)
  done (took 3.181063441 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.992644307 seconds)
  done (took 1.935089601 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.339648524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.254246816 seconds)
  done (took 1.521851061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.718757207 seconds)
  done (took 1.659982301 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.571773106 seconds)
  done (took 2.501871164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.389471144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192619177 seconds)
  done (took 1.526301734 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.657051717 seconds)
  done (took 1.593161781 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.815817472 seconds)
  done (took 18.758899411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2187463 seconds)
  done (took 1.17320272 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311053209 seconds)
  done (took 1.259788267 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.594898048 seconds)
  done (took 4.538549982 seconds)
done (took 62.718047837 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102469372 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130140165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105085888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126445757 seconds)
  done (took 1.40207873 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106228087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126125728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105526609 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124712958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107796706 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126971811 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10183489 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130100599 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099257849 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129109054 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12639608 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100530932 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128367591 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100447257 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122176617 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104381758 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129679687 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100897841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127517139 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10213496 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126590142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12720935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105525525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12758003 seconds)
  done (took 3.734785233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100504334 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118298297 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09639068 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.092337981 seconds)
  done (took 1.355400157 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109964459 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140918966 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112793447 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133492317 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113688734 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138233806 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123282911 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098304923 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124634868 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110052298 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.144066095 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139255949 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115071021 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.129119741 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111512981 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120272065 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103585475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139773873 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.109321115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136588615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125048871 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109679821 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.13145895 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111685309 seconds)
  done (took 3.885534492 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17891056 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.141962179 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150319653 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173084795 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.131072427 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.124346501 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152720721 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107183351 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133989493 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.103312041 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129896254 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.175517239 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105733432 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126573265 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12649795 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.107101355 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.139000095 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107882428 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.172055231 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.132249963 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132440915 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.113608711 seconds)
  done (took 3.922562066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10772614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119345962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090992082 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118423635 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108383875 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122662912 seconds)
  done (took 1.626962562 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096311944 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087422409 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118676355 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089469421 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117906562 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086876376 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112211393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088352024 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.113691119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.087334826 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.115172304 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087922409 seconds)
  done (took 2.155572412 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.284669726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118536145 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12082134 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094606347 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126051049 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092870964 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135998371 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09198964 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.25792764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089908923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136805065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197810161 seconds)
  done (took 2.7074363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220984715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101994151 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324748401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394009475 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167498424 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17891945 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284289039 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176804272 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20063018 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121074376 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232123731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138997769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163316949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192291042 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147752178 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.217367826 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187100421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215653621 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158249873 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219003569 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172747544 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180119643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19153459 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16070091 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117933667 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161410681 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128073706 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108654069 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184656743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179069138 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210372437 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130342813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150468278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213278759 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223965955 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190326876 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313250686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112179033 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205271928 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192350786 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290544434 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147534727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209356281 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166938619 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109579915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221277017 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138416797 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192967085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139779249 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147858072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19627832 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185733791 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197396442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142932744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311017919 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154203845 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157145145 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187599797 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199055494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201809791 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179432255 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103477133 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222177722 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195088094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189541308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15529485 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181018734 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107533232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184688576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207648736 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196039833 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174930097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225053587 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109757416 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169904595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178488612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164014274 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190287167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173617474 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100391427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160817868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144237011 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107066861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195140581 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127998743 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218880809 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142687485 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.395149295 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217156363 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166889234 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172513465 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173632774 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174644671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12917224 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129759197 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127794398 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.169664981 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167004623 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145201879 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165651264 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122048919 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14134353 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161334994 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128218621 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145150071 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158754072 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176936031 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172133681 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138370277 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150255717 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158069895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164306738 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182130473 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197022139 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138041215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110885552 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199633588 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167642027 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143277169 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186006104 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20191018 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175209757 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117005653 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173358512 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230676436 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123614463 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199388119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144391591 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141177224 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137400241 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172268328 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166098313 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161929309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133326048 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.137496977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231722374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10629663 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144834192 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18255269 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11608443 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135093646 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148125769 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117115557 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151758061 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154796632 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145533916 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137748367 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172210623 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165988947 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168409141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142833854 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183009869 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112067367 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171260249 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156936848 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10051532 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220103321 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195425096 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108161869 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20894364 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.179939135 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236283046 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16980487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112752526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186967696 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134643542 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100711208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170447716 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170025688 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172504738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196811652 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231491383 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182250718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.138583993 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159606312 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177085171 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185716054 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166105322 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152633252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169285598 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180430733 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099935171 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133871627 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107791503 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149644864 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137460367 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111879602 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192293469 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17448275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223877284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168993209 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122023827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192685518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138201336 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174118014 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184793197 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1475981 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199861544 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192679634 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179760077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122312606 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171261478 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128038652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106710079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144966687 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178699737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139487296 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114137336 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150561261 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194942562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18617 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159425378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215185077 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177533539 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232962346 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101561051 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173152947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179694841 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166875207 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168538686 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145072743 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171106041 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189306105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144869098 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203512804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167773647 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148159821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238020858 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166509225 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110376852 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158625347 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174425158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147752464 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145899499 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154193127 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138404409 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161877037 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117882899 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136385474 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194765728 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151966796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188905294 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166346948 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18407189 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103996877 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151902848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172216053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153635062 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100091587 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18067618 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199146558 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153659708 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168179389 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185041837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136251638 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.332974289 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201537761 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195205914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141194004 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122184961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173351733 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167954511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172809497 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189888901 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150944514 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188592908 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170637358 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.123136049 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13958314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156409529 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132642024 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1664742 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144242669 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170632664 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123245797 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225116869 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121201128 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172172639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171896564 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155343313 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138090683 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149962401 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208091987 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169529681 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18990044 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167106778 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17761158 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211149815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130872147 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110261493 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143805966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190897296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110512746 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17341164 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193050186 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2375689 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173374241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176555651 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11787063 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134562805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167334902 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129600865 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238224547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142452153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120910207 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203559297 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162063873 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138322436 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174087061 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294880538 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126718358 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182166606 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138928705 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285016201 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134505679 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110704485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169478468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18072306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144297553 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166321016 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168134824 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152983307 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170067884 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144335848 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200256929 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220372317 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176250039 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187000928 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151388398 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170008556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172512817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186807464 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122879636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156272827 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171461102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194556709 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197512004 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142998192 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141036982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169489859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167225603 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183780122 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14211587 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212739999 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137265522 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17181644 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118885381 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135143955 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169820058 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193402833 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140068955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186827741 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170067868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113665186 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134831486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154112186 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141724898 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145736126 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136002207 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191717174 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108574072 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175817515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192774365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135202427 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13883905 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154077317 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139909751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122333629 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151881838 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139087425 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150340081 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190303187 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.142389739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186576538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173691412 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175918813 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16937521 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150552795 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646375412 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137700058 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193608362 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155469911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198968484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130958923 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17428487 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168487215 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160349025 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174178042 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157836417 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202601248 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171000939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.172212208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138814768 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151032869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122328482 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142152892 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160469204 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141383521 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149921574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147855096 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171526529 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12422587 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152414091 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148459822 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195927552 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155965579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19663368 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192142532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115178573 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175273862 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185215867 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140514913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173986287 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183568535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150400784 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12601652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142508426 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145917056 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163960766 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.1317863 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171831804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171588209 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141239153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170445425 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145181285 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174532675 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150485704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143592978 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136575769 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165670221 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168397701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111493133 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138258317 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167812443 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.138026788 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137594621 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153375447 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189637137 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.131522908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139918585 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293556626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169448625 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204359906 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136015442 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143553821 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152366765 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167199189 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140984875 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171180176 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139439769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110195358 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142689872 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193588259 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168397722 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166936189 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164628101 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169120942 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24229602 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.125369962 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274814519 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146941481 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138864973 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141409115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139501136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123590624 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142176189 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147255922 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202448139 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190034449 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163017198 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124851352 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13789468 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101875595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141417746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171692074 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164360351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142604191 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154177128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129415412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123698461 seconds)
  done (took 81.007167723 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151148043 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14170376 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152058943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201216166 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173489404 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265345207 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212247743 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234583893 seconds)
  done (took 2.575113239 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104265452 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138871911 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145595191 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128258891 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12739841 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.389541405 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140897644 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.101954588 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.187899966 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1403989 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124861919 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.600280791 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12758417 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125610192 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.09714521 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.127362484 seconds)
  done (took 3.839050631 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483935384 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559594932 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.108105436 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254409687 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236525033 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.161600704 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760809592 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194066865 seconds)
  done (took 12.798145399 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132988566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148549089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.288883078 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.251403745 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.137942988 seconds)
  done (took 2.005217829 seconds)
done (took 123.954958028 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105160397 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131438645 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107178801 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136729046 seconds)
  done (took 1.515682119 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.153629475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117320964 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092368728 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087339943 seconds)
  done (took 1.491880964 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.495130947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118583001 seconds)
  done (took 1.68993625 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131670957 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151563814 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120892775 seconds)
  done (took 1.452084426 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111760392 seconds)
  done (took 1.162996647 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112207634 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.100038632 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193788029 seconds)
  done (took 1.456097392 seconds)
done (took 9.821261443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106484975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436103319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391465902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142886198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730603204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380872037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04490582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163605067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.214784946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092740387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146101663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672928522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03569752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3705851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990999648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367801998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675915258 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120902192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103181767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123118693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993510041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121266602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095154613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121279153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675372775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.441812252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092734709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388774726 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093295788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13022748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38020251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122954105 seconds)
  done (took 17.00710871 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10358312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193253294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105335486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124760875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10129927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123296631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106822905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139383508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20165891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121617858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117541706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122557218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099422359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122956302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119106444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121424449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094789111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122671142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104389959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124613914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144576311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094270194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122151723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094604713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093920499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154011741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121811076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109173191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122114228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101342586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124828504 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095235462 seconds)
  done (took 4.901965488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146386666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202996684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134624313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130728835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182422308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124572123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216481719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165042354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204521289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094900269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146518017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093760977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094256187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149427954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094176985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123125105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093935705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132692152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123426051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117653901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122292836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096754527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122293285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094712793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156522303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093403028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138825592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093448223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131295417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096949495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123024515 seconds)
  done (took 5.2692978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105036296 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133409158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120625097 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147717904 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101461105 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132879559 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105786334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129938795 seconds)
  done (took 2.035307855 seconds)
done (took 30.268971058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119900483 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142281509 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113213066 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135929215 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.181759116 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097267553 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110105814 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.12697941 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107355006 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145363652 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093928931 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.128671118 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.114870899 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132004583 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183940383 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107107105 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.188627449 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184373266 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129193818 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108244116 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128438887 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.188896974 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105825952 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099904169 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195578173 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127144386 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.179278792 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103320071 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132928611 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102564156 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185263011 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133289924 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100431249 seconds)
  done (took 5.482280138 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.164742307 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.130954599 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099141258 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128967357 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.10073549 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128354486 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197479109 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099340512 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127757315 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098624855 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127271367 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.162507882 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.136515415 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.093958147 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132353489 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.100950014 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.195661728 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.131340253 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.094998398 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.089557576 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.124610678 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097622784 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.204644285 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.125241525 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.09922183 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128766477 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.10390419 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.135077007 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.101887405 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.131335735 seconds)
  done (took 4.863068985 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107342256 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145891328 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124490807 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200950073 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160526926 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.108193193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.148233061 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116051106 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156924497 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095003572 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142622461 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159003946 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114835955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137879915 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100902164 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143059644 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117780925 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125318494 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105083255 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144612138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114361933 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143375578 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117694319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134850996 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093573747 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133002817 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.134710991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113699459 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137218131 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114340184 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131593874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101316752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127923364 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107646816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131315073 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106219547 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149322777 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108159048 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140774334 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152906653 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102031567 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13014315 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124522462 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.185535607 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09707848 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137146066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109942417 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.14250732 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096402754 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145884694 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113155305 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126248432 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147487955 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09671156 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096301912 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137119933 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0966502 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132284803 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.115164504 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129982806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146651115 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103318623 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136578452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09836366 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135893429 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096292049 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094985564 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12923302 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154718435 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106155163 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164716893 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096274343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135690591 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109536184 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136014429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109479662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124896642 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107954324 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137697932 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103478641 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140890655 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099442559 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130538183 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112064942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144998066 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.10552146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.176736158 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134997221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099259314 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12758005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11379389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126849417 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102032432 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144710644 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095698394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132374996 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106741956 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13410544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094832915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150877565 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101316326 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126027175 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12034027 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132771016 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101967956 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134869351 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111893169 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125577078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105129156 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136509919 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097004225 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132592195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099516718 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123637502 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111696736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.141823138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10357706 seconds)
  done (took 15.589092496 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.289010932 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.306709982 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209493209 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.36779614 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111738549 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.203023932 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306066985 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.278773681 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134141719 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171275288 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192665564 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.24701394 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128307569 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.12636437 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309983898 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371887914 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157988167 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172758181 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.141909354 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.144529083 seconds)
  done (took 5.453837145 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120651867 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162704888 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148438568 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129056314 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.134779927 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108255978 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126068976 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.122360198 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133948626 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131831267 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.097040599 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139721952 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105310419 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138872248 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.115725497 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174018244 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100842588 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132706262 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150636386 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103951105 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136467345 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.128092563 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137860823 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147904857 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111924035 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138579704 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095448646 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13273008 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100371681 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130205327 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102921197 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147268089 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101660993 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131847253 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106118246 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.139860925 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.09876455 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12987725 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097606515 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12987252 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112953328 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.135247912 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099845986 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124401826 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112163615 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.128846639 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108398333 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134841319 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109551319 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139391416 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105935639 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.137693836 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103314825 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145164725 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099256755 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.143086207 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109434479 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138663733 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131992578 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096322782 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095290298 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131141421 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.101638135 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.139208273 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105806455 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149090551 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140351497 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095428928 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.131787967 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101577558 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132028544 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113093939 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151436392 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.13085089 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.09993237 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138473264 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101620729 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.089756712 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136369817 seconds)
  done (took 10.813309522 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.124868106 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131825355 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117192414 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164754862 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105825993 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133978199 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101926678 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148889746 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108177602 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139048321 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108059192 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143251828 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.150211827 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113416673 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13170954 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115667248 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136562929 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.165743552 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116361821 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159032006 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.108274532 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133150276 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.109975177 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139150515 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159435833 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.108547581 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.156899123 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105957489 seconds)
  done (took 4.726513234 seconds)
done (took 47.985416004 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.203657463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.381177147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.154331368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153033961 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.176187868 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.160755507 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.174246524 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.154460679 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.1046707 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.143377669 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.153704146 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.15123187 seconds)
done (took 27.195534205 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.214030515 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.65928172 seconds)
    (2/2) benchmarking "String"...
    done (took 1.433643541 seconds)
  done (took 4.170983033 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.159081343 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.148411255 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.371898333 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.150186217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.169424549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.16501271 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.1479874 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184022416 seconds)
  done (took 15.415617696 seconds)
done (took 25.04102803 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.20118702 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.314298364 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.389931567 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.167314202 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.17790767 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.160131994 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.153580093 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.16269061 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.160324137 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.158106689 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.560516793 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.418425148 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.168881318 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.537555157 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.150139587 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201307223 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.149815655 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.369757334 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.148867919 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.195672715 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.140492696 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.141704679 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.172604471 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.163939113 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.155938317 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.16301141 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.162575827 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.163368597 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.31570115 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.169990569 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.192820212 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.153617314 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.153962972 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.159798432 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.153791687 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.159737137 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.335912225 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.15802229 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.149856767 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.152168275 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.341361156 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.161054508 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.158376793 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.165395713 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.15860424 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.204118022 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.152543772 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.261904141 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.177026298 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.164099309 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.237529254 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.538242037 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.156475687 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.167228233 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.183305904 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.362503877 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.164978849 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.206917593 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.17552817 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.167577935 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.179184562 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.164583809 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.221354964 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.157807068 seconds)
  done (took 140.57473948 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.153350176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.153263028 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.157904604 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.182667929 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.154168023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.154136486 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.153317099 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.153866181 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.155098371 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.179419451 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.15278682 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.155801305 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.154731037 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.117826647 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.159447919 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.169492312 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.155944037 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.157502293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.178936999 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.153748123 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.177415935 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.154253968 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.171862462 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.154058033 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.18939735 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.234461567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.19242261 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.174292726 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.160486832 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.154699931 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.198102766 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.174525621 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.759668486 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.025212305 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.163262413 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.164724055 seconds)
  done (took 78.48494875 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1547535 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.154878629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.156953074 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.186643058 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.155007946 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.730931089 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.733223293 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.870706453 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.854018061 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.467360695 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.405899827 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.156121494 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248943153 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.169593479 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.158170954 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.173253608 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.182806293 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.161671338 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157922815 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730945926 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.172250121 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.225372558 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.347751059 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.172712713 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.190942895 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.562899456 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.158275743 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.188765667 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488092438 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.206327328 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.15693482 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.505692033 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.169587731 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270637269 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.158905786 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.189006577 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.156923914 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.438402119 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.157574688 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.159425785 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.159104805 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812195847 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.15646828 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.735118527 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.161844501 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.09399664 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.157096049 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.157737699 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.211440383 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.796394945 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.175340615 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.15914121 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.160854707 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.158278153 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.158362812 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.158049859 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.19044076 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.185202022 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.271539643 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.157993683 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.162442604 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.190188121 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.159221839 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.180008355 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179476584 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.641162445 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236377556 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.389033062 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734224 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.162512199 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256394549 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278892952 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.160014819 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.15864306 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.160557322 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.159488352 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.270106649 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16030937 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581359212 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334466505 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.176791636 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.474229844 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.25636451 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.160575486 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523777765 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.159856265 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.16069606 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888640328 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25664961 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.159577975 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.160197389 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.15915059 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.160000684 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580404728 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738094518 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401054645 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.166820224 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.501675526 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.162860622 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.588651662 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.713651676 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.807983101 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.160920257 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.162373118 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273736975 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337700609 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.177552006 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.160937089 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.472055306 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.162123848 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.219559228 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.161877517 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.161293958 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.563516893 seconds)
  done (took 360.31584174 seconds)
done (took 580.455153141 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.951352655 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.896329611 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.033440348 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.931717036 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893559548 seconds)
  done (took 10.796368637 seconds)
done (took 11.886681567 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.356443998 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.357357271 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224173138 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.357916552 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.199078689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.371419707 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344120865 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.187266119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.276963689 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.246085566 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.275403268 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217067428 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196461485 seconds)
  done (took 17.701005711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433600971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.172847776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.231824257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445528936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.210279143 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445252618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473900394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.172771504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296903321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180966547 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.179267242 seconds)
  done (took 17.334314674 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435249501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.172850563 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24306898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424646178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214322352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.450615417 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466286856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.175332511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314705255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182825727 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.182240916 seconds)
  done (took 17.353306962 seconds)
done (took 53.481330992 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.206474053 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.336306603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.197449932 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.18325042 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.176759833 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.178895517 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.184606672 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.177345441 seconds)
  done (took 10.732191079 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.175461533 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.175390872 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.175865192 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.174830916 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.176462874 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.175642104 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.175886288 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.176370469 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.17553607 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.176400597 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.176071677 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.176115663 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.177256652 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.176554209 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.177779561 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.176931162 seconds)
  done (took 19.911649946 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.178535086 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.176945741 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.177340229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.17577171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.177415069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.176894196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.176383067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.17634938 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.177085382 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.176383295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.176728863 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.177191246 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.17501975 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.17681597 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.177560684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.178498496 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.176832797 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.176370548 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.181132229 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.177630159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.176598831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.177165988 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.176926137 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.17606642 seconds)
  done (took 29.343984164 seconds)
done (took 61.079567449 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.166058669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.170853009 seconds)
  done (took 5.430467206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.238453918 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.237804051 seconds)
  done (took 3.571440597 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.177853272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.17804007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.179003019 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.178252627 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.177567321 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.177302413 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.178420987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.179372727 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.178670202 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.1783042 seconds)
  done (took 12.875738504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179029229 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.178295088 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.178975151 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.179036126 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.178413504 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.179022208 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.178251765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.179510815 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.178734573 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.179009909 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.179232537 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.178918333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.178544949 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.178724205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.179509094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.178222138 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.178653727 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.18024587 seconds)
  done (took 22.314835053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.192403883 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200010076 seconds)
  done (took 3.487936658 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.320135859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22090472 seconds)
    (3/7) benchmarking "month"...
    done (took 1.295353824 seconds)
    (4/7) benchmarking "year"...
    done (took 1.287608474 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221967706 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199266738 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220435336 seconds)
  done (took 9.860933357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.181333656 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381443459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.49433462 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.732363548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.18035033 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.184912212 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.001458109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.183158707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.18627286 seconds)
  done (took 13.621959125 seconds)
done (took 72.25846687 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.181272998 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.217593232 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.184191831 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.194278721 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.519586548 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.199165538 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.186839804 seconds)
done (took 15.782251425 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.17290555 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.166880018 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.166124327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.17906201 seconds)
  done (took 9.78140892 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.170551344 seconds)
    (2/2) benchmarking "read"...
    done (took 1.460362354 seconds)
  done (took 4.7280649 seconds)
done (took 15.609512093 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18100304 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.180898388 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.181016376 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.181699038 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.182702847 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.183090675 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.182460872 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.180084622 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.182159575 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.182809119 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.182577346 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.182272357 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.182381476 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182106305 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.183635448 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181451243 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183572112 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.182330534 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182413846 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.182339617 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182468771 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183200041 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.182958132 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.182838222 seconds)
  done (took 29.472239244 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.183877875 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.18190512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.182344733 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.183809237 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.182618061 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.181602419 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.183022277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183222324 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.182815921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.183238425 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183181622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.182985947 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.182822432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.184592329 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183741664 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.183482144 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.183479129 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182877149 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183935509 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.183575085 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.183805309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184296762 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.183960184 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184080323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.18480415 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183887576 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.184371576 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.184734297 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183636066 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.184972695 seconds)
  done (took 36.605248361 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.19025644 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.18875475 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.185503375 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.186569296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.184657114 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.186067348 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.185235109 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.184964006 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.18487654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.184768646 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.186280865 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.18429479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.185049044 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.184518757 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.186245714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.184486152 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.185769875 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.185571172 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.18445305 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.185044519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.187027599 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.184274832 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.184658506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.185470801 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.186699713 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.187711278 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.185469285 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.18529523 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.185583509 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.186319593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.186553057 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.187792228 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.186273986 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.185239941 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.187078022 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.187022698 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.190881508 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.19201173 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.185848082 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.188046806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.187048397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.186300192 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.18647724 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.187170448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.187180805 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.186758555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.187857426 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.188659731 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.187698837 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.186377475 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.186799207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.187575878 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.188333352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.187360608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.186973312 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.1868917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.187399444 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.188444189 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.18822879 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.187779902 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.188807074 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.188777947 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.188129356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.189000723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.189728116 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.186919258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.188676177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.18775326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.189460947 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.189359324 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.188547438 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.189205156 seconds)
  done (took 86.563817787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.189604035 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189168601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.188276338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189889653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187530514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.189757492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.189853311 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1895021 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189980002 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.189608261 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188809197 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.187964928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190051573 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.189666636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189005546 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.190557381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.191031796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188718006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.189606589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.189975076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188263729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188788519 seconds)
  done (took 27.270641033 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189543445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.1913747 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.192629469 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.190598252 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.191034507 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190833763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.188827461 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192173631 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190336437 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189934545 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190619492 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190843837 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.193192656 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191492838 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190660445 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191948641 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190796353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193763587 seconds)
  done (took 22.546277723 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.191563895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.191774743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.192712142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.190514472 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.190804358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.190250161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190777321 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.192292201 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.192288428 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.19245011 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.192369971 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192345663 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.191923622 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1916757 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192340451 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.192781107 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.192356776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191523996 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192737268 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192807967 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.193180771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192542146 seconds)
  done (took 27.330783642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194649286 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19388853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.193551714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.192209995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.191982454 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.191824019 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.192690569 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.193991786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.19402344 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.192149049 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192339342 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.192986073 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.195500465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194238027 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.192835081 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192241037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.194919165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195085354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19329065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.19277393 seconds)
  done (took 24.975168207 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196064484 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195342637 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195939478 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196958066 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198099038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196423341 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196623894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196563131 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195912937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196701662 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.198264136 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196172142 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196500864 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196257179 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197985299 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196407921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197045751 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197158406 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.197973735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197693275 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198024929 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199330887 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197764503 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197108157 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19779986 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197647074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198519441 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197881552 seconds)
  done (took 34.628265913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196558736 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195893954 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.197519904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.196735356 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.196977355 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.196170767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.196941794 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.196280804 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.196468815 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196255173 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.19632952 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.196495117 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197221552 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.196261152 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.196981025 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.197330726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195998701 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.196068448 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196483153 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197048226 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.196713358 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196980912 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.197451928 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19598236 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197691254 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.19815359 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197331544 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19689166 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19785329 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198345101 seconds)
  done (took 37.01623564 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24549078 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239254248 seconds)
  done (took 3.596633675 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.199040451 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198218081 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.198771242 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198847181 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199203456 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.197603148 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.198747153 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19831493 seconds)
  done (took 10.700784024 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.194344878 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.199603188 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.199826382 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.199340343 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.198895543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.195228682 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.204014016 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.204879516 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.196300288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.197302259 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.201722925 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.201143833 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.19888042 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19663822 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.197541092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200271872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.202073906 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.200700837 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.201322507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.19953616 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203763818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.199925387 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202910279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203688191 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.196960681 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.205634348 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.203919498 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.205155686 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.195799734 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.201751415 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.199669674 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.203185662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.201658881 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.20166495 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.201726504 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.202125097 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206908988 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221788132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.205554502 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207471035 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201926018 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.201546472 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.199495882 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.201101403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200471751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206832121 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.201447645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.201042373 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.197419836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.200445152 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.207094822 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19770216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.201883663 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.201817517 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.201447293 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.208109891 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.210448897 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.202279143 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.205352674 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.20848182 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.214795325 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.212561155 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203556329 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.205523146 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208892434 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.217294809 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208874761 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.209476046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.204052405 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.203362507 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.20606529 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.215657301 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.214697594 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20741047 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.203455583 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.204691023 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.20137211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205010672 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207886038 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.208451507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.206909442 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.205465304 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208790502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216714125 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.201530514 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.205921011 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.205763228 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.205335241 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.201742133 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210679894 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.210758455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.206285285 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.200168436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.201244469 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.202912288 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.205301561 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.199859204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202467692 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.206971499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.206038831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.206276533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204765761 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.209149855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208674561 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207163738 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.209188121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211144436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202158156 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.209970374 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209477449 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205365393 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.20355226 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.206332257 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.208640563 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205157445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.207999647 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.208660285 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.20544152 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.209977951 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.207564965 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211752278 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.223599877 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.208723725 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.207364186 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.206904975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.215955253 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209461102 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.206959301 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.210957698 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.206677704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.207720917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.204499522 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.210825309 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.202843258 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210004685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.205274104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.209384999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.207103878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.207837724 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.204672707 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.208034658 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.206076475 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.206375406 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.208933785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.211081635 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.206331776 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.213598538 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.208583431 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.207427386 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.207386974 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210642239 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207894056 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.206350565 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.209425138 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.205159559 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209398622 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.207822238 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.211289639 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210782838 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.208415553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.210563481 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.206108899 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209645795 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.209724524 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.21004781 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.208280423 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.210473239 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.208494931 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.210863138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.204694831 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.209889437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.204686809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.209998161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.216289875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.210907868 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.210351505 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.209054791 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212936484 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212209767 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211355921 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.210179449 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.211732593 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.212607591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.214243405 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.215919304 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212410655 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.212269568 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.207688632 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.207793911 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212164238 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.211147109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.218307275 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220199089 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221559732 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.210219045 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.214452862 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.208069715 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.215627098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.211612251 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216236336 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.213430864 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.211286115 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207808562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213768604 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.210547268 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.212665926 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.20793076 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.213275118 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21364401 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.213625552 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212666653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.209628126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211161227 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213283094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213055746 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.212698681 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.208653034 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21392307 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.207503758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.209991135 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.215417746 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.213056283 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.21628619 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.216132605 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.211526173 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215002924 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.212214877 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.20878034 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.214230256 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212108887 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.213371999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.219063905 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.216658491 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.211353299 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.218467215 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.216098733 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.210152115 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.213969627 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.217575482 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215511847 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.211773491 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.219741689 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.215799877 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.21547936 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.215798185 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210558285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214246136 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.218081896 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218901806 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.210229145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.216184034 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.212054409 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21671488 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.213664007 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.215685012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.214170765 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214985632 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219745003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.214456835 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213568021 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.216873249 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217206046 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.217266393 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.214436356 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.222219658 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.218475367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.215957815 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.215625203 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.215276603 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.21843674 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.212907275 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.217146244 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.213795218 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226994908 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.23094224 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221145464 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.218432983 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.218234308 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219358603 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.217609678 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.216190837 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214609972 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.214604565 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.21492457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.214314689 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.218599504 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214061709 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.219854045 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215806892 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.217702605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.220226725 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.216835961 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.214357484 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.220616098 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.219796771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.218812141 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.214295763 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.219167868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.216126782 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.217520848 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.215683261 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.214222374 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222197999 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22017771 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.216512719 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.214905946 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.215514515 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.216560032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.217058455 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.220745162 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.219118398 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.225230149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.217673279 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.221532764 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.217407214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222534316 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.222949807 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.218258869 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.224416596 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.218930045 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.214355668 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.215807636 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.22074182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224265652 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.224595693 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.217546094 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.222496043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221872643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.220906591 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.220313785 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.219932494 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220969027 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.221250798 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226037892 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.241530792 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.218303147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220316257 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.223194034 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.220359488 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.221317676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.215846327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220397406 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.223221932 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.217971087 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.218445157 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.218775524 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.221893209 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.221640281 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.222711704 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2219058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.221300126 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225471537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.223062572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226809153 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.221939159 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.224818568 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227234675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225522791 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.227844882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.220024633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.224091892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.222440296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.219408322 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.218799573 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.220016268 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.22488305 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.219452125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.225971679 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.221823798 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.22210688 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.222112496 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.226492851 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.219593835 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228637718 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240878206 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.220432018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227158272 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.223599212 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.219463179 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232772257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.223683839 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2184165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.220970389 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226075844 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228478916 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.219222637 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.225530146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220789639 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.225353737 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.22365889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.224900771 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.223730642 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.224652909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.219033915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.224863138 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22350433 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.226317405 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.220361134 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22321059 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.219954296 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.229942199 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.228089462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.221647666 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227014319 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.225379495 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.219404535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.221139506 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.225937282 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222317956 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22641034 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.220714526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224768902 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.224517892 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.224064893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.22282918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.226203621 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.221860725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.221998372 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22605086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.224306941 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227626758 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.222363281 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.228073696 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.22228603 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.221412956 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.226156327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.222730527 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229149778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224455919 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.227356263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22347982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.227448215 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.226585399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226530364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.221647399 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.223435726 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.231341643 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228208307 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.229347088 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.228617207 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.229579483 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223289126 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.225557826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.229302022 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.224120188 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.224264717 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.227603831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.225314244 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.223802353 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.225354061 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229379061 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.230479226 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.226104069 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.223959986 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234138399 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.249471147 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230053994 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.22351668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.226498694 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.223612011 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.228144741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.228237744 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.224027093 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233088089 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.229868956 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229597184 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22747857 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.22703516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.225600754 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232561281 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229682815 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.22567731 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231060305 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.225453845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230263187 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229087937 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230233165 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.224775608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.22578827 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.227531497 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2290734 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.230756082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227383904 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.227642927 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.227019714 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231849358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229826696 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.22972088 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.230300024 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.224711732 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231019356 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.226324244 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.229732731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.227038791 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.227301707 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.232900279 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230912057 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227953261 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.234570322 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.237220665 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.231197131 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.227208676 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.22853754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.23202381 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235040563 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.232522333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227810336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.229580501 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.232569905 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23241196 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.232451758 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230189771 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241537291 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256768007 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22872591 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.228237758 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233073083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234593524 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232790583 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.232522325 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.230545097 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.232861439 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.237808566 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.233289399 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236856153 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234515617 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.230395185 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.235354507 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.228800977 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.234324118 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.232743236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235507083 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.233355631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.231822303 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.241924457 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237108546 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2375458 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253655885 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.234227507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.232484026 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235473467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228821728 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235895936 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.230984969 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.236490879 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.234719386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233847404 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.234590375 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.22900056 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235652412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.235114499 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.238496713 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.233251431 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.230263603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.232617296 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.235752135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.235234105 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236432377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.234568542 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.235669508 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.234479728 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.231303966 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244140537 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.245645745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.235932995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.23502666 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.235352036 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.234680799 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.236319456 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238939383 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.240341755 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.236210317 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.236164129 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.232417157 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238473035 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.236559065 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.231380832 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.231979607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233791474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.238067169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.243530729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249135109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.237218016 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.234569527 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237306674 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.236249137 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.232683176 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237339202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236297885 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.232324396 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234300483 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240596919 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.239542294 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.236382938 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.234937578 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.241033986 seconds)
  done (took 727.514707716 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236664465 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237565483 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.235580575 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237531269 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236147432 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23747867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237287485 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236846665 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.238239472 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23710331 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.238109896 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238038931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236498741 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238540087 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239416788 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236753623 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239009609 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238203491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236944755 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239027125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238969712 seconds)
  done (took 27.135908176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.237767908 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.238634334 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239324327 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23848132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238814635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238781187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23755444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237452896 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2389491 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237798324 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239351869 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23811605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.239195329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23807741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238924159 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238890577 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23833997 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238637677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.239381327 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238584231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238676014 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238782537 seconds)
  done (took 28.39632286 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240552703 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.241145984 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.235987723 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.241931811 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240515994 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.240517494 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.240719915 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.240385751 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.239619233 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.23682955 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.237044361 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.235754007 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.240593942 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.24532551 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.23817883 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.24276441 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.241284243 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.240822936 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241722098 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.240076785 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.242196209 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.245295299 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.240533384 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.235874211 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.241796692 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242472474 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.239557431 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.241316706 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.236648541 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.245346371 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.241643819 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.238605282 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.241804831 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.239452897 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.238641031 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.245161418 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.24298322 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.240912023 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.242532556 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.245721805 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.260246643 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.242174667 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.24579698 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.246704754 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.241341788 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241026949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249186236 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.242921731 seconds)
  done (took 60.750420998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.242787418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.244258893 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.242208199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243056343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.242318204 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243892721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.243087469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243397371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2432879 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.243178898 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.244142507 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.243724469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.241955209 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.242908772 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.243571187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.241591346 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.244483655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242554929 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242887638 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242491485 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.243542794 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.243281438 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242142209 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.242982087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.244066712 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.243749424 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243747647 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.242327998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.243862634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.243743633 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.242797825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.243702159 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.243041164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.242999867 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243505474 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.243341641 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.243133124 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243244307 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243554775 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.243290012 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.2430597 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243847061 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.243394001 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.24427378 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.242568243 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.245510231 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.243186503 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.243953078 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.243263627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.244232119 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.243249471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.244160979 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243686188 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.244827063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243074665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.244481443 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.244142903 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.244194655 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.243940749 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.244247938 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.243373018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.243646073 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.242924684 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.243102715 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.244117808 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.245923632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.244514854 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.244091001 seconds)
  done (took 85.709139459 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245156058 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.245169351 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245630442 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244753253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246103445 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.244680262 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246956652 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245721091 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.243614014 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245697841 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244680006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.245021676 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.245809227 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245729509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244060822 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24606897 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.244089215 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245948627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245938666 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24557202 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.245970313 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245600428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245465851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2463891 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245487832 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244982009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245356398 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.245933535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245792218 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247149314 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246155009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.246036111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245442735 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.245476512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.245602182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245423194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245779717 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245114452 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.245286893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246830931 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245622097 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245657466 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244738658 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245110818 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245213822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.246021241 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244262447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245993116 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246341413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245880233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.245261569 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245561385 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246853841 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244969096 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245140773 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.245699414 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246280907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246512927 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246722835 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.247254099 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246240078 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.244338713 seconds)
  done (took 78.382629765 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244262775 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244596743 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.245146205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.24425393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244798863 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246784567 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244741251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.243624493 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244955821 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.244581783 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245950879 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245324175 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245302604 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246313891 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245728405 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246467182 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245738 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246598478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245232255 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246356017 seconds)
  done (took 26.058930985 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.245913442 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246904698 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245520336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244668989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.246518669 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.245326641 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.24535311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245635809 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247894443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245418046 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24514431 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245804388 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245209818 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246449149 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.245623874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.246693876 seconds)
  done (took 21.087418718 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.245284561 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.247584998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246493111 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.24574008 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.247197328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.246250104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.246482026 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.24699427 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24714067 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.247860276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.246531123 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.24657191 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.246228715 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.246765769 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.247135459 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.247981851 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.246958066 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.246627259 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.247355478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.246731579 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247415699 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.247013591 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.247283747 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.247087884 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.246588158 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247956311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.248153825 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.248055174 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247860344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248855617 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248447548 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.247849683 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.247227656 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.246956086 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.248877815 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.246574736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.24748988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.248656588 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.247906222 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.248356596 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249547529 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248715362 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.248119656 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249115623 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.247111359 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.248592025 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248113482 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.24931121 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.248655499 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248532025 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.249686048 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.249204641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.249183819 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.250133713 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.249901528 seconds)
  done (took 69.778725409 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249503694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249498935 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248174406 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24915631 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249930692 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250340389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250187556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252882962 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250607545 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249888518 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251560553 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.250935673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250528193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25073071 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253033634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250882703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251651612 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252263403 seconds)
  done (took 23.668536364 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.251641027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251386779 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.250470403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252055601 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.250482938 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251801545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251618342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.250079001 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250698799 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251506789 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250517862 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.251647048 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251677045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.250761148 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251224824 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251234176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.250504425 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252035001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252930828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253423217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252731501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252026998 seconds)
  done (took 28.689927738 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.246980698 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247018155 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.247972802 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.263164807 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.261144702 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.247367801 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.246706036 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.247123883 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.267214657 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.290761587 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.285081665 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.263011092 seconds)
  done (took 16.272710206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252243873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254163142 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252329779 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253154596 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254389646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25343131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25292781 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25413729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252580413 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254660089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253973414 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253159891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25331586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253449644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253595336 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254311148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252861421 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254368771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253264368 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252764937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253304466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252913467 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253980412 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253560929 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254525517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255045076 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253364088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254104252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254085893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254509531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253471988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254771942 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254291953 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255451569 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255870605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254564778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255083191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254472674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255253208 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255496297 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254143073 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256281248 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255174586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255282471 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253357235 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25545112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256265058 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255466896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256180183 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255020809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256755973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255040186 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25559402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256272615 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254946571 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256843275 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256476504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254930871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254880712 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255756726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254379028 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254223075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254984752 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255509366 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257083168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254683147 seconds)
  done (took 83.960037103 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254140109 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254429469 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255679972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256319181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255597382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256316965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255106492 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257213596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254822425 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255527791 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253682957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255853408 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255364394 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255335997 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254612459 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255902131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255136047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255843849 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256129384 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256792972 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255328951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257143251 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256146493 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256227752 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255525341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256904283 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255598081 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256256072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256538102 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25732562 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255899127 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256157208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256071724 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256975329 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256560187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255459063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256092662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256538441 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256618887 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256230431 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256728257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25697502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257234366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255417339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256717205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257563526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257393599 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256644093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256367248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257250901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258120089 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257401671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257071466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258366567 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257979419 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258110296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256931425 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258350097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256890679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258819103 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257482135 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258248129 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257212867 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257660418 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258010745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259078851 seconds)
  done (took 84.092292662 seconds)
done (took 1703.303249557 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.419327604 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.376279907 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.250248728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.263347039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.250948435 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.277441712 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.263889533 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.252578297 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253201741 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.252767737 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.251651391 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.440949835 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.307189837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.252545889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.252207723 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.350394905 seconds)
  done (took 25.878663956 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.279392497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.259245463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.369680264 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.274499706 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.281967526 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.439202194 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.314790778 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.259180465 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.426131219 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.27866919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.254166869 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.283231922 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.254924835 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.247704071 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.27242976 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.439225485 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.501771582 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.261580596 seconds)
  done (took 27.860851202 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.700920593 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.259495351 seconds)
  done (took 5.11972957 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.274426412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.255338388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.258213193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.253561565 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.24739818 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.24710293 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.251881707 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.251085729 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.255432815 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.382431058 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.260713074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.268098849 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.272997597 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.255338201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.258714249 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.299198147 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.410431353 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263268523 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.258645958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.260271986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.255515186 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.353027709 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.299495825 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.262269884 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.37659566 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.260417193 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.262992976 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.26320411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.375424186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.262870362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.254579783 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.254534819 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.257922286 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.261410936 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.707973312 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.268576107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.26513017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.281179269 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.259775582 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.402425795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.25794361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.26218517 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.250048226 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.725995282 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.397033391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.375081983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.265955391 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.262036309 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.258456315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.321604869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.25741248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.258450363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.317043456 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103451724 seconds)
  done (took 81.147593029 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.308813668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.248991522 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429492455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.272985259 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250661805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255007416 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.2550383 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.53673484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.275546822 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.250754276 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.563497009 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831958011 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.273873501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.305241175 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.114342514 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.318441675 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252174512 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.255330963 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.255067511 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.256264322 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79966263 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252088014 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.257457891 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40014701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.290505071 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767718949 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.255086871 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25625438 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.272339299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.251253598 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771323907 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.273194447 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.313338994 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.251280227 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.523175209 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63004294 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588158471 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.251989814 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.284065631 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.255371254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.265404872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745145623 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604978333 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.250465991 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.267732815 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754530986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.249578887 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.253125895 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.25070695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498791105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252712432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.251442571 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.250756042 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.257534946 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.249887115 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3342739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.370274847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756017081 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.25090073 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.251177489 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.26802637 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.251288151 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251917852 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252227098 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.264902588 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.597990393 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.40508927 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.259121899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.594832168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.759455614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.265989265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819324434 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.271546258 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.266273721 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.461795611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263710958 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.252995711 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740674117 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.25431164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.248769601 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.574644952 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253316362 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.528389982 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264494311 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277560986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804638552 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.258274926 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.254800523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249689663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.250695693 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.254756375 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252015017 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.518758934 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.281160191 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.248426766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.248416515 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.273434766 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.258258015 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.253480986 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249963335 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813627677 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.27228959 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.24847988 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251311277 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.24764307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.251721739 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.248865155 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.250955473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513420156 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.257109047 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.250488569 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249947288 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.247821066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.256172496 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384502622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.247689466 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.5363308 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.253448125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248165856 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.252865717 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246497424 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305035065 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246778445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.254360264 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.094128547 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.520156404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261985935 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.25401292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247631158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247580951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246792732 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249231264 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.289244631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.251158161 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011108447 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.26643035 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.276452591 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.246691402 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.251639763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246818615 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.248797484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248842231 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53201367 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.509743911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.39929203 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.248653749 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.250732299 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983355969 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.302963034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427812179 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262594489 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248427099 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495536136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452269495 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.250341253 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.248132787 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.248449854 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504309198 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.249058842 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.5525933 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776189081 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.270120196 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.254815247 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021725664 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944319224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.250154531 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.248620427 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.520556036 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.265428118 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249384745 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.250978783 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.249670782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.26486348 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.265754635 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250621454 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.250458235 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.249080599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.297712792 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439636313 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.263240764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.252049048 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737482987 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273696582 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251238533 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.259751489 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253332062 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.250423357 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.315485899 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.251707884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.289638121 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.250128681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.254551246 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.751023814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.256319647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.25176926 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440626554 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919168544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.270913738 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.250949641 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250514383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.156353948 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761890615 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.296579933 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.536987442 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.263698116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288753543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251365417 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280652805 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764973443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262697276 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.251732612 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885772447 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.270583509 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.793749294 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.25080087 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251490502 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826605774 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.271839425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.253534475 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.25084271 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.259410537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5564424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.25202633 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.301567882 seconds)
  done (took 479.418996983 seconds)
done (took 620.589912949 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.251578137 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.252022106 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.249420044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.256591652 seconds)
  done (took 10.17620461 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.269926606 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.260883745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.26451251 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258949712 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.267375686 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.2582842 seconds)
  done (took 8.74656884 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.254205311 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.259227051 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.258977273 seconds)
  done (took 7.940098584 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.449155125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.275665853 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.581307007 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269092885 seconds)
  done (took 8.743613171 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.266228045 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.265751805 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.265901186 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.266727707 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.271677618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.272144853 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.268528444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.267047854 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.272205082 seconds)
  done (took 12.582586612 seconds)
done (took 49.356923658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.40018143 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.263100682 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.315324579 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.396147895 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.257076773 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.340010513 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.285067888 seconds)
    (8/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.248051965 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.287720334 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.247381065 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.508951812 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.255531553 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.291369159 seconds)
    (14/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.356364483 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.41725144 seconds)
    (16/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.254368943 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.295063998 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.385879924 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.457692894 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.300648195 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.285332589 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.35442486 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.251313837 seconds)
    (24/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.315782896 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.346465423 seconds)
    (26/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.401272594 seconds)
    (27/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254058164 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.359108074 seconds)
    (29/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.345082944 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.009141587 seconds)
    (31/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.399049081 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.39999476 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.275456832 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.387201905 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.975494075 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.949149585 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.292765668 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.997208599 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.426491239 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.066931638 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.262703628 seconds)
    (42/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.297236052 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.348852221 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.287489526 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.258955099 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.923568986 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.306660993 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.99207931 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.071418972 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.262430867 seconds)
    (51/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.905994014 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.257711225 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.295454137 seconds)
    (54/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.248974027 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.394085201 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.330637065 seconds)
    (57/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.249476451 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.011884369 seconds)
    (59/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.402517853 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.422105975 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.32442467 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.448429067 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.427783165 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.337703303 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.334206644 seconds)
    (66/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.397258895 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.251415603 seconds)
    (68/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.255962154 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.311617178 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.462733273 seconds)
    (71/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.251979163 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.329577719 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.394668094 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.260160496 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.34734298 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.295937108 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.35536529 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.338970219 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.338784228 seconds)
    (80/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.289139961 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.250762651 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.301991386 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.300042284 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.251984588 seconds)
    (85/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.311787616 seconds)
    (86/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.173030568 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.380279207 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.291932205 seconds)
    (89/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.251466041 seconds)
    (90/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.363572082 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.386267652 seconds)
    (92/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29788479 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.164877516 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.31928332 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.996255367 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3059247 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.346027154 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.3957213 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.047659102 seconds)
    (100/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.380021142 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.927462227 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298263586 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.432192789 seconds)
    (104/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.293969643 seconds)
    (105/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.340913727 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.392248573 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.296986868 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.268477288 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.288108254 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.362373617 seconds)
    (111/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.252911353 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.419040055 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.507848587 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.392258191 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.301652854 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.299804651 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.917499343 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.41708955 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.256413927 seconds)
    (120/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.398748811 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.253333727 seconds)
    (122/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.3653108 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.254914167 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.290618808 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05591663 seconds)
    (126/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.382595782 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.393840268 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.342794807 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.261517767 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.27068607 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.352751846 seconds)
    (132/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.339872695 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.428969201 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.301550736 seconds)
    (135/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.261082323 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.377936361 seconds)
    (137/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.118920961 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.444122613 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.314668436 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.058728319 seconds)
    (141/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.320770602 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.258076719 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.354053954 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.255272768 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.970453212 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.257971588 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.269054319 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.433721413 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.255780213 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.317521155 seconds)
    (151/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.31336627 seconds)
    (152/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960223582 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.329261879 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.459961145 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.361735299 seconds)
    (156/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.314660003 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.423915664 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.255471124 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301485575 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.468072789 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.260736235 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.405985571 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.372047678 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.305250158 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.070043326 seconds)
    (166/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275530356 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.443877895 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.357986301 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.158807254 seconds)
    (170/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.273302688 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.301865051 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.321979317 seconds)
    (173/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.956886583 seconds)
    (174/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.407518479 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.38024529 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.052511358 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.388392166 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.505107646 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.286549575 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.266352575 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.425707165 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.263280576 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.409875333 seconds)
    (184/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.277435685 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.351879588 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.955455789 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.46934595 seconds)
    (188/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.261882509 seconds)
    (189/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.264499304 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.405431789 seconds)
    (191/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.324975318 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.317216431 seconds)
  done (took 322.970109131 seconds)
done (took 324.140957812 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308464985 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.33089198 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.28733785 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287079233 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28819692 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267510109 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.296173104 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.2871472 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.286277217 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.286532721 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266781881 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.285502422 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300852898 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.283096628 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321154445 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.288430567 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.287933707 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.283755514 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.286494724 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.288994982 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288859347 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288612099 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297036282 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.288728607 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296734645 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298271331 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.29559685 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.284218372 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281054358 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.28773354 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283667567 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294527529 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.290016553 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.285953631 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290210589 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.284523452 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289865036 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.334136712 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293801021 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.284280881 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282257023 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290394775 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295675372 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.293575372 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.286486449 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.297675207 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297206736 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.305613798 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285488956 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.255236282 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310397034 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.286342153 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.283026268 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.257005616 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.286699302 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.305928561 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.284325453 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306969215 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.281670245 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291264057 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.324392604 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306398975 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.289107152 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289079303 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.273253985 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.291968695 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.2746295 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282247799 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.272322844 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280460161 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283176157 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.265807405 seconds)
done (took 102.056843294 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387253313 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.260551724 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.40045221 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.266517266 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.412388146 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.399463159 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.257348208 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.256777744 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.255988194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.107659279 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.259817663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.248854506 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.247052984 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.2502134 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.376638604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.25115069 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.249799597 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.992295721 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.246442063 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.381638227 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.242113116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.244246255 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.244145833 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.110994084 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.236278175 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.231108883 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.379292071 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.241247117 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.996467918 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.231626962 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.230114508 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.990764643 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.37809143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.257481592 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.247746655 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.247380982 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.39218152 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.25125838 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.359529822 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.360580652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.3728766 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.274629936 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.227172587 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.228825074 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.236824718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.237157091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.235857524 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.264647697 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.231028217 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.238272958 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.975108334 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.24788545 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.238059154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.238773523 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.23717564 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.266638955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.238829382 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.238807502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.378371962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.239281978 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.362643855 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.101789001 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.090400825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.237636991 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.230099268 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.237892721 seconds)
  done (took 102.658411967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.300689783 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.315629439 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.339869421 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.230596392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.283790777 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.336812125 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.231116878 seconds)
  done (took 10.184767558 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.236514714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.235461982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280515488 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276819465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.232946108 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.384144422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.233929869 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.239836854 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.233517639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.28083631 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.232971145 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.231127856 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.240035651 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.22455603 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274255528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.238892392 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.340982531 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.229519848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.230183729 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375952065 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23112743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.239448719 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.276787974 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.237111409 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.231058679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.234386658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.000858115 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.229866334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.22977898 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.23041506 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.230257393 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.279784672 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.230749697 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.225252412 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.229920333 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341217871 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.232322489 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.231677212 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.229740686 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.228770294 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.232011141 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.230595697 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.231140522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.230047313 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.229942754 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.248942266 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.231466056 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.231871825 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.231019017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.231690921 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.277934185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.232689942 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.23067553 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.23158504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.282731955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241682317 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.231966939 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.232152169 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.233406855 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.232442615 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.378544095 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.275032251 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.233181352 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.275465568 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.230894919 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.231614273 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.232160977 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.232522839 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3195456 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.232194024 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27573686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.233803898 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410446086 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.252068266 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.233924831 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.233555352 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.231734728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.234268585 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.226528122 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.235358703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.232945302 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.230049254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.235338682 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.233332719 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.233486694 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392171923 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338408196 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.233197874 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.24227062 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.237124565 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.233773288 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.282137051 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.232890978 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.234854377 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281640337 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345406339 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.284018559 seconds)
  done (took 127.467803481 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.242820841 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.244960114 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.235576382 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.258452301 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.234456333 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.234182043 seconds)
  done (took 8.593154476 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.235505217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.241050883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.238693183 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.23966753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.23886899 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.24024622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.239726258 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.235634002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.242179928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.240564159 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.241254642 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.240260415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.241546758 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.240315452 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.240112906 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.23971636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.239170202 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.24057998 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.240775243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.240434839 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.238066893 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.239408544 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.240828424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.236437433 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.24326065 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.240645102 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257798225 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.242191502 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.240498377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.243434742 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.257996468 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.242160754 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.237716081 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.241194753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.244996648 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.238169503 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242962286 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.242427673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24163408 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.243534088 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.242892381 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.242431881 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.242844763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.242594923 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.240314272 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.240380223 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.245600184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.259198587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.243195587 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.242736627 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.244053167 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.242214133 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.243619428 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.243569889 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.237166198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254983104 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.243458698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.24122331 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.239556445 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.236596793 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.241851075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.242181794 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.231949772 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.238292612 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.237226029 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.23567179 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.231293366 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.238437028 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.236576435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.237072031 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.233206272 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.232577683 seconds)
  done (took 91.505252649 seconds)
done (took 341.579681949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.241206609 seconds)
  done (took 3.381694594 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.227939984 seconds)
  done (took 3.371566589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.870788237 seconds)
  done (took 21.014479007 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.311956377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.264785234 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.246887429 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.232971235 seconds)
  done (took 10.198072703 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.460013527 seconds)
  done (took 3.601352809 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.227832815 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.238549701 seconds)
  done (took 5.609969973 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.367453109 seconds)
  done (took 3.509680983 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.395388068 seconds)
  done (took 3.537908721 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.253549165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.242880373 seconds)
  done (took 5.646564156 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.226664676 seconds)
  done (took 3.368028452 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.60739891 seconds)
  done (took 17.750246009 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.238825224 seconds)
  done (took 3.3830898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.255815815 seconds)
  done (took 3.397430235 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.58104355 seconds)
  done (took 5.723417357 seconds)
done (took 94.635203464 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.224659133 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.23068936 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.225488642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.22458649 seconds)
  done (took 10.048870754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.313045335 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.311990175 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.319856957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.304074627 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.303087834 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.312652558 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.261715951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.26103489 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.303900778 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.303773228 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.321907476 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.303344255 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.314480242 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.260118488 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.303444066 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.321681248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.303946198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.32093615 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.260826365 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.305488172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.235733786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.304421421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.304385209 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.237013407 seconds)
  done (took 32.236947109 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.747272432 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.301834695 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.385990983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.283502674 seconds)
  done (took 6.862143668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.378519466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.378164991 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.395943781 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.441192895 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.455350372 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.380012758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.262433361 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.258700189 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.244035547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.378285078 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.368669283 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.314718847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.478698159 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.236300263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.527656715 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.237136734 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.23756721 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.378847519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430998028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.450658873 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.23761701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.369884216 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.378937356 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.313998193 seconds)
  done (took 33.679615159 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.245703348 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.258894488 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.239486089 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.256385192 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.240153355 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.24073119 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.239376103 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.244380976 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.238307036 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.239136592 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.240250628 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.253429045 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.238911027 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.239619066 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.247112681 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.240786191 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.241787104 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.245736885 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.247781086 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.23918363 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.238996687 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.246709711 seconds)
  done (took 28.508937839 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.228766542 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.228353579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.578816689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.484918714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.229544995 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.229735847 seconds)
  done (took 13.126444877 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.298213205 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.431974813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.234775208 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.563227584 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.656119165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.240609844 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.236615629 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.465410543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.756169516 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.739912195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.294017112 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.300538835 seconds)
  done (took 18.364249664 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.235696568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.235392058 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.239603327 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.252938721 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.288742341 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.242762484 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.245937314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.231396412 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.291169515 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.293460876 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.242666694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.287494865 seconds)
  done (took 20.235983689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324082165 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235583189 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248399243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28484297 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253481084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076422278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294371063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967415831 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263244053 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511903016 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246289854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326300846 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.489701855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243851742 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242257177 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.210353582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46436902 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689049314 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239907685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236568545 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270032695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24617331 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242134603 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.450362357 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086683483 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238271828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.500457553 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236621081 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500317527 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255621901 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247432453 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237847888 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513217343 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868819046 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356997654 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433828762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244586447 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241025317 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.24781569 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.255864709 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240540578 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256079713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249485043 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239392662 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238723115 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244890152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931802218 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.264817072 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.238649787 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239005054 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478196556 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340849651 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.24612812 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240501926 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26770489 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238885215 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.245009424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362850139 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81851782 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244956656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246732867 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.244941555 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240265114 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243154625 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814168291 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.247191413 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.246010084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24655132 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239991144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243285441 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.264067394 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239742869 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.262072092 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240421344 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919755283 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24346069 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256960741 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756563079 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252446859 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.246108963 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472846801 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241254724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241443686 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.241602253 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241557628 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889624628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24951616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.228026874 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286109524 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965922814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.460873094 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266880398 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272984456 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463713661 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.22925949 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243157147 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.244415277 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244492018 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263769865 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947471331 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263483024 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.247366331 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49927051 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.451920701 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248895335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.235339821 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701410863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274050576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.272754816 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249063241 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.444196291 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.798752475 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262663845 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2437885 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276250297 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243518496 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937744743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256511847 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.254166766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244418251 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519678067 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.000793494 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245560997 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313746429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251561515 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246233253 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246733019 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246634624 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245581144 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.434625125 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274006876 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.259215777 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.246077063 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245574043 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.248316473 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246116356 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.24785546 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.468163828 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256080504 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526307241 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244140589 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245906184 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246708078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.467364754 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.247229811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.258223469 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507960695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250866232 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25550271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.260975555 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276032365 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355730707 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276743975 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.254164199 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505140761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.253297275 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.25257351 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247581168 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250005243 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251962229 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.258198864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255974696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806510646 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229980656 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251490573 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248249617 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.263286241 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316143199 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254450233 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.444554745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.253734651 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267018509 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.255659636 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.252001348 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47241808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.256941394 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.247321348 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32521625 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.703788416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823461458 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263059913 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.248701039 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.249136001 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.249160956 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248436625 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248219787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248923937 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44408919 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268162335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260175878 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807619069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25176928 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248805358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.256312334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.260650864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.257280779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249246552 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.251028283 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248928452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260360827 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.26277177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383675973 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.264747172 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248576959 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.810511122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256815867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249294908 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249430191 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279663445 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248324311 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03325704 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509925744 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246226789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510231666 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25622116 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.267496549 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.248439454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256736921 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263640087 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.266948726 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277540049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.259904116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254445419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251566881 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806118094 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939244013 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760385584 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253068611 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.265080158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25480333 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942485978 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269641304 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250741334 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474436224 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971852445 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274472762 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710969031 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.278996944 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982026137 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491613785 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488597115 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252760929 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.260473641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494567486 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468294193 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285190565 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266062051 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256595164 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.239695764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783776427 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274386163 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340680441 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945552979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279145317 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255398867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.299891936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266542875 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636364276 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275782975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253295421 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254670022 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256502699 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045983931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257924327 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253583586 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830005609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25569636 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.714294275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275835943 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.452667761 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.268527988 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.256809372 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.254356197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.260220601 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.511727164 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4969001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259625735 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257924437 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768327714 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.120352611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.26154683 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255104514 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949738219 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255679872 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525060906 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.260889739 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.260901163 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278294713 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254536265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254932767 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.25515168 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260476583 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229442875 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70845945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.272429353 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265538013 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264611178 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262131551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.508933044 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.27064216 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811389224 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48465093 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250971545 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304646472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.262510653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256791606 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.246339373 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25685002 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25704424 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25698519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.47964789 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257318858 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.249853749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322717597 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484712032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257213503 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256809448 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485357162 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.263565071 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.2766214 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978566449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289454734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257367892 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260528595 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265860563 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297504815 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326784571 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455879159 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.274033405 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.267857986 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637952325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279524082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261098217 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.273528324 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35323821 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272598524 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.259940134 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.032321631 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818743842 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952435755 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819734145 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501169157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26626229 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264693341 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258922786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396107734 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259261931 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535144686 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259540846 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.259269715 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281226445 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259538782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268003777 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474954494 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536593046 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259883786 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26277349 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26326374 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.259255871 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270447375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.469836084 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718935682 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785745168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263015085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267397969 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957727531 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553545273 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260567642 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260989692 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261141032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.281297681 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.28261796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.290661086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265893635 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395503889 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500410301 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907023282 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.292202758 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.300230661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.778976527 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271628986 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514394293 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261783351 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463093643 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826925791 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929901227 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526267322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332257511 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.462271653 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.269010826 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398234331 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.274896155 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267530324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262856203 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263615691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.262594732 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.271229516 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827064322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527056281 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.269613963 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.274465621 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299076364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.272649375 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484491023 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923799694 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486308368 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273377112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268519875 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264075907 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827292909 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509752681 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26538114 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.270763262 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490967913 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270165715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292033504 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.783862236 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.264253349 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778971807 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.154537511 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287300837 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277674671 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93491437 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828466099 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.267485789 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727950826 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267081488 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275481663 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544748641 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.271875977 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276770126 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542470073 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.271440704 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27768801 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465982458 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.828636478 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995904531 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.289924687 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291549698 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.268383914 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266781686 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263835908 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265934933 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275742915 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.661855565 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290219932 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266344409 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279956216 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.272297926 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278301909 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.266719153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267105094 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.27423833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.262125188 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.25523614 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283446462 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389250656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804322378 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294528348 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.944212091 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.592860171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52162572 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280976753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.255162208 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.274047804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26916766 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268356434 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268946011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278727818 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784112676 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.283654953 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.277787655 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273368567 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.268838908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47762407 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272321806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470056395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287965565 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289690853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.255166556 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269103242 seconds)
  done (took 915.5113827 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.291782167 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.276185528 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.268013997 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.275047723 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.305526793 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370906336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.329925327 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.267071196 seconds)
  done (took 19.562338244 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.276514055 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.273822467 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.27720449 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.274011417 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.269677735 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.713266517 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.289070197 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.273235132 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.285306173 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.27220013 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.273704398 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.903856685 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.290988471 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.273152523 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.27048408 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.275699803 seconds)
  done (took 30.671961304 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.269456989 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.416432078 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.043906561 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.281056628 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.265948598 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.27553455 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.464395348 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.292450582 seconds)
  done (took 25.489489755 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.278350786 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.277973077 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.280296793 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.279533628 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.278655518 seconds)
  done (took 7.576261919 seconds)
done (took 1163.018395513 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.275802201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.276993685 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.276383209 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.275773102 seconds)
  done (took 6.284439594 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.258786663 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.259695546 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.259328374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.271884121 seconds)
  done (took 9.229056644 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.937359627 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.865467116 seconds)
  done (took 4.983827813 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.742633697 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.749124541 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.747132664 seconds)
  done (took 6.420279445 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.565551278 seconds)
  done (took 2.747942906 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.165561293 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.273148817 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.923247974 seconds)
  done (took 7.544587933 seconds)
done (took 38.389788884 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.278304549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.517752127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425208623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.276261366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430075929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422550551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.001580624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.272955046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.271022268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.267451976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.276662829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.444977027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.985670849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.518709561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.989990104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.536272691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.429300413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.270804692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.276340163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.279724573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.005593208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.275918609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.275870244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.276672776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430058767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415717018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.268649641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.519655333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.268885927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.270143796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435528355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.270280724 seconds)
  done (took 79.06824588 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.271854174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269177439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.278732235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.268965469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.27373307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.281671013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.269933028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.270551421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.272497335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.275208398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.270016764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.270262096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.272626412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.278242318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272146829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.276055802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.270198987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.281882809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.27072418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285900605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.270475547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.270846744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.285736656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.270900072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.28450935 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.279046581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.28594911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.270334351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.271442133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.272631102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.30070956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.27271779 seconds)
  done (took 74.000542348 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.271369237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.27158964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.27365379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.273202484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.271913333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.292273122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.273171651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.271066547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.271276901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.275952861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.274443338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.28279852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.273482818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.281523785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.275149487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.27804446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.273024183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.278130132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.272385925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284158232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.27389019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.278339758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.273580971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.284222158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.278405479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.27518802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.273097929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.273125904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.273464987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.280550308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.277249257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.27413696 seconds)
  done (took 74.019778279 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.595519394 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.283901615 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.287085501 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.278537653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.287885994 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.283859759 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.278910274 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.601386809 seconds)
  done (took 14.083907031 seconds)
done (took 242.354111474 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.281780454 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.755736789 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.321062823 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.291941731 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.299492726 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.306752234 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.495457457 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.32035082 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.494783658 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.294980047 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.313479258 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.280282584 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.063129866 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.43008967 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.106158083 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.218913498 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.126235946 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.275626732 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.839567976 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.550524017 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.306425484 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.277915844 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.098751256 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.152717577 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275632965 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.358009474 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.374181608 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499281362 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.438336461 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.357020462 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.781390591 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.280458799 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.287938549 seconds)
  done (took 60.742507573 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.280824164 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.286190167 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.28665417 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.286915145 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.286711649 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.286549237 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.281793594 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.285745264 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.287051057 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.287880283 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.287160425 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.287888302 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.2889165 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.286266208 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.287083399 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.276955359 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.28354872 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.286403737 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.282378655 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.279086959 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.286684412 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.287115448 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.288594589 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.288639274 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.287572154 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.287258715 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.287369057 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.290069586 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.288032368 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.286899417 seconds)
  done (took 39.770219625 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.287813969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.847020509 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.99075097 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.290003758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.285025763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.289345218 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.55206704 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.293440825 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.288546081 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.289424464 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.742618977 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.296216778 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318070947 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.017522706 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.292404742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.289443255 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.289500803 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.286789209 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.856440711 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.301865596 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571594538 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.296168141 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.553641473 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.301582011 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.307440709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.287947061 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.289583405 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.093020167 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.307336255 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.743066225 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.019738821 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.556239658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.041523425 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.019603901 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.015576252 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.296767139 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.291952143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.752034378 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.288592263 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.287369427 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.553289342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.287529233 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.000315 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.959971429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.30356051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.291483467 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.109499006 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.768341124 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.518542133 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.292353468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006088606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.290629474 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.293783838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.289713818 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.515373173 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.293707092 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.287070153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.132704034 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.310565015 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.556282098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.29275016 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.288842635 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.854677863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.293376762 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.85088927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.291094432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.297594693 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.306746981 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.004970232 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.296507236 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.973527529 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.306009858 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.293342851 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.7511326 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.853825391 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.194729688 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.295825 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.857303054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.071635233 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.574515375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.298062896 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.093902968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.57937475 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.298556143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.296458576 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.295542834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.293184744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.405427915 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.554710591 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.922772969 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969834875 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.133436185 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.578225759 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.298114095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.291836578 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.13676437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.313256882 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.293580423 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.006162245 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975507467 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.307117582 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.298199684 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.980449105 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.309256661 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.560774734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.295150406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.014896226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.292190758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.398309942 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.295861545 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.29888132 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.312571929 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.56031078 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.294708022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.295499524 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.95946983 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.772547278 seconds)
  done (took 181.910004299 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.299548477 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.285773078 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.287737874 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.30073454 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.287151865 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.29366048 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.285653914 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.287034377 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.291820089 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.286328692 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.286828583 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.2950972 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.293840094 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.28708701 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.287977273 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.288430763 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.287421452 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.288485667 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.287082089 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.287149156 seconds)
  done (took 42.992775621 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.296663916 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.816837111 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.792290502 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.297451547 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.297118601 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.294508142 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.345409516 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.29812222 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.297836261 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.57471414 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.455829757 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.300530698 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.297891338 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.29853076 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.792948186 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.288178758 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.574753894 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.818197246 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.298092745 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.818123861 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.288865165 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.298863224 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.293613259 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.819451412 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.58012586 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.563203008 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.347424502 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.821044793 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.298386494 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.298781986 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.820464533 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.300608968 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.29480138 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.820551703 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.315362848 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.313932135 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.29911901 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.349354004 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.349694083 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.577758426 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.825821378 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.568909714 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.310669302 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.487096409 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.303323634 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.29117746 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.827433835 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.316242107 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.289862591 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.302546525 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.306471224 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.801339544 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.31630837 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.80376622 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.31594283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.301355573 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.822276016 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.803837621 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.815601242 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.456929341 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.295957661 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.565697989 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.301613356 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.830501312 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.317560208 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.302418989 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.301371249 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.460440481 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.825331664 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.56609998 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.578686527 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.57988499 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.302123471 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.357279613 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.318670579 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.579912134 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.355929159 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.729962919 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.582278854 seconds)
  done (took 117.924951238 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.547532623 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.405167063 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.668489933 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.862565881 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.775544206 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.434694923 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.404024387 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.549811083 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.303842684 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.389929832 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.902575589 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.408399774 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.019161755 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.380722271 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.398537175 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.452606271 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.674117097 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.264271658 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.944991364 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.877939591 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.301029797 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.408599003 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.801135786 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.48216632 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.304639519 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.845570071 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.201821006 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.792373832 seconds)
  done (took 50.006404045 seconds)
done (took 494.533823691 seconds)
SAVING RESULT...
DONE!
