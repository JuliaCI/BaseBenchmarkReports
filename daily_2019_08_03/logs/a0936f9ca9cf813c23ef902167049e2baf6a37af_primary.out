cset: moving following pidspec: 4285
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340797442 seconds)
loading group "string"... done (took 0.536537901 seconds)
loading group "linalg"... done (took 6.725808607 seconds)
loading group "parallel"... done (took 0.154415511 seconds)
loading group "find"... done (took 1.164160912 seconds)
loading group "tuple"... done (took 1.753788516 seconds)
loading group "dates"... done (took 1.181935558 seconds)
loading group "micro"... done (took 0.290512845 seconds)
loading group "io"... done (took 0.902523311 seconds)
loading group "scalar"... done (took 36.674593597 seconds)
loading group "sparse"... done (took 10.928389279 seconds)
loading group "broadcast"... done (took 0.90877334 seconds)
loading group "union"... done (took 11.979036365 seconds)
loading group "simd"... done (took 4.14534825 seconds)
loading group "random"... done (took 8.5329885 seconds)
loading group "problem"... done (took 1.860581183 seconds)
loading group "array"... done (took 19.917716786 seconds)
loading group "misc"... done (took 1.682356378 seconds)
loading group "sort"... done (took 3.104528137 seconds)
loading group "collection"... done (took 16.335417378 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489597142 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123746951 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115160303 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118772923 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140204008 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11519503 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123263674 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08369691 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844228911 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140656112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118368193 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414059322 seconds)
done (took 5.073083974 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172101049 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082499875 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081286826 seconds)
  done (took 1.372938743 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065541824 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121613859 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066048337 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066546421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066329705 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06554989 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065549874 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065748704 seconds)
  done (took 1.727354201 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071832102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068069174 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067818936 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066828163 seconds)
  done (took 1.484920838 seconds)
done (took 6.044438283 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761430803 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197493917 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181094572 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391359993 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12568978 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160840201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.629628338 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316253014 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181829424 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079465577 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101710838 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319754557 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104966074 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640448497 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075398991 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088959864 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135503596 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423116888 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066176633 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08136554 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088206221 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127628025 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085549865 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074826597 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14389413 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066952508 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127294701 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079038265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065619714 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205049245 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171859796 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65692684 seconds)
  done (took 10.202391395 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095165042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096213363 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067826677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121973045 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094506261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069223093 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069950106 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066534482 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085379519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126138045 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087439089 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100094102 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064593847 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067976751 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083206515 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201962322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079990966 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080133879 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069634173 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074261174 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104722608 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077648482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076765945 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076395177 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127566221 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178519232 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096030143 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096826239 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066158988 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079114827 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114185935 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124567841 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064898092 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065610765 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122278569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09349447 seconds)
  done (took 4.611391329 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.90023478 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138256956 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089584074 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15987226 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066869826 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105312885 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064727373 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083246403 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197143366 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.032533697 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.430017337 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109808007 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083713367 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066680321 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067973559 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06614293 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352826357 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108974558 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111778791 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082677758 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07276252 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068100778 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341311075 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066352563 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065500338 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06781998 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057166787 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111104758 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067242171 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977660756 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116423668 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067116136 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100285106 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161199635 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088888957 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134347918 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06551501 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064794691 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146661414 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073151818 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065049466 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081856429 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101561095 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10065782 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067425677 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065164836 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.237349639 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160792771 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065618346 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082845531 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.734428349 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152578011 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075470372 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066403613 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244329109 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084735635 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066109298 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064139021 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.191524659 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126876342 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067198649 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065840015 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065705844 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067781609 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349123257 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066129017 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992094186 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067057139 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076571551 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068604063 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065984372 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072498607 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072092316 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084816174 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064378749 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065689919 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067457343 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066004803 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065012546 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067951313 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082862783 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189320654 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065748476 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066349209 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065025122 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085197892 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096140802 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068413006 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069589265 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099523342 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063047062 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06332644 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066792937 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06626419 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100514188 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066228656 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082769945 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067825854 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112268416 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065031383 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.116309559 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066004175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094802804 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066687332 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097823083 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076240249 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160707109 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.215358327 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064088668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064490784 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066622542 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067217105 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067361375 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068196618 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078663965 seconds)
  done (took 20.132393839 seconds)
done (took 37.055856877 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27470162 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073694383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073656556 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073625239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073628354 seconds)
  done (took 1.867445447 seconds)
done (took 3.146377719 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119287097 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097945981 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063125515 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094464064 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063416213 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098704806 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098141556 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08045733 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098872738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064106929 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095861273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063865775 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063264486 seconds)
  done (took 2.394029962 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08193798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083297812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069156679 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081599624 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062859876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080924945 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079969542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08767972 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079674526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071674857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062876287 seconds)
  done (took 2.110971682 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08153488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082494468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069417683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080492341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06327197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080296317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080066892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084534928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080556201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072585888 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063021753 seconds)
  done (took 2.106146464 seconds)
done (took 7.873519572 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076293238 seconds)
  done (took 1.336934808 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579544541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.010337409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080181918 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10996326 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181573866 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117601462 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272945607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085635016 seconds)
  done (took 8.878178497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087621977 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067975059 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080829966 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070346241 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067884471 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068695602 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067418225 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070818086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069981913 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071230578 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071037082 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069969211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067408513 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068586285 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068245637 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070059131 seconds)
  done (took 2.46634874 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090361315 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089660145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0723117 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073754808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071122612 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071154996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073293718 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072515305 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070050275 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071015804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074215578 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072364366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070687027 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064224176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072989753 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074930812 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069810802 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072563869 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073699316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07366479 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073238035 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063393241 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070298809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072563333 seconds)
  done (took 3.119025272 seconds)
done (took 17.069410086 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111120956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071067404 seconds)
  done (took 1.448249713 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079618034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081764052 seconds)
  done (took 1.434163565 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080752055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064859276 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087842347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076691661 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065152438 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065116851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08521613 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065220538 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065056089 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065099997 seconds)
  done (took 1.994797527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067205355 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076683315 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069202681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079439148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072300225 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063744897 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07155825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066639705 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075914837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061713156 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069666264 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080988025 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069895319 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082173307 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070748158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067311462 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069388328 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066194174 seconds)
  done (took 2.556295797 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064855214 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065504238 seconds)
  done (took 1.410503236 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065885564 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063184292 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065532407 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065640409 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062527778 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062203469 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062364358 seconds)
  done (took 1.723955013 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371784926 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109664102 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290986926 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069596078 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080548062 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247082425 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064495421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069669643 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069720172 seconds)
  done (took 2.693230233 seconds)
done (took 14.54108098 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077240938 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083955744 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093347199 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338031745 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090423516 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064880368 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112639494 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185233286 seconds)
done (took 2.33746294 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204489954 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559601718 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.366010753 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193985593 seconds)
  done (took 2.402645694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313168206 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09000399 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058014718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065865378 seconds)
  done (took 1.819030727 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064996036 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068265772 seconds)
  done (took 1.422624557 seconds)
done (took 7.1399845 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066212551 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065352945 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062469979 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065228649 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062978377 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063064923 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06524736 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06500028 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083904228 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064989344 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068098516 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06471435 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062811918 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063107934 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065301556 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062751854 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062767512 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064742461 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062490302 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062369349 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063700767 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06518935 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062650336 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06601907 seconds)
  done (took 2.884111803 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082869755 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065478713 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070339862 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070454011 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069055516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070388886 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070678161 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065347121 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069987889 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067193201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068383612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068876172 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067579028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068867321 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067220573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068846332 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070043847 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065399289 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067270077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069042653 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069834561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065169908 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068877557 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070060121 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06833285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068607918 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066886337 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065554863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070428534 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068577315 seconds)
  done (took 3.363302666 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062373648 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062984834 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069572055 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063359166 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064078106 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062531439 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063291797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063349391 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062680389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064253185 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063006476 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062652213 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063386402 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063734038 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066340734 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077767079 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063158699 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062958095 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063323346 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065976009 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062472919 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06283457 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062679863 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062374426 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062203974 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06343801 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062345973 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063132719 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062682188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066059436 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06663527 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062913499 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06952458 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065931919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062365811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066467861 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06228856 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063282308 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062174918 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062251687 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062583767 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062463745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069236434 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062944112 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064310857 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062624247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063943919 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062900592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065094583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062194435 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062692137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063922679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063880321 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066173907 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061760626 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063488612 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062107514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063391477 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062120988 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062211717 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062074621 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065056118 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063155743 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07678666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069308806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062295928 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064002473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06346808 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064781151 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064057204 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075381179 seconds)
  done (took 5.933864472 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089861577 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085934805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.176658062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064719544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060946095 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064542435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066583343 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063476239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06421717 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068559473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063336555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064519543 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064322038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07596045 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063716383 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064929539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068127985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061225887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063611103 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06604286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063263242 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066371951 seconds)
  done (took 2.904976495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151499465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068703729 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103702903 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071433939 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066446361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07125649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068585283 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069182158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06865581 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067231963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067001982 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068690576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066393448 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066748271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06698896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06685402 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068527429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067089336 seconds)
  done (took 2.650966101 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075793303 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065279022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086056423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065122152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06518784 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067080216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069506786 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072990857 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06736012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065085294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072948846 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067216068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067223191 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065089141 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067021558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064932316 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067153082 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064973692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072644149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06950978 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069203776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07274731 seconds)
  done (took 2.824677197 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078097843 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067754217 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08067129 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067480602 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0611684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063485688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068971546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064994725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068754828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066688033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064965548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063540376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068416119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065383124 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068280752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065170185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066985173 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064818385 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066810976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060993266 seconds)
  done (took 2.649052541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085149339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067279928 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066861193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074414015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066586864 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066463091 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073977368 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066395446 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066483281 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085872714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066434295 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066361649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073946758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070978025 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066297906 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073867794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073245527 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07339992 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066161359 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066107155 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085940689 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066348074 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073666197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066495811 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06693678 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066627328 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066593404 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071512362 seconds)
  done (took 3.288197596 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066220564 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06464384 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063398211 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062892651 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062218294 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062664201 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06312036 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062726439 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065326505 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062884592 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065054281 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065021531 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065322972 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064919809 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065173518 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065038287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065071104 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062790726 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06328741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062429004 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065105713 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064887426 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064908616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062436945 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062447936 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064900109 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062541201 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062713731 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064762977 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062459386 seconds)
  done (took 3.227844386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07404767 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072648804 seconds)
  done (took 1.457623025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062494683 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07870616 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062520144 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068957194 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068522417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066269214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072056731 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068658378 seconds)
  done (took 1.85596101 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079772577 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076575645 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066967923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078722738 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075444139 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081951118 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130748051 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0662185 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072127456 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063373117 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079173056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064647399 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071167735 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066225836 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070861163 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072022278 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062952451 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070996893 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067621123 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063953879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066246002 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074046091 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06779527 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060858344 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066295853 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087057851 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07614081 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064740945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068114576 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071842936 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070682826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059180368 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064652547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065581953 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063136096 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074334574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079902422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068013332 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07363548 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066140654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075528495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0607569 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069848778 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071808474 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075016176 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06533597 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065652903 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060275948 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063293689 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067577865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060599206 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065632183 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060393709 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074505672 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069077234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075917078 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063886298 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066721339 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067973777 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068895213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071634241 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067087758 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067856866 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064613265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074526684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069483862 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074122348 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060254527 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059650118 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063169556 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074521534 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087867033 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071440159 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065633935 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066102058 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063274756 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068550646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066371639 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070994101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07191093 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065372667 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070723546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072555287 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065488461 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067906026 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073438553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063292761 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067806247 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063206109 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080671698 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064637318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063219084 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063487751 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076003592 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068410285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065119931 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063285647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072381851 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059490369 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065684473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066018194 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065914699 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075581807 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069566517 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070109424 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073605164 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072869878 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065671808 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068035974 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061927753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065713958 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064327646 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072277418 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059495449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067820441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065802889 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06513359 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.19807101 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063477984 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066091757 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072876307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071260107 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064277947 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061902166 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06833536 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065257588 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068691734 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07335312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064433897 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060809693 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06113603 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069306534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065605946 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06879307 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069541249 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068737959 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061212624 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064154217 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070484849 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07377006 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065665661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066777592 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071866864 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067013777 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064735533 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071514151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068133843 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064953317 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071179831 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066941944 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060258257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068216259 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067964632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064374135 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069028891 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068656246 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06774257 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06633505 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064996176 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072849381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067161436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065339731 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06551938 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06355391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076016948 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067689566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06085297 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062986741 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073947224 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063775757 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064697154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06521153 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067918722 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066997842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063714223 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065493149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067635493 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075219596 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070131856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066776997 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071072823 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076631566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065566665 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067973532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065498729 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066314798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065730034 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073925212 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070848683 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069753359 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06748954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062288114 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070710046 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072834068 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064575205 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063327331 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064546602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069329751 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070796111 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069089594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065882413 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063557864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065715676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067914518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068034057 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064757204 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064378177 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071370694 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063375919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071958864 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066130919 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075400312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068281402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060692956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06797496 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063460284 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071281441 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060637186 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063478044 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064768125 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066088132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064622205 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067678987 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059453635 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072154599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072712588 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065646748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064656733 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064818697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071879302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067098373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068761862 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068776616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071309443 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075465809 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064449977 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06867238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074987517 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192539257 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059898663 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070799023 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064230551 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065101541 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064808587 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063395977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068783168 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07480303 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072819388 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060052449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068677597 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06389626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065087399 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061357203 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070097067 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068766731 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067383209 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072707494 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066233433 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065830995 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069702092 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065290831 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066691354 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067886842 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068734443 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066298894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067499296 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065340719 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068243454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065100147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064599671 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068263783 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06579293 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065798512 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071115308 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065351678 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066266046 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068494229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066396685 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066876703 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065585647 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064770937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06908808 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067269622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06597236 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068635437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0606041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073022896 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065788601 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073371494 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065803948 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06258501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071671655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068279867 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072044742 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06644895 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066192542 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066896184 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06512782 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068614947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072373222 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063501927 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076400589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073177241 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066497367 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068139233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065917808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067075294 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063984627 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066823864 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066115612 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065576612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065052074 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070067902 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067846943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065208201 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067060476 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065771928 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065690645 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066373213 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059952611 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064513624 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064606928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064872084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074428627 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066257429 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06493478 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06436065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065747768 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064036014 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061835413 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072966012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074027748 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065621425 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072306728 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064948985 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066571517 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075383863 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059581794 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063272612 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062927055 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063483358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072573845 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06585459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074872375 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065957055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06471222 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062654045 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066264701 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063991718 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059888262 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06313644 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069058855 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06469542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064631465 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065265004 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06761205 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066167309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074480571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064533826 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065852576 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065044765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06206778 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064495724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.194955675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068788249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066872151 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063657114 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063111792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065245911 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06663507 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067146458 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065863712 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067166946 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074553405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065217214 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068812181 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068346895 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060364389 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069139179 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065440836 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065403363 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065344847 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069855552 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070058523 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06662221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074543376 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06581306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065837844 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065005852 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063373832 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06507199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0654049 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0654538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06474445 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066729737 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073629468 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063771605 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069024232 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066483727 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066145247 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072241014 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065858633 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068709242 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072030181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066133794 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067969842 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073884477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070310437 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068757453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066075798 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06714828 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071115817 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065221713 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071803619 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065858865 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066675206 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067565667 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063560841 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064767007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065271965 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065106066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07069139 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066044758 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064940195 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065246925 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063663669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066904919 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069088278 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072637442 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067872629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068623652 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061488737 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062747831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066022133 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063781129 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067018637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068326808 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07083996 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067465911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065888137 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064421618 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074097015 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070944692 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069369723 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063580655 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068896856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065622217 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067258984 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066324801 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065467796 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066422517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069141367 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066843988 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064776586 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072085021 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068589376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066050999 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066884592 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066274783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065903485 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060748791 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065598295 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067190165 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070556093 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067728133 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065408813 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075934538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063278172 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06594212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068546191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064851067 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070063914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061059129 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067266551 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066322646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066243008 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060896414 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064755978 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063642678 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067547463 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064554663 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060890041 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075449221 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074139515 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068155748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064317796 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06351076 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060233393 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190806279 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065087004 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066585131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067793382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076112373 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065026334 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065153217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061007771 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065787344 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068765097 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069305522 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063175963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061287838 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065232659 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0689118 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071554294 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06415215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064972161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068831891 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068101926 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063920186 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068337157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062712276 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069708005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078203282 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066197959 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066775197 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071579047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073659837 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066342991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060915946 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066237091 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068302194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066232073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066878695 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066159759 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080055902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068145087 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065585457 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064242646 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06870752 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065495096 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073280902 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0667789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066465185 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070176973 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067474935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07474754 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068817763 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073966713 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068442099 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068895001 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064755083 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066323269 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063565093 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064302285 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067331865 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066369461 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070715329 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073111135 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064698413 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07544406 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074014078 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067777808 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062516923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065265669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064865625 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060855513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066166454 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063713813 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063373476 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063825641 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064620685 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066478282 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070417697 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066618164 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066394708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065409456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059812315 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067758197 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068164163 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066750267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06275445 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065323843 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065873374 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069612572 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068321644 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063196209 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067236764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067740371 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066542005 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060743427 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071806761 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064450261 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067476979 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064863766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065399184 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06586073 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06887637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069874295 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066079963 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067284756 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068706398 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067628982 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063076269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063205386 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070554744 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063623873 seconds)
  done (took 42.063963244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098528409 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062388785 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060907758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061534628 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071961812 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062353731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061197729 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061814515 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062089578 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063936026 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0611539 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061000099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069575618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076200269 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072153092 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065370088 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060768943 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061679613 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061046824 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061889067 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069321894 seconds)
  done (took 2.782791734 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072749347 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069379063 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070598049 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07457563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066056482 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068992582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071284896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068948799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074222941 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065952163 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074390693 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069234237 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065847899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074500114 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065571302 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069760595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074312875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066042099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069268469 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070928947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069612959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070889864 seconds)
  done (took 2.914382386 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065915918 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064469759 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066435325 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060876752 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064650776 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06015344 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068149148 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062884998 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067859246 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06397708 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063925668 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063960507 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066580613 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060806286 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064935122 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063004529 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106442395 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067894175 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064684631 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065524982 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060878201 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066653409 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060680753 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060784566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063795385 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068151278 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06551375 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063187738 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0647324 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063942145 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065032316 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062695669 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066890775 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065092005 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064024233 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064213916 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064712408 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064793756 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060193868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063124048 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065799938 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061042955 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065237177 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066265942 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062828005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06305356 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066163737 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064204533 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05983031 seconds)
  done (took 4.561051293 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078844704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107279379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066339609 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087140981 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078557804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073989523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068118097 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087827905 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062268441 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063123223 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080290751 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078020038 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064595314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068787397 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071354272 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064235362 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065609283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063443578 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06802342 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063938698 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068010825 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070762915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078263399 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076920933 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068282042 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063516231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063713406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068604749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076411492 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068395814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0689088 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069327293 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078557762 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069215287 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063494996 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066360881 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079293829 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064415095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066833593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061958729 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066580776 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06825224 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070590434 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079849668 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06443278 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069563519 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064456945 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061655533 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076820715 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066771279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071722926 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078130738 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067832279 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064281877 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068443992 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078536502 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064909361 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062731916 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067233432 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076132642 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062086084 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067682604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077356475 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066053484 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071242002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077733986 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069405359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067765304 seconds)
  done (took 6.3115962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07354702 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070728631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078191522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077940568 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07039513 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07105117 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070809705 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070400718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070604753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074930606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070612115 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091048103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066612159 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073131655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070649993 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070718342 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070640461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071219309 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070597526 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070683962 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071175763 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078003387 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070873456 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078341131 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096189549 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066429114 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070712446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071254791 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078178225 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070370925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077765229 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071074876 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070745343 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078388801 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078130377 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070215719 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063842451 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070411456 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070579809 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070249317 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066768976 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077862631 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070538036 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066214265 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071396137 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070563234 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078282484 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077777493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073495374 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075225695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070746469 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078437483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070562223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070931828 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078606815 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102784729 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077979793 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078010352 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070747052 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077973835 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078338023 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084668811 seconds)
  done (took 5.995058505 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081551564 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073611472 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074753957 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060852542 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062941223 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068398496 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062978663 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063152321 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072790574 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072981918 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074977211 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068391811 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070768728 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075183087 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068065309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070996854 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068203999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068143547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072804878 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068130162 seconds)
  done (took 2.800432384 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073076413 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081365023 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065863656 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070520935 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067981283 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070317844 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066935627 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068087891 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066302901 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067651482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074500331 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074486611 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065859492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070440662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074331074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070385866 seconds)
  done (took 2.519136509 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073441233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070707188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078228173 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064859811 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063476296 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061509862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064899562 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060410306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061300159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076101979 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06505973 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067259006 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064738502 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063767278 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061698002 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067351252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061692464 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062488158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064704801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076568234 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075600238 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063967293 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06545229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064777421 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065028404 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069919717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06393741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062256551 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062187878 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064805809 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065080435 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067890788 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062040963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062488161 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063663975 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062143497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064250109 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065463342 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067120343 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064898381 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063544062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064333335 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064684997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065664398 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061051042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065155984 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061394248 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06652583 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062893269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064743007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06488373 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066970969 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065038187 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07100201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067157957 seconds)
  done (took 5.000336756 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078740437 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068371126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060942946 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063131275 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06750197 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066485274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068298926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066542741 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06643405 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063340866 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066633378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067353811 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066230835 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068321728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066869803 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068283857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060853853 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066286696 seconds)
  done (took 2.605758017 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070099618 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064974423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07200855 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064974476 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065045103 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067140345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061250172 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063809532 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063481612 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065003819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064852751 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067010471 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063471908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066836584 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064812319 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064879626 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067154588 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063339913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064704896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061211143 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067322837 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063579385 seconds)
  done (took 2.834005053 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071327004 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090668982 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136611351 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082352766 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079970889 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077636148 seconds)
  done (took 1.937231356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088967588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077684391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065705532 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08667975 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071777332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066270519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06576598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066375265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074353631 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07443151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066424337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074495923 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07450075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074018896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071951052 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071657133 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066307882 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066610932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065450483 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083042252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066669904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074232859 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066403786 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066118897 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066392882 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073472682 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074640144 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075117427 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065984885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074178774 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071321096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0662296 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074138204 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07459147 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06787441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074661113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066272546 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082234188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071654874 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073699879 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067964488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072038512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074388912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070751795 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074407773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066455175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070685853 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065954042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066450163 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083778289 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071733271 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07358219 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072018169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074860337 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07468123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084386432 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07511611 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073952824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072381174 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077707637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073829886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071731758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073667124 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074748117 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072091685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073845582 seconds)
  done (took 6.18253531 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080851078 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085074922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066709971 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074797591 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073847607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066441771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066439946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066471841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066303825 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066509021 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106095445 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066368118 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073848331 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074378252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066895964 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066330259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066389547 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073969207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066359162 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084140013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066174825 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073668075 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074066305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073743712 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074818401 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071612401 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066732033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066574284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066623435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066477732 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071130629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066414672 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073842704 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06627309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073739254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066538155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066255947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071167013 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066306564 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071780318 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073652196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081997487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066238021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06613029 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074689475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066015049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06628559 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065707979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066341996 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066037004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074749641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074578376 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074655948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073504637 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066874609 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066675788 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066291741 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066654013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066733266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072075306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073992467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066237112 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084224188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066385611 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066505718 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07387745 seconds)
  done (took 6.098438974 seconds)
done (took 128.934845132 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18238567 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168511517 seconds)
  done (took 1.746582902 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068036291 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.0942563 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075943932 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127316285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065554552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098374409 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097612471 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076745178 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065644201 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065251634 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065491699 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066909143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129609365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065690538 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065757664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067022734 seconds)
  done (took 2.704694437 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095792214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171942028 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098419008 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063634026 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095638299 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072224399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064356017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073693635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070643384 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064197508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071850363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069599022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064194582 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069719448 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069856932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072024746 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064228446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071750565 seconds)
  done (took 2.834761817 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09868323 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089525778 seconds)
  done (took 1.601874324 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152274285 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103986973 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.1489315 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331970478 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159124808 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227925334 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126108513 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125335043 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120040608 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121424892 seconds)
  done (took 3.02707203 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096796494 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146697802 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253038873 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113588692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071324763 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089945662 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115053447 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076710478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07623903 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076485998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07641754 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075074712 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09470133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072793088 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072448652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074834035 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097854267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071792642 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074490645 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07274688 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095577672 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065205787 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072359999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071130775 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073461376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07359382 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064466277 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064592183 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072667302 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072898406 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076125037 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088891617 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073301036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102818136 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069003093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10356694 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075220218 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070316086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072529191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070050616 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074216815 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074224266 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071039227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074698868 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064390054 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075575472 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064591441 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064701157 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07683524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065479788 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076989622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075508415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102783642 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06603953 seconds)
  done (took 5.892615021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.660329372 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101443723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069251944 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106454096 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09522195 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070983078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682572561 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089289642 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171607859 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090816138 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086531508 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068890577 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079659542 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082090616 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109139908 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099802977 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09215433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070383082 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098701539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096872094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066838 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091782093 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088603421 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.374799901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066504756 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068815606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066452263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068447207 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108000848 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077016319 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068694713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119054959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082737167 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118505793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066108935 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066856409 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067069355 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077656784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178835909 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130553371 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128814251 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066218908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066995995 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067995401 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088428488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066394071 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10855345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078796291 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116393177 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069084137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06908947 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067008717 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06768429 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078266472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075918097 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079278031 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227363829 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067255923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066893177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069949933 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178222068 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078460747 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078542622 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091011848 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.12910357 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06744301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691364131 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083833294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067016812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068317412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066684562 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068337417 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067929862 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243553201 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341199064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070331053 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070149827 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067608613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.156925114 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077734353 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067635927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111110478 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067389366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068406604 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068692642 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069246882 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.115892038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079619163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06884702 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067867532 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069301666 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067263981 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066234642 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160205825 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079755703 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078893086 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158084058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068507476 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109379371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078974786 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069344555 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078195627 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067825949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069766117 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068816852 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078521851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094121313 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078534929 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069613911 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067242124 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096295908 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079659468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067275374 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07781634 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395620517 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078703 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066819561 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080060408 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068142887 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109788382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068932125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.173893771 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068028026 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078246331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068505876 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066519928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067315762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108839467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069502287 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067846217 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068303662 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068993018 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078432046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.13145548 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069269033 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160055454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.131927272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068915401 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117665989 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067142177 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115180081 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068748597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067912993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066374003 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.705231572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067333668 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067532569 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068785402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13691534 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067028736 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078681856 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076270971 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066322748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689077786 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078198379 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07536335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.207177008 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069711989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067997062 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067827626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06996225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108175013 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142766877 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069224525 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067470967 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077535612 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110878738 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066945956 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077548591 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077654183 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077880345 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068343288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069277986 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079204821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116862752 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077980517 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.133699043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.511976737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067596146 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076064733 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.14227126 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06799263 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083323878 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06768884 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081936352 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111278506 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076679632 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.224688891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112901626 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136801673 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079885854 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082138449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067079781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067304417 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078687334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06722095 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06911875 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076945856 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069507637 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069100964 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083420848 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067571083 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171333203 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066742373 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077889599 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066707632 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069377295 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082207597 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067389938 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069018348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078457526 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069185887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076196643 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.642980896 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076912628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066950687 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068628672 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133704488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.111315589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067030327 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066991131 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069340956 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108137531 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156751391 seconds)
  done (took 27.892320414 seconds)
done (took 47.122056094 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20695195 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148301094 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19901852 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116590211 seconds)
  done (took 2.180517549 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120124789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099048973 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093764611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064801933 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100202958 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064152791 seconds)
  done (took 1.989308166 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304946966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206942863 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178723763 seconds)
  done (took 2.133871636 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194310914 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184356644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389825364 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250301778 seconds)
  done (took 2.570319974 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140818598 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087127348 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06606363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082082857 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13152884 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157673519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099182092 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12340943 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077176868 seconds)
  done (took 2.462699267 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142308427 seconds)
done (took 12.937267522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167534152 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211918275 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167372351 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.203865404 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09360255 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066096051 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145439637 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080783916 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072063534 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080014582 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07672766 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178334093 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071928511 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180705135 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192082965 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189295688 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177280262 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.1698812 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080965969 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108251575 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07540382 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.16650176 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.121353322 seconds)
    (24/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051802067 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.208022376 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093892297 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.158682435 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147953826 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152268922 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 0.126164636 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09778482 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136106539 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091459974 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.165240308 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071158563 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113437257 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070101402 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07467736 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051728569 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107370321 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.180294712 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.147450904 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170634735 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.14585338 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072015399 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089973034 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051494155 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070483877 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069408842 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095806207 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136656508 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071924499 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.143990291 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066823514 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072649155 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107181904 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099555668 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133898754 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081515405 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061639771 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087049874 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065737386 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062432227 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076310996 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135050266 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.106014081 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141853364 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074250699 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14441156 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179641816 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.065660173 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08731212 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091039402 seconds)
    (74/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096155577 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116836542 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06870459 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051270212 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076090621 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.176726199 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077250194 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095417936 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094662368 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073506217 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071289001 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072663789 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.214671968 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069649074 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177326124 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075509896 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053672398 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153182624 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075446718 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075219802 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071572292 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098527317 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106878126 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.181329002 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.147134707 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.13773358 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099650871 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113302489 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093005794 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074806317 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064925787 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072458133 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 0.139526476 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053043629 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050171277 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066733896 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136928891 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077550216 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061623952 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162701186 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142349689 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076206831 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05233595 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09966396 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.173691688 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.290488965 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0726606 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065047872 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.132012815 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073541637 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051819279 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090505969 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050415627 seconds)
    (127/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106950115 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071350883 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050752946 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06985058 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075706275 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071080998 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075049656 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071955235 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087767848 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064937472 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06897096 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050049843 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109455029 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060366442 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085785093 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071281788 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135743636 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093021147 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064387923 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071925884 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050448525 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065489694 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050956263 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072903781 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088135329 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073930061 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065496277 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064259882 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139003374 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094314285 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051149392 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072199272 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087592509 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066203849 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051331752 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067521945 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059904513 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.134716136 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064050482 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183329056 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052065931 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06383869 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103871517 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052120485 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141863625 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.136809822 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080200198 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090743505 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070501719 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051752849 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063905273 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070644629 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050302268 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050717648 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067739969 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132273569 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070158352 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064189424 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065332331 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07104695 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052052368 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167322658 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072698116 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124577108 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065537026 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.074678696 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108099911 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049993388 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086162329 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050312938 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087323182 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062580818 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.218805283 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068188968 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050412382 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065150905 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079622663 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071970789 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166811251 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071580902 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069401395 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104857739 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175177762 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050671548 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05090299 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074313517 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072017302 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067613426 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10354018 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064679539 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062065453 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073171799 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064766657 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068629578 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050700577 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067063666 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050932504 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078875168 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067914939 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083614604 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073705634 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137129581 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070862434 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07162098 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050392268 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06160484 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 0.124470591 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063642044 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050385781 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067385061 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137891415 seconds)
    (238/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052165205 seconds)
    (239/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087860901 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063024241 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169928355 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065096537 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086166698 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110047521 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064873295 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065390486 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062566251 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067093733 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088670421 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145345585 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166580485 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065412443 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064693582 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064823179 seconds)
    (255/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051399264 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064677835 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.1106524 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050459464 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050164239 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051780763 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072521327 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121322157 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100723965 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070943813 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050452433 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065863518 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072408245 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077060162 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086457616 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050946279 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051401218 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065478331 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072327978 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05185312 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064279677 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054207376 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063011322 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087752167 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13771903 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065464407 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071606372 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088088289 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073364523 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063021539 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051243658 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063208463 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064104125 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108683215 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051600091 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071828539 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064802907 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106408205 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064815425 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069676416 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050843679 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084188796 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062216898 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071016658 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052203918 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064063696 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069566626 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063169304 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06411745 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069603153 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050459432 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085017875 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050295953 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078283437 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163366823 seconds)
  done (took 30.005730614 seconds)
done (took 31.464899986 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084016366 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091175433 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073626533 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091402026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079208779 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075462116 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071369932 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07699556 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078419495 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080016912 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076872232 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054262908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072887276 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072937197 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073335626 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089592472 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076660654 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071306811 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071563446 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063803599 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071880477 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06468518 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066200697 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054178421 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076232394 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07034632 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070883384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072709526 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064391399 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065530776 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068099783 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071996099 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064574622 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076376312 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071120766 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071564457 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073087666 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074957159 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066379397 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064601682 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07250644 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064999301 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071494666 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071967374 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070482818 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070161749 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071507413 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076510289 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089394722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066888385 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073313277 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075149459 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074667663 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071373468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068159136 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071807217 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069365501 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089636228 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072582555 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066903408 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073030525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072485838 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069854817 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071655174 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071785065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073653478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074044831 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0696688 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073699382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069889581 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064274015 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07178135 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068193159 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064709609 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074827835 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075355986 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063503054 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069786344 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071115583 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070093483 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063837307 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066352928 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065903055 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069883311 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066242724 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053794622 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067582136 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070079585 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063443672 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071943882 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070245749 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070440846 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065687213 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073735404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063571195 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069377159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064783871 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064073743 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06593671 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068044685 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064124291 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06659863 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073075592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06597083 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070657698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077973461 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064394897 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070280501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063632567 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063470359 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077786958 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073202101 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064399013 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066650058 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063703161 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071698101 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06357049 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064157372 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064290391 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064482735 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069697132 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06446004 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066282773 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070974913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076137219 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064027382 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067087283 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065785451 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063852961 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069043578 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063851885 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064091663 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.19920843 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060972292 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066484293 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064672169 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072046608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066964016 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07166265 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066621274 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072143774 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069170474 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070397604 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070356827 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06351714 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057798401 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067426926 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066878329 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067162325 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065365896 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066331911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064770256 seconds)
done (took 12.319330098 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0655882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140573237 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096823999 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093890483 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084531148 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065417433 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074569985 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100017171 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066519566 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100805151 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08582612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083680146 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110834264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064066672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064905741 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068765876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066588862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080084848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099194125 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085406915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107242483 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064419377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092729211 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088932818 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085698572 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090812802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065941444 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068924898 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068463013 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098657884 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085238246 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068685341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065604344 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098478798 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090499225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081357422 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065094778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080667959 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065274949 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065133117 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079440698 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095905214 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078064109 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078592481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069311849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068046828 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065951482 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081593335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087215335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077173589 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084691623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100671665 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067517482 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064447918 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063864762 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083584874 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064238415 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067677364 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065187459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066983826 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065361402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067789247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079119106 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085136561 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068614485 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078645036 seconds)
  done (took 6.765238515 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081764331 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089252381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081939426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082045052 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064688931 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065409716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065375319 seconds)
  done (took 2.079872365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065505392 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086291545 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087630162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08741614 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084073754 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085569644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074836675 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065870439 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079144947 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066472649 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0863325 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099739658 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066124127 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07173738 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089097049 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065674278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088898596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065601664 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068246459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088811926 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067480311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080576982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068827787 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065765469 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079188204 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065731677 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111093001 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069837641 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067011165 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068242819 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063396457 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104450971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078738229 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074262211 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065642773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079762925 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079325847 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063790708 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081126055 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070512894 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078807986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065834144 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066573119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063740342 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069612347 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075869897 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066506193 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066244833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068001277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084778819 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066606751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079201342 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070402957 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068245717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067335899 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069326349 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075455503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066371649 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084807654 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066814445 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081939437 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081315062 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078912401 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081273381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067659776 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078609397 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07896275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067922598 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0670125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068561484 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081454326 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063977176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067050022 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075637122 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06719676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087573927 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087615762 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066978457 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074493202 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066197578 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065947115 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065955012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088081903 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067937618 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065736229 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069712799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06901877 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064692661 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064935942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069134699 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063685346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067109954 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068265094 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068822762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067999322 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081717807 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067910411 seconds)
  done (took 8.703115673 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067894355 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066910194 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068077388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066284836 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066926631 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066559543 seconds)
  done (took 1.972643274 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092144851 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068731228 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079100444 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071137395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103450594 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085550765 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085758837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077638951 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082510639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077526941 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085381413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087079391 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091090665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071583478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085048453 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070623502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085648676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074394256 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077080158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072042426 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085459033 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071801895 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072278644 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080227793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074672008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071029199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066803835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077879956 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077504544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077430028 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071811827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074433905 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06937779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076849867 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.0853486 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069553648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070651449 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075759626 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071331529 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074537408 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086506933 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07170916 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073634284 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075893077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076788719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069484361 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076097384 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074872803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084645549 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075896445 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075605092 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070422176 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073993376 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075407613 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069207497 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076794678 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075598349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085188226 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071390391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069308442 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068036319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074446397 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076412399 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074594947 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077177269 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076122468 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06931743 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071254071 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071715679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070634064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075405775 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067978556 seconds)
  done (took 7.046138875 seconds)
done (took 28.102283973 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540962515 seconds)
  done (took 2.076403269 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608021766 seconds)
  done (took 2.166897459 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.359204091 seconds)
  done (took 7.913272769 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39144096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502384986 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703485364 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128269806 seconds)
  done (took 3.326804015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.660991814 seconds)
  done (took 2.232942187 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207833191 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194650765 seconds)
  done (took 1.981226428 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365967573 seconds)
  done (took 1.925783691 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.08631269 seconds)
  done (took 2.648049753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256789417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160843884 seconds)
  done (took 1.988184958 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455946406 seconds)
  done (took 2.018978054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.804447724 seconds)
  done (took 6.368958565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204062513 seconds)
  done (took 1.80972216 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236358407 seconds)
  done (took 1.800617698 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710041892 seconds)
  done (took 3.273556966 seconds)
done (took 43.097332809 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079906313 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081276496 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080330977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077324506 seconds)
  done (took 1.870548545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076575097 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072215905 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076643939 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072087226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076200025 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071838384 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073499856 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07603258 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071631141 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072247982 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071944697 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071982487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074016708 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073512645 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070935925 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074217559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075472261 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071709286 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074496749 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072093312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070285753 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07444818 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074135274 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071492242 seconds)
  done (took 3.326167657 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077279098 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072622172 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07479079 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071399982 seconds)
  done (took 1.868602558 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077144614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091644094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088670965 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077613494 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090895809 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085712012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06857528 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068729677 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072875171 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076506346 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067450892 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094993342 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086817332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07628273 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078466854 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065784447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067879694 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08614942 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076493998 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077069376 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069446184 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076509676 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067177347 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087095788 seconds)
  done (took 3.445385893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07674826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102814388 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077385391 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08677354 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088755811 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064798457 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073951598 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088430677 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122354428 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064802016 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069397591 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064964769 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071859811 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064766348 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075396102 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104315964 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108197388 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06784129 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09482297 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064964035 seconds)
  done (took 3.212668612 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07276369 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068825824 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065714872 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068273797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076594198 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072235893 seconds)
  done (took 2.003459312 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06803927 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06673927 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067018807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066481587 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071200373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066929548 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06585922 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066724795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066503667 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06650848 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066367297 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065308006 seconds)
  done (took 2.379251982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334500253 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068649021 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068674855 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065419118 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069978885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0658796 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079373338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067745397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090309651 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065887941 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066339254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068453072 seconds)
  done (took 2.688895119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203338062 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075760371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233113558 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135387259 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110125295 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114123319 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103345271 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112066936 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141320389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100628713 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165135527 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162701015 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105623876 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135470671 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088695465 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097475262 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152982468 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160508745 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102272684 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163887575 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142280336 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123202278 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145346954 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100216065 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104530153 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120204795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070286547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079472384 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167273381 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129364404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14425442 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109690239 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093107697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173957891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168542805 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140684088 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134125965 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08335196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101436527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132872108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197715099 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088367057 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162255834 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244803682 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08103316 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139139638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119672398 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118698464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106427197 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090688937 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144509019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179438964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137817644 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086545779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110771994 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113749674 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114158273 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102113074 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178672279 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159683953 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126175753 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07140078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098186365 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151421476 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131061388 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108736231 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125875084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092617476 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1328407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153802765 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118333397 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140635317 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128087973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088099691 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117897068 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138333756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126432077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167322965 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123509676 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072581924 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123531667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102426827 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081045435 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141818069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075276652 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173101082 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097931547 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105608181 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112824376 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108017123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107722875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158437663 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141435896 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243457892 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066168659 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103109921 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118680257 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145708349 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086379126 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107828957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114598258 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077215743 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138005578 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07415396 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121513516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075186588 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123986016 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131585056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076230148 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121041504 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100220771 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099614764 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131246453 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158323069 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08860614 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081532126 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166065416 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120628505 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103932391 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142429789 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153957151 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098766436 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101679186 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147676644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176762892 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089380903 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161161403 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106526418 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083226475 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08689569 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1219967 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111411442 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121043191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081447587 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117331187 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165736343 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07486278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094345192 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13188548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078568425 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080075895 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102605325 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099458405 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09456171 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098541134 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10294779 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136285034 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121415681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103758581 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266800855 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09798465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168812954 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087949352 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100180927 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103563515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069916766 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135810453 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154965868 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078972412 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161383869 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122592879 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10376597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118079117 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081965819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137792449 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078720825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069883346 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143192804 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108631656 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108666355 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148901628 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104172493 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124933284 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118630008 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132783262 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130227957 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127606264 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104201331 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087192695 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110499105 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12435513 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072713367 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090185097 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079293606 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102718914 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094348374 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082679721 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140771953 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123221561 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099400102 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110167416 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095559333 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145376421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075632876 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127224615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118339292 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093341416 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150874183 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149939023 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129220852 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097916382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142463252 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069554717 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072853559 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231289533 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122248238 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082999322 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083340504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116420677 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145741638 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128224353 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135895927 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110015831 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120747413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15296529 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06931904 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114866151 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145895593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119967677 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104480971 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089772604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098055406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140435706 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107596522 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180401233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113253818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124902386 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151784975 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099310571 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079540738 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102257317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133525482 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103641896 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141945292 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103862786 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087561082 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108905486 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073686758 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098472584 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125498312 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118196332 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133339973 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113256693 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131094593 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076609494 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115487885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11945403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120623383 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063866223 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118770395 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15978634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093140377 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11579376 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150147709 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078421657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122493632 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319198053 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144114976 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084795333 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109871328 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117565151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12776701 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118710091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137750616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110444194 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133665377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108401339 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085005696 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087018024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096209905 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10419743 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094338058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106858396 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113819693 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094568687 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130721863 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10156778 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108929538 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116195851 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095826622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088672902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0960964 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174095938 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118035058 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168632469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098252359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142975705 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161237474 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074261174 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078369502 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077953215 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138070613 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083355512 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129068433 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096803872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104850738 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122251476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14014379 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094018246 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068118233 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107336855 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132601465 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111004285 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097576344 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103421701 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16097253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09988187 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078375322 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112128951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103129376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10090215 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312960742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062207133 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097832769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076071396 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080772952 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126252255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151781799 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080058875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102784495 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117909493 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109629842 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126936836 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100960715 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098828016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113339358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147902198 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12736914 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090365967 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111304147 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127468703 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172448667 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104234353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094834976 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169086314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150413886 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158786612 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088096317 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114004786 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11293833 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110527195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137053933 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082625404 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161128917 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080931463 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134185748 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102910573 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088860493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127733892 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097794686 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087290074 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145502398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115988174 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082247713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077109641 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116311994 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118840186 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10526227 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07507749 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137728643 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072742826 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130982213 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165920535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080268792 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102780381 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240438795 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080674535 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108133641 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102741635 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089542916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098970955 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170792713 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087736855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14816753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138644127 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112247907 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135450724 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098891879 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635013677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077267074 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150237464 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115315999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171324395 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09674853 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11606942 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108434638 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121799452 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142823383 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10387756 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177325622 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131200875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116136821 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078947825 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101054247 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101622 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088227905 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103879165 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112502136 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114552299 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09283057 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114228676 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121590419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081647908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09486062 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153522651 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115672662 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14214099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139062454 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08431205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116091478 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13766746 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079758999 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120158725 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148536472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103923051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096470785 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079206473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243935253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169733935 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074064304 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160612245 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119398729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109028344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112248538 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113459557 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130963892 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107093305 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119647821 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093376603 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110163395 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112101893 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08088676 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076768913 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103838388 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110703359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097117015 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097390768 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097883342 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149721733 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070984176 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094294828 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102110078 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143749608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172660537 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088017773 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082364477 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116998634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111488337 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111885705 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118999533 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078611723 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081742728 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080673992 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076728693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107335563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110835043 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103164524 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110363605 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161327014 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082096483 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225129438 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094305805 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103679594 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069394584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077998359 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094774369 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095698534 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106968258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099872903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167948211 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094502003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089307203 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091414154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072511857 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081874893 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270826964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110130819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118766951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097229108 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062734244 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108641842 seconds)
  done (took 58.381921833 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10784862 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082481328 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096578841 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149298076 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121543868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211422196 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156919116 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198530771 seconds)
  done (took 2.813463326 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067987516 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093678136 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10013138 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082964249 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0663839 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068765529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224074809 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079600561 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06599342 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088332505 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078539742 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069319967 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.400465844 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065705972 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067402348 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062733056 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067310654 seconds)
  done (took 3.427280371 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376321986 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36290536 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372562998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072847202 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.674681939 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.0887974 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083039326 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096609544 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071526203 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282023157 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704027096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093987033 seconds)
  done (took 13.967962292 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075378723 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069565054 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083403347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083142952 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071755334 seconds)
  done (took 2.069588528 seconds)
done (took 103.084739173 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079777774 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.294300869 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053337872 seconds)
  done (took 2.060901474 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082371574 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084126843 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084786399 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081860803 seconds)
  done (took 2.020716395 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074165041 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075636974 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084361346 seconds)
  done (took 1.916327623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223653393 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141142593 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085945833 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081942236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078167539 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078199004 seconds)
  done (took 1.92715546 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072148639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074062271 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071741243 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07560598 seconds)
  done (took 1.977425814 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075989162 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052817251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054742256 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055922338 seconds)
  done (took 1.923518302 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085734129 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077831471 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078288677 seconds)
  done (took 1.928663727 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106341252 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085016486 seconds)
  done (took 1.877148942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081320832 seconds)
  done (took 1.767925804 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097970576 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113050365 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127086493 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108445676 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134947609 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107564378 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08442673 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085525577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07598606 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086133044 seconds)
  done (took 2.707776334 seconds)
done (took 22.322913093 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077791173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366261037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36099764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089562532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668724669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356323156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001055594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091483008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12004956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067636432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083392269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648088103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990839199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323558388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980228237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31843737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647521473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067642467 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067109741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067332741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987454239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067155498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067132466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06770519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648422161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371145668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067689177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318793145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067480733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068845494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354341759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067707198 seconds)
  done (took 16.22147866 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070382185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117314431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07295129 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084284024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070650003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069440889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071114392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068686208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124190946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067329011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084232165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067330384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071504051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068219331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086662575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067643663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068233898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068022951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067638564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068148479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085895283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06738699 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067948239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068349841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067845815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079011589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068300924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067746525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068130204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06989414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070908056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06900983 seconds)
  done (took 4.082148996 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113984692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124054985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07374079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103006858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111631442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069623027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142412398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093080323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126536626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067726196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084055708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067515956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100418103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068531288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08725991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068124353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068805221 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06839044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068433027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068085672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086621671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068012602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068250165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068506839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06843668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081003645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068486381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068439952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068134361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069855404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071226178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068376193 seconds)
  done (took 4.330213764 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07240735 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074572755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082496888 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08260105 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069897196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071298394 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072513907 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069463697 seconds)
  done (took 2.297641033 seconds)
done (took 28.624174326 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.0788361 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069294451 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.0724808 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080315772 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073052235 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078003913 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067001638 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074516085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072279829 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07258838 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07473525 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067506373 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070734436 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067387089 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073779181 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067406331 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078863726 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071512209 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079643008 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078821019 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069533133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072819781 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073970845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078646085 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07860625 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079156308 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076753532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072341363 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068712486 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069992619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076273231 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083347526 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068092046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078592675 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067525024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067537679 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071463278 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067600238 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078954192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076215255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069156058 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076089907 seconds)
  done (took 4.771939326 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087416365 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091311653 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084433443 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06140504 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066854147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064397839 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088670344 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059544367 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059328581 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08739345 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056093404 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059098537 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062461875 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054086656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059501656 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056843952 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061569121 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055572317 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059333183 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059387924 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057890622 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05436161 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059847258 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065167926 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056302228 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062002661 seconds)
  done (took 3.400043375 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074409133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083676845 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087724299 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125998551 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10297157 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076366511 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077627747 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086541681 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084997992 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066522831 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071041109 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093841312 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08805872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073566636 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067663242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083477733 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08179025 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068562217 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073524832 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090440721 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084008322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0775292 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092170108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080478187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066755549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06913454 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070920054 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080502296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071852636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075999069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070694633 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070350799 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06909911 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07837116 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07043273 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068461691 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089239557 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0763494 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077624453 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067461096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070723573 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068019523 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088682839 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122418132 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066624384 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073644494 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075150161 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075876211 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066912755 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085611649 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077932602 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066599614 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070009595 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066562529 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067138282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079813234 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06890288 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069694382 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076128626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070321918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079805144 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071579092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08225866 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066792192 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07457761 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066126476 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067909545 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066142787 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091918036 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068484043 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107447903 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068371745 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068064287 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075823918 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074773844 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073364626 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067467898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0819174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077081328 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070373361 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075828136 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070391623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070229502 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087545764 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069587166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068871802 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068151744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073335053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069860012 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068869868 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079966596 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067204577 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070182949 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083618789 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067006925 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068536227 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073215388 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071800547 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066670893 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078265222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071588077 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06830537 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076245964 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067179421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070469324 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077185557 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073430623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066300811 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.082802758 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073109869 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067899552 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068669247 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070281433 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069282006 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07658792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073999713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071787044 seconds)
  done (took 10.559628059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159312357 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153459752 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070432442 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144665119 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07629661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078707354 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146172858 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094024478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067720647 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068232738 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068784456 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114875658 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105376194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121360644 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078425045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067385387 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082848181 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116298014 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148039394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141931808 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082868539 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076389657 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069375651 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069090374 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074283506 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081640247 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090437232 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076708897 seconds)
  done (took 4.473591665 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079686791 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100160968 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074184647 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088624668 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089863294 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067369001 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069910607 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069273038 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08030772 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078226942 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06726744 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073637363 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074935471 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074289135 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06866029 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074478822 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07471208 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06927782 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07106342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072600061 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077410889 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080291586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071623284 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06720556 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073939905 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067538619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063451813 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083711806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067703661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090139836 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065722109 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075066281 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081271061 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068280336 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067469921 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067842873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067223955 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067085919 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069466836 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066246065 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065813537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057551126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066849224 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078651812 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073813174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056448349 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072137171 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072496386 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072252191 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065370195 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07006557 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070041679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070681342 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07461331 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072637059 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07287107 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068600005 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065664609 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075080284 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067444626 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064944001 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065971984 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072018661 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065249709 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075364813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07214319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065921717 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067182115 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069244053 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073359351 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067037535 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070233043 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065335263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069108723 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071823988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068890528 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06871678 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066232394 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067108044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067427749 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055325181 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067319213 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053360205 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070105415 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065458493 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065671157 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067181526 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071906558 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078809086 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068263899 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073053631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06834957 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066541378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070257925 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059964189 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069897456 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082010336 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081726953 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067091716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065074255 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081536655 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071417453 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065932273 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056158437 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074667696 seconds)
  done (took 9.176167193 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094865506 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088516843 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06974882 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08255804 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090528781 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086741289 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074865937 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076356374 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068725894 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081598433 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072921736 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076115428 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067632905 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077098237 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094214292 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07627168 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069681791 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076794524 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071588053 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101020825 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082587729 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08171265 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074199803 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067962745 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075395984 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079802582 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089350644 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080025003 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078065449 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074921442 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079680756 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089512863 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073873379 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071545741 seconds)
  done (took 4.458243205 seconds)
done (took 38.536625666 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.799433493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.966209093 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.788363743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.166956202 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.867642431 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.996176306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.846643131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.805035679 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.02415621 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.825344467 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.028658328 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.818431315 seconds)
done (took 65.657368182 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.84975505 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.935728093 seconds)
    (2/2) benchmarking "String"...
    done (took 2.055301503 seconds)
  done (took 5.715176218 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.109596226 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.485264355 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025759351 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.780569678 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.787010433 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.07766335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.586032894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.306136943 seconds)
  done (took 30.772673887 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.025437945 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.986990865 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.482314291 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.523368927 seconds)
  done (took 15.796249894 seconds)
done (took 64.167659738 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.794401216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.823290356 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.788765082 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.765807868 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.84127163 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.795557423 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.313096966 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.915402161 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.782097637 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.771097857 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.783883269 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.220560688 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.792984416 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.360722197 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.782441117 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789590777 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.790743175 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.355945141 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.938288609 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.790560731 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.792424063 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.824526517 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.783190176 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.795022758 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.796288981 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.787133837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214824702 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.787840044 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.415956474 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.784047956 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.81131869 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.890079741 seconds)
  done (took 204.603020549 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.782908287 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.795151112 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.840254571 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.818313301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.374720177 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.984506889 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.917786024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.407813243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.78770439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.786162785 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.926707772 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783677353 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.948421474 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.735122369 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.791542288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.877470476 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.005545316 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.955220416 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786148794 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.054762882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.787220682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.74937521 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.714178473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.909342394 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.823728189 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.878270567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.973854482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810616081 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.973991269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.891057576 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802530354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.791818968 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.002081259 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653059051 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.795176585 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.783002437 seconds)
  done (took 170.425636698 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.167516045 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.775587369 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775593731 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777021563 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.787471037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.775289399 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89829327 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900696853 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.230742147 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.085714038 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823547111 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610689123 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.773197795 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838518894 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.785989903 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.774590334 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.787542509 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.798930319 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775562167 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772904538 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900291903 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.785788735 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.167504048 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778554973 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773255998 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778629264 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.142049859 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773223855 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778821645 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.032085318 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.773588783 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773599308 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.66004064 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.415906324 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.854762182 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774095468 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779640563 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.77315177 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992824915 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772885365 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.773279504 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.775685838 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943769669 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.773692513 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.896189473 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775944988 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.773581874 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271810423 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.772869128 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773521776 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.477434332 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.441600235 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.776344002 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.773417253 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.776064707 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.772395123 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772586281 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778585927 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.527994468 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.839250401 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.767086514 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.76877067 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772012354 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.76636038 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.962458744 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766933446 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.865239696 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.823740152 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.870455806 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887483836 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766692883 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830225009 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.857493994 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.764875137 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.763401075 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76361095 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.764406871 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.763650136 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.845283619 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.764650752 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.885583608 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.771217498 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.765483634 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812638577 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.833332054 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.765154341 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650992791 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.766586086 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.763953403 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.082316951 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.765079563 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.765626862 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831048003 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.765298947 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.763832722 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764838304 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890970307 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891426675 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54785421 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.764394287 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.603705342 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.761066659 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.895353617 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756485072 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936058891 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.758744111 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839731339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760356871 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758214084 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755336325 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786129333 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756516603 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.814417324 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.758151879 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.124750523 seconds)
  done (took 401.470188521 seconds)
done (took 780.449591781 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.432578559 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.397578578 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.513240429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.419316196 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397237217 seconds)
  done (took 13.857300474 seconds)
done (took 15.553681789 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841171599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845972443 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.778697508 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.846252586 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773924698 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.842311836 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824200154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778457866 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.810289196 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.777300044 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811447865 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777830986 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765602368 seconds)
  done (took 25.168808189 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987667566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.997121312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.824006777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994810346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80094314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982165743 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917672599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905359942 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904875351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768971613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766983175 seconds)
  done (took 22.546663047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998378552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995749807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827943602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993011779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802410909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.995504331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922375366 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908029429 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912059062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76912937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764913352 seconds)
  done (took 22.585005757 seconds)
done (took 71.995559489 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.760135909 seconds)
  done (took 3.455588317 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782569125 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918302964 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767414643 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.765494951 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.760677596 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.762644284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76477696 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760844126 seconds)
  done (took 15.978800521 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.757671395 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.757429677 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761112199 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.759827469 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.758004673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.757788719 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.757728378 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.759994234 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.760888351 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.760596641 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.760787309 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.760991841 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.756871044 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.757960957 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.758803045 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757238199 seconds)
  done (took 29.839448868 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.755850287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75434307 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754897178 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754872129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.754141149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.755100233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754422006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754201445 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.755292495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754571331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.754796605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754553212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754991728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.754233469 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756675267 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.756119733 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.755483879 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755143408 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759587724 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.755271979 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755519026 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754854978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755245704 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.755677986 seconds)
  done (took 43.820506258 seconds)
done (took 94.789233779 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.493914835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.210108212 seconds)
  done (took 8.395822351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758777709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756500021 seconds)
  done (took 5.245997025 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757193135 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756604318 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756715512 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756834846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756910194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757621774 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.757304115 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.757426348 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.75719677 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.75705119 seconds)
  done (took 19.263318199 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756828647 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756194123 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.754485056 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.757724262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756318042 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.754964352 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.756814256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756660067 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.757076484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.754381041 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.757679347 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754720457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.757230957 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754759809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758112637 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754556056 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.754277265 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.754302785 seconds)
  done (took 33.299525274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.756802928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757035144 seconds)
  done (took 5.205117938 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754581535 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755396023 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754277184 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754250058 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.75500713 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754240386 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.754774487 seconds)
  done (took 13.975160979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757356216 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.922020798 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.990924885 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.425510648 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.759488174 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761595066 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.735667219 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761184812 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.763027575 seconds)
  done (took 19.569793083 seconds)
done (took 106.647293506 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.555526341 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754296221 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.132537548 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874614732 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.771263831 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.049834537 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.767093691 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.979079146 seconds)
done (took 42.576970626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.771969524 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.224742982 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.22905221 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.482091975 seconds)
  done (took 11.628736724 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.737467744 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.279579978 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.79420652 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.36653544 seconds)
  done (took 19.882061157 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.122223163 seconds)
    (2/2) benchmarking "read"...
    done (took 2.115446821 seconds)
  done (took 5.934228924 seconds)
done (took 45.910517262 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757288655 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.756377155 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.755880407 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.756168287 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.754767574 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.754328468 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.756737632 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.757196053 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.757587343 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.756908813 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.757358791 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758159605 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753980046 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755933892 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756865235 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.755001084 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754372188 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.756696735 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.754987049 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755356182 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.755245075 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757922878 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.753916322 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.753546033 seconds)
  done (took 43.835259786 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.759175312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.755566739 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.757496927 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.757501768 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.755073963 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.759492255 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.757433592 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.755348578 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.757233487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.757056654 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754674628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.755859028 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.757564707 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.755490329 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757980617 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.755468318 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.758818301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756682238 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757781581 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.755952503 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.758074756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755510668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.756641128 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75855203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.755684697 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755721423 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.758005898 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.756712577 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759312801 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.755608108 seconds)
  done (took 54.400734183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.762908781 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.764348547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.758895084 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.759612978 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.759397302 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.75941261 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.759850453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.75917614 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.760217274 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.759521342 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.758851431 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.759204249 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.759559045 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.759471674 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.759934297 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.759675604 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.759953429 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761384037 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.759811619 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.760369982 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.761337368 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.760208825 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.760458056 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76116942 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.759881404 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.760127863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76070507 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.759644403 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.760678386 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.759824428 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.76055035 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.760627793 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.760327646 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.761443252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.760745259 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.76123979 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.764701969 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.767417532 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.760427861 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.760725969 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.76078839 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.760302216 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.761355153 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.761547431 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.760956919 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.760995984 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76012004 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.760714064 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.76251464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.762519174 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.761503367 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.761720909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.761503084 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.760882346 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.762111132 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.761979623 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.762514415 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.762165587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.763377687 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.762207984 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.763104001 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.761952636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.761548012 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.762384321 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.763078929 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.763750184 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.762049527 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.762189723 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.76171189 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.763319002 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.763062571 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.762557849 seconds)
  done (took 128.503157173 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.761976072 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759874292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759883082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759903599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761636839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763322874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760013167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762083833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759807151 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.76383036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762310339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760778713 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760810617 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763235836 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764222708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760337059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.763729451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760579534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.763731935 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762900404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763267276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.761512704 seconds)
  done (took 40.457489445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764020173 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763115979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.760957113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.764247311 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761174671 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76353193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.763928543 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764074039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765114844 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76172969 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761411746 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764040054 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760870623 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760724505 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762117931 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762356162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764002217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761572292 seconds)
  done (took 33.427851232 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.761886045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.763172488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.764971671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761967909 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.762265469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765679476 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762867805 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.765928628 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.763972158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.762754998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.765063672 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764560494 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.765202889 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763614093 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764884733 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.763447981 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.766259518 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763024768 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766996563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763475253 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763417551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765815962 seconds)
  done (took 40.512060614 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765435374 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766481642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763189271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76285687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.762635608 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766652147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.764979069 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.764904521 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.765620123 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.765301081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763589856 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766336189 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.764471516 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764726152 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.763619574 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764235676 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.765743941 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764218488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767727407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.763286784 seconds)
  done (took 36.997318815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767019829 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767104933 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.766765677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768723172 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767427957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.767924612 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767854379 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.767599589 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767227262 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769511994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767534525 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.767659392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767596962 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767670142 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769773349 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76783874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768371995 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768224539 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.767896971 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768055764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77064996 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768111238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768922378 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767942302 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768939739 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769964932 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768224022 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768091589 seconds)
  done (took 51.211525661 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768809809 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769340975 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.770231423 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.765357179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.765030749 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.7644038 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.765281955 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.765315626 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768237257 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76413322 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.766794283 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.767375445 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767640998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.768900068 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768396283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.767649873 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76867627 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.765903891 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766227587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767814009 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.768202611 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769111504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.768986964 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766070887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764855778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.769700463 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766657838 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767427177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769250407 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765872789 seconds)
  done (took 54.722778415 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.786944658 seconds)
    (2/2) benchmarking "in"...
    done (took 1.787967407 seconds)
  done (took 5.279368242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.766520289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768921703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.770374053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76737303 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766839378 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769809805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768807123 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766529416 seconds)
  done (took 15.850081181 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.770062586 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.769533328 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.769777423 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.76970378 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.770310279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.771954411 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779252197 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.771407078 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.772920158 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.771406768 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.778129231 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.778472841 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.775209609 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771463144 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.771389207 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772880103 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.770721693 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.771042597 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77177616 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771178546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771663914 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774958629 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773649254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.768776907 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.773020752 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.782567132 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.777239803 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.77276768 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772748135 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.777423184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.772330058 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.768439615 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.771864089 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.772022808 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.771154979 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.772175761 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782593667 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773524406 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780715274 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772359053 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771893941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.769712558 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.773530945 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.775734096 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774415761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.772342519 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.772039522 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.769543194 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.771892403 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.774667552 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.776717194 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772689821 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.770333728 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779626561 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.776034437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781454991 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.773465621 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.77548713 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.78027137 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784271457 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.787627866 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.779166396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774802465 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.772417193 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782533948 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.79278867 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782111404 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.77140048 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.770132838 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.77307495 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783855094 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78928996 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.782392182 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.774389955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775380191 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.774067245 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774336253 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773742006 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78353424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.778712493 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.773949716 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773310843 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782245949 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793903477 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.773618977 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.774537462 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.774113233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.774371071 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.775144677 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784866551 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.774672911 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.775130333 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.774905739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.774931271 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.778275194 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.776033853 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.774180096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777494369 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.771478574 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.775117511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776358388 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777854106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782621484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774684952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775614564 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.783736933 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.776808191 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77503905 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.785285351 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.775152781 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776059915 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.777877414 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.782815212 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.774112487 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778573848 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.784452299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.77591835 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.780279329 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.776120707 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.775971967 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785833282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.798646313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.776289218 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.776159229 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.780321719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.785186636 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776048352 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.780391035 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.777067432 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.773946937 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.773479668 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.778595518 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.776119078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.778056292 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778401241 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779590226 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.774329864 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776671184 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.777135147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.778244177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.781769291 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.779906297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.778799096 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.781227109 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.777622781 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.781753204 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785549517 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.779070634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780555009 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.780170586 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.774680528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778314639 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.780020449 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.778164937 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.778539131 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778974822 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.778906674 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.777285653 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778216628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.778064377 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778938487 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.779115255 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782908647 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.778649245 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.785213264 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.777985388 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.77592925 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.778353221 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.779195845 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.778906696 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.778983454 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.777810321 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.782510617 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.786271304 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.780118862 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.779018962 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.784182621 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779131393 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780100961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779538298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.782797943 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.786230049 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.779753668 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.788604698 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.779292041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780312262 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.779642714 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78238505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.780211893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780485104 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.783165445 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.785854809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794255885 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788256543 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.780962933 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.78361102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.780900314 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.78304942 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.786032788 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.780259147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.780364579 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78144518 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780035876 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780169327 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.784140968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.780173469 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.779907587 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.780756536 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.780694188 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.780520117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78115198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.782809139 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783472036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.778639725 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780802311 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78102916 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.781070506 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.777546662 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.781494405 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.781314003 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.780591594 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.781345189 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.791795452 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.778035134 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782354134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783449657 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.78209583 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.78190274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.782405203 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785849212 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.7832259 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7913798 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.782929283 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.785092533 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790650692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.782634591 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.781928702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.785677426 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.78178317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.780121225 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.785170334 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.787100938 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782652962 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.782503766 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.782110792 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783192659 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783440349 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.790536258 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.778963328 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.781900835 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.782961966 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786250521 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.779215377 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.784321133 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.784765975 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.784468822 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786456347 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782665292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.782935411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785403855 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.782700204 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.782741757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.782548389 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786015224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.788633805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.790181543 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.78495631 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.788366956 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783968715 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.78624913 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.785533873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.783934394 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.783716266 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799275777 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.790229669 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792545143 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.78785332 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.783939194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790504415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.784803432 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.788234614 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78524883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785990352 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.784870536 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.784730087 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.782226155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785826289 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.785366298 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787180679 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.785831988 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.787255545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.784743766 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.784531817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.784696171 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.786127305 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.784835391 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.78525526 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.785509374 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.790890097 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788327986 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.78501594 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.787118643 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794579319 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786896694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.787455256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.786109842 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.786439334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.785728259 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.786960647 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.786035889 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.787543768 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.791664376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.788073915 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.795312171 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.786902648 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795815828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.785855026 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.788840194 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.793806937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.783601928 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.785945557 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.788284828 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.787138966 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795565966 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.786366577 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.785887894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.789436877 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785965761 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.786574747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.785941859 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.787137587 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786293086 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.787002162 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797241178 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.787855556 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.790764319 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789742402 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.784437927 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.787585187 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.786902452 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.786271231 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794165138 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.787546647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.789020892 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787138135 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.788988299 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.787231397 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.787935415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.787928216 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.78471378 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.787943868 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796996629 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.789334254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79139431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.787442744 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.799806848 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789299786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79711339 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.787711605 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.789651155 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.788323921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.787851401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.791943273 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.789444603 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.791042963 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.788128477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.789845181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79162464 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.788695748 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.793372212 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.789993645 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.790190818 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.790271289 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798694634 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807460563 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.790620716 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791765381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.787316624 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.789758778 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.792408386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.78921852 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.788837577 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.792053232 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797962658 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795227196 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.791741246 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.789963191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791104293 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789344808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.789727403 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.788770874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789790913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.79052597 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.79211762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.790596421 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797698814 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.790258049 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.792834332 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79399348 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.79225967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.801187067 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.790494485 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.793008773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791469761 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.789410292 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.791716316 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.791501483 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.789777071 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792344619 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79092889 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.791788494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796583234 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.796471781 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.795080407 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.791162964 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.791286709 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.793033979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.792833708 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79208764 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.791292992 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791688144 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.793757473 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.791443401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.794728523 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.791039683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.791051298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.793148366 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791021423 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794073348 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.796769358 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793323114 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.789236818 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.791447408 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792129306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.791840551 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.794538713 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.803565636 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79530497 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.799886611 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799563659 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.795996798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.793085105 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794826386 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.799531917 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.793086818 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.793993342 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.792598905 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.79571809 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.793714797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.796109472 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79320721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.801716219 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.794236488 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.793998024 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803327479 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.796148062 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794205125 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.794561198 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.797593958 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.794256307 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.790296264 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.793264962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.793777009 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802148261 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.79772281 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794249751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795820631 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.793548357 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.794459608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7974309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793851898 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.795937081 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.791244467 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.795188944 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794483925 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794503217 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.791212687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.795682296 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.794869574 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.796583925 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.800285388 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.791910888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797748779 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.796409826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.795920381 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795177273 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794509891 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.791516949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.791125977 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.795797282 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794832422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.796878018 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.800882565 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.795718017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.795878116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.79474221 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795049268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798826116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.805820149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.802271267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.793005093 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.796586257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.797261281 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.803159994 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796226358 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.795859534 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799468636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.799644719 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.795834732 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797055546 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.796219383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.798251695 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812405509 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.795636712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798564834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.797324248 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80329981 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.796571099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.792971893 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.796222125 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.800079238 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.799227471 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.802471447 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.796574544 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804029465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797198972 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.797790154 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.799389426 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.799510646 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.803695946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.800521901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797316526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.79650223 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.800901534 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.813537036 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797130456 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80675187 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82363992 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798062266 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.79974822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.797548365 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797055674 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.797256589 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.800978518 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.799023639 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.797746253 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797557572 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.797666035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.799236017 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803876814 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.800316462 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.797470567 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.797737249 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.801825969 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.801510655 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.796140888 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.798416947 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.798940402 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.797513652 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.799555167 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.798891309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.799698865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81402759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.808882329 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801064209 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.800123531 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.796464817 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.804946489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.802322874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808021392 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.807466539 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79895029 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.799725846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.80250712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799413804 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.799212627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.801662081 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.800472965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799674653 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.796841233 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.814499066 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80860068 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.806518562 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.801637475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800805097 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.800817161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805592849 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799789138 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800531475 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.803609267 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.800751376 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804199249 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.801839097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.799349936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.802673405 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.807054662 seconds)
  done (took 1067.030697613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798943412 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799845272 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798225597 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797390682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798479087 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797993194 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79993855 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798353051 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.797723811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798125737 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.798567923 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797631708 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.800387194 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798946916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798025595 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798238409 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798619533 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.800191317 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798521317 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79942462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798475627 seconds)
  done (took 39.507204744 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.801877619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.801728471 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799386513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802209602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798696937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80121109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803162055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802451598 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801960043 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79933365 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.801720253 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801826645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.801268786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.799013052 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80008893 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801720308 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802231655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799848542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.802508833 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798848079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801657559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.799685882 seconds)
  done (took 41.358865904 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.804411792 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.802362449 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.803126999 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.80029184 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.802726225 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.798856412 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.804031617 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.803077685 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.802470904 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.804764889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.802090168 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.806834388 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.807806257 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.807105411 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.806932447 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.803435144 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.946719719 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.806161876 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.804824754 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.804711861 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.801438311 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.8114391 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.802543228 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.801018406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.80386195 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.804753304 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.803664693 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.803209184 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.805010566 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.805549525 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.807545432 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.802913988 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.804746072 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.807094453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.804580993 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.805810204 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.808204796 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.805315182 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.802475753 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.806883857 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.814338237 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.821298259 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.805032584 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.813114231 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.80535869 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.804336202 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.807276168 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.810205412 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.802221111 seconds)
  done (took 90.342623676 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.805866478 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805327847 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.802645205 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805397933 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.805033082 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.807788736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.804903855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.805018597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.803193939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8026572 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.805120392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.80341136 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.803089961 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.805808259 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.805575344 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.803074028 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80304138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806119988 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.803360504 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.803063795 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.803558443 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.806197187 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.808417963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.804246432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805986667 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803706466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.802809965 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.806796518 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.805103084 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.803740923 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.806369756 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.806923345 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.806569918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.805447229 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804239205 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.806313906 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.806706133 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.804642681 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.806777365 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.804689412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.806989293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807116199 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.806796185 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.807037291 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.805153648 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.805447134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805424263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.805254781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.804082916 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.808524231 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.809259193 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.806934517 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.807616899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.804879975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80785389 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.810238269 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.805496716 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.805481629 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.807747772 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.805398701 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.805997411 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810387023 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.806602658 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.807892007 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.807410075 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.805399597 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.806100255 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807817825 seconds)
  done (took 124.531557675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808949089 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807879469 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808288413 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810933229 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809239316 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.808808776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808558445 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.809978607 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808028789 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812201351 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808677273 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.809142371 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.809872691 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.80961637 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.809687179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809979423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.809825913 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809420455 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81024774 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809523041 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.8099035 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.80949118 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810770872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80992971 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810732167 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.811808075 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81012863 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810427953 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811203134 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.810367741 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810852755 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81157573 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.811019229 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81122177 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.812347356 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.811081149 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811831487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811205183 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.81212059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810845944 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.810100108 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810817803 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811742018 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.810682601 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811145709 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.811137538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810968192 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.812908098 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811699336 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811516949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.811199453 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811421729 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811188562 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811153365 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.811364689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.811017029 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811268568 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812387293 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813012517 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.811842981 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.812028196 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.811651819 seconds)
  done (took 114.004136635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810686887 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811350155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.808589126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.810057618 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812397106 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.809490199 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811876001 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.811472514 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81206903 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.811720632 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811687662 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80938304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809938378 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812474895 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809289473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810884044 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810020319 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810418717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812623413 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81022622 seconds)
  done (took 37.963159466 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.809317051 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812130747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.809464176 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810830505 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.812596404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810246797 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.813096728 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812612519 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810516082 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812925717 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813426682 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813707198 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811074652 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811700822 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.813471947 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.810173737 seconds)
  done (took 30.734295848 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.810418958 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.814130074 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.813452844 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.814033691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.810476148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.810625876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.813219188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.810991137 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.811273329 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.814345449 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.81438627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.814482118 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.813872531 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.813985573 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.812438888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.814174539 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.811661664 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.811284257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.814353991 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.814256321 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.812699652 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.811204715 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.813420648 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.814319489 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.81218508 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.813063677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.81339469 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.811471863 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.811914239 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.816291171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.812215009 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.812310296 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.813053278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81271088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.816040446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.813648536 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.814979374 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.816091783 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.815752228 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.815349873 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.817943589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.812789983 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.816335335 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.815043239 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.813461912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.816139073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.815395639 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.814803956 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.813261407 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.814240007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.816546223 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.818714987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.816072316 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.816061572 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.816326631 seconds)
  done (took 101.51337754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816707783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819015307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.814145301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.816850542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.816828502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.814731377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820113645 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813379734 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814955294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.816115144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815724667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81671847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816052627 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.81654026 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815584209 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816345518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814401635 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.816776424 seconds)
  done (took 34.441414112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.814257189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815133015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.817208984 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.814336885 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.816287004 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81836187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815361202 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.818515191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819898993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819308406 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815411577 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.819251835 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820534272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.820151654 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815492674 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815866351 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.817533892 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81834251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815664541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815951112 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820889438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818400961 seconds)
  done (took 41.734389456 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.817937711 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.817472574 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.835149926 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.860076271 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.845076247 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.818436905 seconds)
  done (took 12.74616764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817575285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820593175 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816416344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820105238 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819739348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816676906 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817173395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81708641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818313924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817700474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816493646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819569483 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821883236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816401937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819633523 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819200936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816401782 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816503782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817545892 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819986522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817345669 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820217893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817710895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816567348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81689715 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817110626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820388197 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817375299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817129779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819744508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82053532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817433928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821137149 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81904851 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821009634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820425877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818083533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820493608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819855025 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817668784 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820990585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820476158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82171543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818463582 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820819768 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819062249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819125802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820410656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819173983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821680669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821067063 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818439638 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821656211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822896793 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822521467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821933935 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81976711 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819582574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822044927 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819884332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818857592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821292785 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821271643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819067979 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821715272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81925972 seconds)
  done (took 121.829855239 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822105305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819638183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820137127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82055401 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819792358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820401385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821167045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820290921 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819713053 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820138089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823017197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822472238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819874877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820079387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819637765 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82038161 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8222331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819719681 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823800307 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820043274 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821317116 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821594886 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820093735 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821107361 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823105187 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82058951 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8206901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821444064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820347414 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820766896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820525809 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821573137 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82190578 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82155476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822302856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821682995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821448815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821691995 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82417861 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821636764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824823617 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82205955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821366085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822801857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821082244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821833362 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822202912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821735003 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821991845 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822448015 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822946632 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822902099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822377042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822254004 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823310699 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82220629 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822368452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823146802 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826178265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822711666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823847642 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826799458 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822974366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82326926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823204101 seconds)
  done (took 121.996200056 seconds)
done (took 2486.624140191 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.84448542 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.011040068 seconds)
  done (took 15.614326699 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994566568 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.945273643 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831563667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860493097 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.831036959 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.825020478 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.825753465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.831454677 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.831299009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.831980941 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831206573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.015893801 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.837085182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.831204479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.831825651 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.92490396 seconds)
  done (took 51.649406325 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835276603 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835382352 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846425798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.837404636 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834921089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.854948276 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868655644 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.838613166 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.894192081 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.859484555 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.959722343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.846392592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.834987899 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.888876241 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.84728932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.849303889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.935920276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.910840622 seconds)
  done (took 35.344293769 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913921419 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839302072 seconds)
  done (took 10.527415783 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.839634585 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.837479224 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859242368 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.839074818 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.838230434 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.852584855 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843663061 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.853131806 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.844391188 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.845304904 seconds)
  done (took 70.220965846 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.840546828 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836728268 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.836542816 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.834352865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.828871672 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833746412 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.834222804 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.834999334 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.533786984 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873510813 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.843240562 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840512142 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.835648955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.836686622 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.83268251 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.858043732 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.99755831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.833854747 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.833943855 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842343868 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.837335532 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.897713505 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.849602283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.836574687 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.866124799 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.532047907 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84511998 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.842697534 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.957026664 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.834442827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.835534778 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.836918867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.838333577 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.216632258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.168993581 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.837689853 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.845071819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.844553878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833643785 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94765866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836551914 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.842117651 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.786035594 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147423968 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.934864618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.879978515 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.193706298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.841369878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.838393891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.866957803 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.83942647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.838323658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.850260323 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.352963877 seconds)
  done (took 130.966083741 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.834461327 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.317225111 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985746141 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.8350345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12540937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070315893 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.83639723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88320399 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849619306 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08552388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011912773 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95437488 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833993478 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.831859076 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834609888 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.831457443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.982685891 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.905538675 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834075653 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.83828993 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869083789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101441965 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960314889 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.972421747 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858645807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061218774 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961002567 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953099552 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.837555965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832158122 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902345055 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.835976946 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.832805604 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832907829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99885226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940739234 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930452922 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.837447903 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833202812 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834811555 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.856926857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055484317 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944340167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.973362946 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083706284 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063449741 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.83633744 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833015024 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.839572518 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026093073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.050800044 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.089790266 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964451705 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836473506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.180375243 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832996585 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910141208 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086740694 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068339927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.948503892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879645954 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835334623 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833186891 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152141618 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837331169 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941425688 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.231757908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836845042 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944292426 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950870123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069689338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076718384 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866931831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.83587947 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.872295049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120490208 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909865861 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090254041 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.86310191 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836917493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928844321 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.841180736 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0097095 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.1559023 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104785829 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879519312 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.843703571 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.835858946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08364983 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088177187 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110466063 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080430325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003849628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.891359487 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836266496 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.835416459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.87054875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969662312 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840271074 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198927803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084334094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.612152359 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869712133 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156036406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977820238 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840227356 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.836649779 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.839156518 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043190448 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881314496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.838795825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837496029 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084304504 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.785775498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.963788014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.545917686 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.903700496 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840611138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103820129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843215193 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085602645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842183695 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151331513 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.400113087 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883065196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.034137091 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.084797871 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.841078859 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103350735 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.15402046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964498161 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088006362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578231256 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843293202 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131413113 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84567712 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.870952436 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008763968 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840191922 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.017729997 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.8503137 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147952145 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866262084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011146116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.122786853 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116968083 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885618163 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89305498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.874271709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.973876136 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841372947 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.814199222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024123525 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.94078852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841015475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.414431363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.838098327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988087952 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.139503677 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865355898 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912525273 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.841579934 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84439787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934772367 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871080065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.448076348 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840950097 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010996933 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.802109899 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293486185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.839768259 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.150688412 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052771189 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843522451 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849475486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.647897481 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.840079095 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.993047145 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000092191 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.525935641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843739339 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059054465 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84286423 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974129882 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845157654 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.845786968 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191557302 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.920594264 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.840227815 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.85014384 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.841201496 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.842065918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071070149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.872097013 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.562692198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9792844 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091836501 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.154713334 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.106111358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893775734 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843682792 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107780133 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871582588 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.911197435 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.845898459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867640054 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087486069 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845681053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072040347 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131303236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.864350019 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894077246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.845411555 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892354853 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.842574422 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984188082 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941313229 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845770952 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847096398 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96130023 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971427278 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.039324441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.844986259 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.878008763 seconds)
  done (took 948.03915049 seconds)
done (took 1264.121078384 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.843697192 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845433976 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.830218134 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845061306 seconds)
  done (took 29.145223043 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851091049 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.849519722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.849274659 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.849599061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.850607598 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.849335399 seconds)
  done (took 12.880478557 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.923259705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.845889232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844847126 seconds)
  done (took 21.395619838 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918783976 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260955557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.955868726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.29482143 seconds)
  done (took 10.212610896 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.85217852 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.851318646 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.851387798 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.852799841 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.853668072 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.854204155 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.851894304 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.85234843 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.854858768 seconds)
  done (took 18.457554667 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.099343538 seconds)
done (took 97.971262393 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.818357485 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.191145092 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.925018128 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72855077 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.371300012 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.915583025 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.320961911 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.978269102 seconds)
    (9/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.281643948 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.846975895 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909262316 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.141280075 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.872971535 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042884383 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.272997601 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.850226625 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.349306829 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.023116275 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.03584637 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.991418881 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.933267892 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.206827543 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.49327489 seconds)
    (24/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.24522871 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.188069943 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147027124 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.152378719 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838886632 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.001214527 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 5.610277272 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.763419022 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.962766319 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.643201846 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367833309 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.099312699 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.893823092 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.976062806 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.832172301 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.044445273 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050338244 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.371511991 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223200098 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.851268277 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.033030272 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963475302 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108764402 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186961243 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065737401 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.713986857 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.87834675 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.946703892 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.876217474 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.924895662 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.906331773 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.92982345 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.834727784 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.434651882 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859321977 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.658802847 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.44627652 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.841732944 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.962152108 seconds)
    (63/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.100421721 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.850566346 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 4.712879696 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.458219781 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.922751625 seconds)
    (68/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.280187683 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858545573 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.835002688 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.59903683 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.85990021 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.225585286 seconds)
    (74/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.980844786 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.851464213 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.416996361 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.017196742 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.851862594 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.89490708 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.953401524 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.97823759 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.444051429 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.935292923 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.876242318 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.974894451 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.930494952 seconds)
    (87/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.933596137 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.84867487 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.937202243 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.835139232 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.887859911 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.909100183 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.852306337 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.892967978 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.849359411 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.942413139 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.745934794 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.852306319 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135417287 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.851490655 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93299457 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.139942079 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855148891 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015458916 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.077559943 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 4.810214703 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.838208319 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.499306486 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.947986458 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072733805 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.536984116 seconds)
    (112/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.138735621 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170827429 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.85692243 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.094080555 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.732851612 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.989633771 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.155365193 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.988686873 seconds)
    (120/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.881986042 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.182161182 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.295854031 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.876126011 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.836602813 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123798989 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.22210816 seconds)
    (127/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.35418844 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.878570106 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.945769444 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.072153006 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.878075868 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.108254743 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.860853231 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.87765478 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.103463687 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85602362 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.950866267 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006325669 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.144619379 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.027326515 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.762143535 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.99245254 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.155416387 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.903666997 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.073002866 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.880433443 seconds)
    (147/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.912002947 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.857202392 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.044691891 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.412359254 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.861675012 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.973424458 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.85340965 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.743682425 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963501739 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.90284723 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.187750525 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.877235922 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.880667875 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.8537238 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.013834021 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920763669 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.031807331 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.844787525 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.269787913 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 6.857237292 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231800596 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.809508994 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.841104096 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.29485765 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.963295237 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260056267 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.365877022 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658299532 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.204222795 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.967946341 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.244846558 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885453034 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152070102 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224065211 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.922810263 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.85417427 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.985851969 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.520819125 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.856338443 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.942812103 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.439474046 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.84166817 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.256264041 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962883469 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.970410893 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.242208373 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.186779272 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.951641413 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.870762342 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.179674078 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.558527174 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930456892 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.724453156 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.053027088 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.038967764 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15950083 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.544179286 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271325929 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.815297536 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886730748 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.459432363 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.037167258 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86167376 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.165050037 seconds)
    (211/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064394529 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.59112297 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.074278624 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.97336012 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.167516908 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.259079215 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109195789 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.890411723 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.104791768 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.88053336 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.738632274 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.858207861 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.079577366 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.985926831 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.921420232 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.701188338 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.996783976 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47553257 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.880805752 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884012775 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.112962836 seconds)
    (232/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.065305401 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 5.666983524 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.902738012 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042250209 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.006292305 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.857253339 seconds)
    (238/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.00772478 seconds)
    (239/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.943952493 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.38250005 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.458717877 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187132889 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.876600591 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.933319323 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.516967242 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.202742869 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84660437 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.044593289 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861118616 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.879818974 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.86211636 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.017222382 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190988758 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.193524855 seconds)
    (255/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007361546 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.960502594 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.984715234 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.217209584 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.032875453 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380631033 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878085982 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.883463709 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.932342006 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.885252688 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.056915605 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.908391272 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.250038986 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377205335 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.149755214 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.845932966 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.04926442 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.86274317 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872783319 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.460166095 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.246550903 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.848547796 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.410669125 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.508202576 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.868447338 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951020987 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.942139551 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.046687775 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.510452636 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.035343588 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.489655889 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.085999813 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131078042 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85013581 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.140051642 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.050118877 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.08061276 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.418668683 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.973679519 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.92155253 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.165580013 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.886282914 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.408526475 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.078971968 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.846630693 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.963297057 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.889443761 seconds)
    (302/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.958597727 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.237276468 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.890494593 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.239060187 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.787299664 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159967128 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.804611199 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.866615908 seconds)
  done (took 1021.773935309 seconds)
done (took 1023.572843256 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.897340562 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889954084 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873108642 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.894119234 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984950475 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.903156928 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.883925468 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.875540975 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.920792558 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.923180461 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.871938799 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.901011422 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.875233025 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874066454 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873165572 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887278599 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.183021331 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.905648632 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.891291245 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882138699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890607918 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873116383 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923988802 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.901302575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87791454 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.877124471 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.877893585 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893827589 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986518921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.878267939 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877990555 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884957166 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184394082 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904349728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.869462925 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894828865 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886927259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884325076 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.878708584 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907202754 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.328029945 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882825724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.877422116 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877337551 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.876142769 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.8801926 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.87751493 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.882959952 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887782369 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889544393 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326745674 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.897338509 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.881066109 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.876166692 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887583243 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.876991762 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.879566982 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892729081 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.896340853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893079924 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.17579656 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.910221561 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.877601136 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.893021623 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884987088 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.361556587 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.87912953 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.88253129 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.329214799 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.890008442 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.361358009 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.893515219 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.878608361 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.892454197 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.9100522 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.185251017 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.90056803 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.876944935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886005241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.876431933 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.886804124 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890862906 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.883319481 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.877780221 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891915713 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.908780581 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.888300138 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879824952 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.886424511 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.897685858 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.887872826 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.889543245 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.881802759 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.873761444 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.887661839 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883352705 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.881705722 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.882069222 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.885126078 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889873203 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.330883976 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902827452 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876858885 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.875424189 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.877588078 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.895660937 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327961373 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.887751392 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90104644 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927054849 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881952002 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178397389 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.912094997 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895800483 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.888816451 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.883186925 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.874847018 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.178580793 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356968291 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.902110302 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.882813449 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.878267097 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895492023 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.881449869 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.875484561 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187715027 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.911068702 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894453929 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001383091 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891323727 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.912236721 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.880394413 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.883921173 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.912745747 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896246072 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.911980417 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.883673376 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896360286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.897619076 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.878225921 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.891865766 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.893342494 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.881734082 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.88778524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875835149 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909401412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894421189 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895819129 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90225461 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.003302464 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879028667 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.18123322 seconds)
done (took 295.306171746 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948932609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.870225572 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.97643062 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.877431381 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962249462 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.964399199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.876216142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.875879018 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874913629 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25842257 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.875317324 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.876613141 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.870568411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875474097 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960931896 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877611025 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875688367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220631825 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87905938 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.950565826 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.876729644 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876760182 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877760905 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.261040629 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.870895506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878985533 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.957447049 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.878873727 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226895439 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.871377137 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878583232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226373448 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969538364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.89736311 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.890062436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.885839476 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.96344424 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.883130887 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.960560599 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.96049468 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978450878 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.919476444 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.874617978 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.874178747 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882649822 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.881484199 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.877098174 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.907144986 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871819006 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.877836934 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.223305776 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889155952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.886826299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.877954519 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877686324 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902179868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.878453101 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.881431882 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.970843037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.882062958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942582733 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263166781 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260307611 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.880781226 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878227098 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.878375707 seconds)
  done (took 184.968209446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.949191639 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.953723354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.94967551 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.886323032 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.930118262 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953392913 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.885464849 seconds)
  done (took 15.318990783 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887441065 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881426317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.932485588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.931485518 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.882080743 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.031522517 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880814248 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.893401185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878187825 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.934266892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882345451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883256079 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.889012049 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.880900588 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929813907 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893850482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.998132466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883003391 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882556313 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.038743461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879102358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.88872818 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.936514684 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895782577 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.882803793 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.888999552 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.469643892 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88249624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879186385 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.881770575 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879519877 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.922390266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882605995 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878369544 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88034371 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.000254905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.884531848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880610733 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.883056127 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.882303027 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.882302981 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883728958 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.88482664 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879757774 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882995669 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.907078673 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882743084 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.88372917 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882227845 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883859103 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.934132155 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.883622458 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.880909437 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.880992128 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.939126486 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890159074 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882996129 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881019506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884067597 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880374335 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.040341215 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930756209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.883379536 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932471045 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883999829 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883504822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.883319865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.883199509 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939635137 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.883377945 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931860951 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881671474 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.042725103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.908836948 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884453138 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.886825696 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886964522 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.884962543 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.884146849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890875955 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881646208 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.886459612 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.890571502 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881704564 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88252386 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.992273574 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.994446746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.883459596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898908423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.893901234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.882640554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.938664416 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.885040204 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.882826405 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93785399 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.001359866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.940779165 seconds)
  done (took 207.142095636 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.888866817 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.893579447 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.886604895 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.900854785 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.886287063 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.884909933 seconds)
  done (took 13.156197509 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.887842183 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.88662802 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.885791136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885228259 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885629226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886520178 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.887197556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887528484 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889417346 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885548377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.886592189 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.887697796 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886930886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886539259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.886860202 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.885444036 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.886580613 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883808825 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.887264821 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887063566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.029537185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.88705347 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.323026795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.888437659 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.890718715 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88648384 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896119941 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.88759131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.887540606 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.89351703 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.892608135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.888497899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.889404578 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.893316086 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891928519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.889874267 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891501164 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.890508074 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884699813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.888862267 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888836246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887579936 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888477165 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.88909097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.890738084 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893625007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.894205201 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896469295 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888767847 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.891069657 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.889049772 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.888047845 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.889354707 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.890021642 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.892629886 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894557599 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.894312893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889183037 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888560187 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.89091117 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890554226 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.889970134 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890964587 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892627886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.89538252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.891460855 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.88731903 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889373756 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886047982 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.885798788 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.887366108 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.881850755 seconds)
  done (took 139.405713047 seconds)
done (took 561.817594161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.107453838 seconds)
  done (took 8.918170895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.954686563 seconds)
  done (took 8.864657293 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.342306084 seconds)
  done (took 10.160001881 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.889212721 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.885617122 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.882492582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.873429002 seconds)
  done (took 29.354789768 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.175745691 seconds)
  done (took 8.981440733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.895779512 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.882905112 seconds)
  done (took 15.664079168 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.965776169 seconds)
  done (took 8.781950854 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.927438494 seconds)
  done (took 8.745430066 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.886395349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.886416663 seconds)
  done (took 15.596076882 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.853949792 seconds)
  done (took 8.66465577 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.557366051 seconds)
  done (took 11.387944175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.894401151 seconds)
  done (took 8.731062227 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.938875624 seconds)
  done (took 8.758131816 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.082138028 seconds)
  done (took 9.899334729 seconds)
done (took 164.318678326 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.882459208 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.878934738 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.876608932 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.871660326 seconds)
  done (took 29.323882666 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.914757351 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912076042 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.912495837 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.923079229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.913611289 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.911307201 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.904552839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.904045498 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.922967892 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.914889725 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.914968419 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.914059405 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.912328567 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.904584242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.914768574 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.914198527 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.925300557 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.912860954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.904048364 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.915787777 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.879325595 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.925272421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.915227106 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.879095817 seconds)
  done (took 47.676161178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.076413843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.953179422 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.031833685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.931105004 seconds)
  done (took 9.801315667 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.929907221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.933739012 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.943252747 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.982959388 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.010316579 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.939885788 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.90551164 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.901457246 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.886278372 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.931097618 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.006547811 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.946672148 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.014597122 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.876425694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.081523586 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.875987132 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.876341602 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.929804712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.980161731 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.013962739 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.875512921 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.928396013 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.933483107 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.945450697 seconds)
  done (took 48.458921055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.874778376 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.883590645 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.883593444 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.875743256 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.87513649 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.87547087 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.881849074 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.876472697 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.898541985 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.876056754 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.87457208 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.875139206 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.874158083 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.876817276 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.875479559 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.88855764 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.889338428 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.876344196 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.881226785 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.881877742 seconds)
  done (took 39.403355539 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.869016648 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.72443661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.221246199 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.126497157 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.870298122 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.869147962 seconds)
  done (took 31.489005089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.889072176 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.939855275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.885919504 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932391055 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.014144056 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.883205487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.875519326 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.946347631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.988606683 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950712319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.894924816 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.903254918 seconds)
  done (took 24.910193415 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.887427709 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.869755574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.875339252 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.885342037 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.886650054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.883543951 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.881587939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.870311532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.888645963 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.894317234 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.885042564 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.885663793 seconds)
  done (took 44.404493999 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957986873 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.915465809 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.869895373 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558769837 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250228857 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079120064 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.521682303 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200023247 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.87209298 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141100629 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.803580159 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000363062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152845241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459799323 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931885594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351895395 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194369731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096144389 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920687256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580480844 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959077921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130639668 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.654514451 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95362294 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10814207 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029690732 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.315323472 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897451919 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02946135 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93270179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908783341 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896898001 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170344942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270384113 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001666687 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90698334 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51367725 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.613612372 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.882088217 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.744541701 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.6130138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.022215457 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907524775 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897543447 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832684736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101321185 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277775677 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.903952433 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608813888 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897889851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909856586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993567901 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.902049022 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.713480244 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810119858 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.902779831 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.895620059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905495119 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471011107 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99912749 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150446108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.875921351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.990990821 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579652301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273351052 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.042886034 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.901873643 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904402791 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834207291 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.657979702 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954011841 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248384969 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.919144319 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54893305 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205208599 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.94683399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843873647 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182911596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499268799 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.87650476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129123703 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900330724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836245196 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.849354416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833425464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149835668 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935085671 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656402638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936007382 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227974154 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911609535 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916623697 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925164986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123021268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.786358376 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899322822 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.660083515 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051819977 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922851761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234338049 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835384214 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.90510839 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158078155 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.112660572 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.032556888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392374084 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059988471 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530996622 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956888459 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.10209371 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953359994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.160422561 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953502588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017461354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959146999 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900276249 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198478358 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.539926395 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.040710066 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.922695264 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03025425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.203441222 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926097635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980534095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907583284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898625715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663463823 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452722346 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.90127862 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.904139462 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039760007 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953498306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.902477458 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851314231 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.53110215 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.924536757 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.917213522 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126235415 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.534031146 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219791573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835592593 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230301515 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95914414 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122377818 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.541598406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.977238985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159186854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032415454 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.071707019 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950397965 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917617286 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997553304 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921008444 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.094466866 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197383393 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.903268411 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.902552278 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.672907448 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939287991 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902937148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.90844808 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655116252 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169878554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924558911 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909850209 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.793017348 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.919165761 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969409848 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910544558 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916490075 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.442134988 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624907082 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91041323 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.492550301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126300272 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910884173 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.659419331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017886897 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.986345786 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168881759 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958754249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.838020603 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615347478 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.597417682 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90504419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840019047 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905129464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913161398 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91612636 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.102403269 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171377029 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944012686 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.593344948 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.946687978 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915546246 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.910051095 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905131773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.417059917 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.02503746 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144702155 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955595639 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050323873 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.91987425 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83998068 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910141357 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910751691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906234576 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906419399 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939812918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.600248568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2823671 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169165439 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.518667341 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92109771 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.639412579 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.965619472 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.908129856 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706259958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135808314 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.943926772 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919683712 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.917914053 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.691448063 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.604333064 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477986911 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221336073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195457652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334070971 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.172705618 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.938715216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245014433 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841956932 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465299774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967492044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258406605 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853615287 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002477831 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.552494144 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254820387 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922093713 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135773351 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286724684 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.766312955 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93336697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120051358 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944682008 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.112889595 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873711478 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.432226898 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047102202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603577869 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119772339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240162706 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.562176414 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.073629802 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.9082186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576747329 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988669914 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.619789436 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080999706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171709572 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822587011 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385538445 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916196045 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134158945 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247568376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.121338533 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.033148734 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844710565 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919565497 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918718107 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91077436 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90992366 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.77376309 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.162901025 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920205116 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843460345 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.088369471 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193630664 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.806586757 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.915362341 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911335581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194546767 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505704877 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080080862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.066510973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.435807571 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915735496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841592103 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838997188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.598539207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908833826 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880621804 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10269173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.002728957 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816531527 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04468025 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153211383 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158282773 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.914620441 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163694502 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171845812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599778533 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92464617 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.00016021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.558179594 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.026659248 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912038614 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14803728 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669830374 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139210873 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922457558 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.861122401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911441826 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126659622 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912934266 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811076842 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148348607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.639501148 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.016424855 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222192839 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982599599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.797749597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963102596 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.00577435 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922905734 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991271132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923251706 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.923727823 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92258267 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958670249 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82058222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.041375858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.92668153 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00660732 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.059461109 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437747425 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.920677061 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181123316 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273524689 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228810741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97558777 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920922767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922223139 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847818622 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062713134 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140103958 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187284256 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045625211 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.028527975 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940055534 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.5804103 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18691789 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16043963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190127328 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.809893048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482001157 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958801741 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.915306753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926838887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.127264817 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118922769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209397652 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052218713 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053000369 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281505152 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189958701 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.916919069 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916865399 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508139351 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.038154478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.584253778 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956723915 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813248174 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198719386 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926324109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299612125 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94008985 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.071761513 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.689434461 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661182529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207690356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902382442 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97890526 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183633753 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289051273 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227362999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98343529 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929405736 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.02395414 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064502064 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.778578395 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.9196972 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916829879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966665641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.628013384 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927461507 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187766803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225452149 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.915282143 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.780579561 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943523397 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929171014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141795885 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186196136 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172244698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927842572 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923644983 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.737482628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186878218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975008973 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853323372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.922579069 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016779471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167821432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941954838 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.371458634 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629763943 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202994589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.918033359 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940742802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136762182 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282030977 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235039314 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451166989 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122361612 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507891359 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55132849 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221886535 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922821811 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.122326264 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224478595 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.922110512 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.058411568 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95989851 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.179957131 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227004525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.015944626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.636750332 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.891026319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260801753 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474863502 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859552908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.982567075 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920839443 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052933003 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932820325 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.79444767 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135162943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.684137376 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205319015 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.926310999 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.912526978 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.658745364 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.271271153 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959751438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06382314 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921711592 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.596259412 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.272869864 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177753127 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.06575844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.933205397 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.92577057 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920854003 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908856659 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117946566 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.11938906 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191119485 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.09428238 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.961705754 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926795736 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.138599852 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133363774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.815042182 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066147123 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066517054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966780022 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.828339174 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424847442 seconds)
  done (took 1694.606726214 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963151402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.935171886 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943570899 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.983024017 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937203711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.016749377 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.060936592 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005388679 seconds)
  done (took 57.703243888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.922214225 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.141591036 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931721836 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.923524811 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.932581606 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.92339363 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.093233198 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946684971 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.932652291 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.934148332 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.925319779 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.929169283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243996181 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950095774 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.925202143 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.909950069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932186468 seconds)
  done (took 75.378409452 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.924174436 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.933232284 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.953638134 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.936624988 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.934250606 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923634669 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.730336207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.926972919 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.926411546 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.051316437 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.563996567 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.928876747 seconds)
  done (took 87.593630548 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.932503374 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.931043452 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.931345766 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930861727 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.931261893 seconds)
  done (took 11.519513356 seconds)
done (took 2204.112205565 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.178854316 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143265603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.159517822 seconds)
  done (took 6.16329472 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.07578732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.1227854 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241972368 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.263678155 seconds)
  done (took 10.56807398 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.214292658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.297262179 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.136764698 seconds)
  done (took 8.508500588 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.329441074 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.941744461 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.039462718 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.924508608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.926794234 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.927233405 seconds)
  done (took 22.640337629 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.930815531 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.933798909 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.931043519 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.933692207 seconds)
  done (took 9.589176619 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.911426198 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.648916896 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.914397123 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.930116481 seconds)
  done (took 21.267417659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.678381193 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.690383761 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.674104984 seconds)
  done (took 9.904644693 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.616714164 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.863583916 seconds)
  done (took 9.342706069 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.186729496 seconds)
  done (took 4.048117256 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.061423866 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195578714 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.39329175 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.429184267 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.48658725 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.825542978 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.248094746 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183028997 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.320188823 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.37852627 seconds)
  done (took 25.383501334 seconds)
done (took 142.765379888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.307165139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.172674514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.137795076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266984739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.162222083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.136431238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.122455714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.248462054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.770443171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770248238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.265681134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.165527487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.070344609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.169392923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.070305053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.170247491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.162210961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.311501972 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.960752057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.160815287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.123926651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.901731386 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.110785369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914907884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.164661155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.088330881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.480561227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.172136891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.112395698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.490354871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.091463895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.314368126 seconds)
  done (took 174.430796298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.692616766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92998966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929516551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930131407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.329153905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931319458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.930403038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930729854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.096638914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.082073244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930407213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.32129451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932891582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930702548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931757599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93019123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.298510899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.761225082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947641997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951516908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957090262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.290147766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.961099247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.382312264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.301369602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95990635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93199255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959560287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.934825016 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922222874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946079285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932000085 seconds)
  done (took 210.063478002 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.931313707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933648187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931796694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932677855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934956676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.930367507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935536961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932413403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.712870538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.708848601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.94568401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.942016449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963376915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932366098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.942956926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932652501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.942928997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.943516618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937374517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943826341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948175172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.747141014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947529567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.752470704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.943181671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941358027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.933462029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.94205449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94422618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945490322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944318385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.933488875 seconds)
  done (took 223.11723242 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.129163205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.940031625 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.940831189 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.877234693 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.940033479 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.939397642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.936953045 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.12885482 seconds)
  done (took 19.715650869 seconds)
done (took 629.202710835 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.387335285 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.23154591 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.117086634 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.96487291 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205000253 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999470413 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.960430536 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.022310204 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.138500997 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.034304045 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.616384377 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.979631049 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.709362818 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985103272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.092609256 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.016648362 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.509464791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.59540604 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.13751004 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.023507853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.129910974 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.905130937 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.037629987 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.201756272 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.718857235 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952691365 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.117510446 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.514535564 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.971782873 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.126627692 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.66300874 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.350591547 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.971792998 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.958731291 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.014410058 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99504857 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289916352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.969942398 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.084525159 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.701187629 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01506736 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.038422835 seconds)
  done (took 107.325051778 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.933784007 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.93130187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.930408693 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.932709682 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.931878549 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.930696507 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.930683917 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.93021132 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93156902 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.929975841 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.930646162 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.931558755 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92942098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932626423 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.930183169 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.93000565 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.932699632 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.933617187 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.930656336 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.92997016 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.932195897 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.930457078 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.932660689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.930612467 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.932924573 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.931923201 seconds)
  done (took 52.102371023 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.942640324 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.084095582 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.168871876 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962817595 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.943094216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.947612706 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.962633944 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.949253157 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.946081258 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.94622598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.035342754 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.950552999 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962920102 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.170356565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960039906 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.945050188 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.944662179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.944569453 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.09151926 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960860556 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.964430853 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.949716834 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963117092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.958203923 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94792667 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945321051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.948679356 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.37880799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.953864208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.038019164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987974013 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.965977858 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.334019246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.178742369 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998122626 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.952189942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.945980879 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041736119 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.951469828 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.946151402 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.96391962 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.95092983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.171284066 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.445125064 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.959976677 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.946947486 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.38804291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.048729886 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.986911545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957337554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.174578664 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.962549111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94786326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.946519382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.98263807 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.956245498 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.946302015 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.252250662 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.958371894 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.964240651 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.950845526 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.9472958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098842649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.954550137 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088063142 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.955595218 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.953642985 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.948114209 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.171834732 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962948055 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.447030366 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960289031 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.947530531 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.038715635 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.092073195 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.413324728 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959454415 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.102744776 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.350940663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.972043621 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.955539464 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370252375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.975613113 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.955462314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.948046671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.949430465 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.947266271 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.992133147 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.96360453 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.382949154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451740058 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267030675 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.975470671 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.963319856 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.949041487 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.25561075 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956070588 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.949084413 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.166763428 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.464990258 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.961913616 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955812103 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.432838493 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962660142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.968229678 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.957416413 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.177357117 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.963302279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.002195265 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.949869964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.956177285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.953060107 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.968493423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.956920776 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.949427329 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.423328976 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.059633375 seconds)
  done (took 240.710664328 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944383637 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.954928206 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.943520614 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.944448232 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.943118888 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.949180004 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.942902691 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.943744511 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.949208347 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.94357064 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.944316659 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.945480002 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.944402719 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.947022834 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.441297524 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.951393581 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.555468186 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.945507025 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.944981244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.946128049 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.626586848 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.954226507 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.945735596 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952838004 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.944214161 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942894465 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.944658601 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.966684877 seconds)
  done (took 170.185295123 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.948046447 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128648631 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.964315487 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.983875477 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956758111 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.945539832 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.972685427 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.96855173 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.953004621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.945261394 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.946668141 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.008361509 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.959783506 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.088503584 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.980016728 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.980199471 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055255257 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.955453097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.945910036 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.94606324 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.977296432 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944654937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009831377 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.075599166 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.966983465 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066648331 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.953945051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.949836894 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.94818548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.066495415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.96339892 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.009795061 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976804554 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968017217 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.071178496 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.06777839 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058700947 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980212265 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.953430335 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948249733 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947445719 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938430383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066029156 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968365546 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.951057861 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058864309 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.966698948 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.950510134 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.958233692 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.948713985 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.964330307 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.968432115 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.01809468 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.081514672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984118983 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.975701237 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976512107 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.251015666 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.957897293 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051730513 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.94243608 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.066503973 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971440808 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.935044486 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.947277273 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.951417539 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.975299984 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.980160041 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.053336441 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.952267693 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.045691588 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.981159965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952176321 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.941743296 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.94421482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061299605 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.062895904 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.978969182 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97983485 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.973193866 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.938977263 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.942140805 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.931052884 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.958492539 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.945643705 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060258534 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060441776 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.951544819 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940825127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.941793592 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.941677094 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.966908295 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.070278971 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.972508289 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.037719059 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.006478415 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.01116037 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.956447963 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.948868625 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.939027524 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000290049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.950183094 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.951223173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.282630076 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007007515 seconds)
  done (took 210.863270032 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.029361834 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.404752977 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988378871 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.990055646 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.219549096 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.35805237 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743440283 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.977791125 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.981595643 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.006726529 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.144840382 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.033841436 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992419219 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964798418 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.367848792 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.971108002 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.977473747 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.997676515 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.978585413 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.541282606 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.288272439 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.095814988 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.975856598 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.0973193 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.954697137 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.28147932 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.459121888 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.353373052 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.009882548 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.320535722 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.314936039 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.651599518 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.190727158 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.222783433 seconds)
  done (took 76.754136195 seconds)
done (took 859.809216514 seconds)
SAVING RESULT...
DONE!
